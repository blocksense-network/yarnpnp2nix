/* eslint-disable */
//prettier-ignore
module.exports = {
name: "@yarnpkg/plugin-yarnpnp2nix",
factory: function (require) {
var plugin=(()=>{var il=Object.create;var tr=Object.defineProperty;var al=Object.getOwnPropertyDescriptor;var ol=Object.getOwnPropertyNames;var cl=Object.getPrototypeOf,ll=Object.prototype.hasOwnProperty;var C=(t=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(t,{get:(e,r)=>(typeof require<"u"?require:e)[r]}):t)(function(t){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+t+'" is not supported')});var j=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),ul=(t,e)=>{for(var r in e)tr(t,r,{get:e[r],enumerable:!0})},Ns=(t,e,r,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let s of ol(e))!ll.call(t,s)&&s!==r&&tr(t,s,{get:()=>e[s],enumerable:!(n=al(e,s))||n.enumerable});return t};var we=(t,e,r)=>(r=t!=null?il(cl(t)):{},Ns(e||!t||!t.__esModule?tr(r,"default",{value:t,enumerable:!0}):r,t)),fl=t=>Ns(tr({},"__esModule",{value:!0}),t);var Bs=j((Im,Hs)=>{Hs.exports=Us;Us.sync=pl;var Cs=C("fs");function hl(t,e){var r=e.pathExt!==void 0?e.pathExt:process.env.PATHEXT;if(!r||(r=r.split(";"),r.indexOf("")!==-1))return!0;for(var n=0;n<r.length;n++){var s=r[n].toLowerCase();if(s&&t.substr(-s.length).toLowerCase()===s)return!0}return!1}function Ds(t,e,r){return!t.isSymbolicLink()&&!t.isFile()?!1:hl(e,r)}function Us(t,e,r){Cs.stat(t,function(n,s){r(n,n?!1:Ds(s,t,e))})}function pl(t,e){return Ds(Cs.statSync(t),t,e)}});var Ws=j((Fm,Gs)=>{Gs.exports=Ms;Ms.sync=dl;var js=C("fs");function Ms(t,e,r){js.stat(t,function(n,s){r(n,n?!1:qs(s,e))})}function dl(t,e){return qs(js.statSync(t),e)}function qs(t,e){return t.isFile()&&ml(t,e)}function ml(t,e){var r=t.mode,n=t.uid,s=t.gid,i=e.uid!==void 0?e.uid:process.getuid&&process.getuid(),a=e.gid!==void 0?e.gid:process.getgid&&process.getgid(),o=parseInt("100",8),c=parseInt("010",8),l=parseInt("001",8),h=o|c,f=r&l||r&c&&s===a||r&o&&n===i||r&h&&i===0;return f}});var Ys=j((Nm,zs)=>{var Om=C("fs"),rr;process.platform==="win32"||global.TESTING_WINDOWS?rr=Bs():rr=Ws();zs.exports=Wr;Wr.sync=gl;function Wr(t,e,r){if(typeof e=="function"&&(r=e,e={}),!r){if(typeof Promise!="function")throw new TypeError("callback not provided");return new Promise(function(n,s){Wr(t,e||{},function(i,a){i?s(i):n(a)})})}rr(t,e||{},function(n,s){n&&(n.code==="EACCES"||e&&e.ignoreErrors)&&(n=null,s=!1),r(n,s)})}function gl(t,e){try{return rr.sync(t,e||{})}catch(r){if(e&&e.ignoreErrors||r.code==="EACCES")return!1;throw r}}});var _s=j((Cm,Zs)=>{var ft=process.platform==="win32"||process.env.OSTYPE==="cygwin"||process.env.OSTYPE==="msys",Ks=C("path"),yl=ft?";":":",Js=Ys(),Vs=t=>Object.assign(new Error(`not found: ${t}`),{code:"ENOENT"}),Qs=(t,e)=>{let r=e.colon||yl,n=t.match(/\//)||ft&&t.match(/\\/)?[""]:[...ft?[process.cwd()]:[],...(e.path||process.env.PATH||"").split(r)],s=ft?e.pathExt||process.env.PATHEXT||".EXE;.CMD;.BAT;.COM":"",i=ft?s.split(r):[""];return ft&&t.indexOf(".")!==-1&&i[0]!==""&&i.unshift(""),{pathEnv:n,pathExt:i,pathExtExe:s}},Xs=(t,e,r)=>{typeof e=="function"&&(r=e,e={}),e||(e={});let{pathEnv:n,pathExt:s,pathExtExe:i}=Qs(t,e),a=[],o=l=>new Promise((h,f)=>{if(l===n.length)return e.all&&a.length?h(a):f(Vs(t));let u=n[l],g=/^".*"$/.test(u)?u.slice(1,-1):u,x=Ks.join(g,t),y=!g&&/^\.[\\\/]/.test(t)?t.slice(0,2)+x:x;h(c(y,l,0))}),c=(l,h,f)=>new Promise((u,g)=>{if(f===s.length)return u(o(h+1));let x=s[f];Js(l+x,{pathExt:i},(y,L)=>{if(!y&&L)if(e.all)a.push(l+x);else return u(l+x);return u(c(l,h,f+1))})});return r?o(0).then(l=>r(null,l),r):o(0)},Sl=(t,e)=>{e=e||{};let{pathEnv:r,pathExt:n,pathExtExe:s}=Qs(t,e),i=[];for(let a=0;a<r.length;a++){let o=r[a],c=/^".*"$/.test(o)?o.slice(1,-1):o,l=Ks.join(c,t),h=!c&&/^\.[\\\/]/.test(t)?t.slice(0,2)+l:l;for(let f=0;f<n.length;f++){let u=h+n[f];try{if(Js.sync(u,{pathExt:s}))if(e.all)i.push(u);else return u}catch{}}}if(e.all&&i.length)return i;if(e.nothrow)return null;throw Vs(t)};Zs.exports=Xs;Xs.sync=Sl});var ei=j((Dm,zr)=>{"use strict";var $s=(t={})=>{let e=t.env||process.env;return(t.platform||process.platform)!=="win32"?"PATH":Object.keys(e).reverse().find(n=>n.toUpperCase()==="PATH")||"Path"};zr.exports=$s;zr.exports.default=$s});var si=j((Um,ni)=>{"use strict";var ti=C("path"),Pl=_s(),bl=ei();function ri(t,e){let r=t.options.env||process.env,n=process.cwd(),s=t.options.cwd!=null,i=s&&process.chdir!==void 0&&!process.chdir.disabled;if(i)try{process.chdir(t.options.cwd)}catch{}let a;try{a=Pl.sync(t.command,{path:r[bl({env:r})],pathExt:e?ti.delimiter:void 0})}catch{}finally{i&&process.chdir(n)}return a&&(a=ti.resolve(s?t.options.cwd:"",a)),a}function xl(t){return ri(t)||ri(t,!0)}ni.exports=xl});var ii=j((Hm,Kr)=>{"use strict";var Yr=/([()\][%!^"`<>&|;, *?])/g;function El(t){return t=t.replace(Yr,"^$1"),t}function kl(t,e){return t=`${t}`,t=t.replace(/(?=(\\+?)?)\1"/g,'$1$1\\"'),t=t.replace(/(?=(\\+?)?)\1$/,"$1$1"),t=`"${t}"`,t=t.replace(Yr,"^$1"),e&&(t=t.replace(Yr,"^$1")),t}Kr.exports.command=El;Kr.exports.argument=kl});var oi=j((Bm,ai)=>{"use strict";ai.exports=/^#!(.*)/});var li=j((jm,ci)=>{"use strict";var Rl=oi();ci.exports=(t="")=>{let e=t.match(Rl);if(!e)return null;let[r,n]=e[0].replace(/#! ?/,"").split(" "),s=r.split("/").pop();return s==="env"?n:n?`${s} ${n}`:s}});var fi=j((Mm,ui)=>{"use strict";var Jr=C("fs"),wl=li();function Al(t){let r=Buffer.alloc(150),n;try{n=Jr.openSync(t,"r"),Jr.readSync(n,r,0,150,0),Jr.closeSync(n)}catch{}return wl(r.toString())}ui.exports=Al});var mi=j((qm,di)=>{"use strict";var Tl=C("path"),hi=si(),pi=ii(),vl=fi(),Ll=process.platform==="win32",Il=/\.(?:com|exe)$/i,Fl=/node_modules[\\/].bin[\\/][^\\/]+\.cmd$/i;function Ol(t){t.file=hi(t);let e=t.file&&vl(t.file);return e?(t.args.unshift(t.file),t.command=e,hi(t)):t.file}function Nl(t){if(!Ll)return t;let e=Ol(t),r=!Il.test(e);if(t.options.forceShell||r){let n=Fl.test(e);t.command=Tl.normalize(t.command),t.command=pi.command(t.command),t.args=t.args.map(i=>pi.argument(i,n));let s=[t.command].concat(t.args).join(" ");t.args=["/d","/s","/c",`"${s}"`],t.command=process.env.comspec||"cmd.exe",t.options.windowsVerbatimArguments=!0}return t}function Cl(t,e,r){e&&!Array.isArray(e)&&(r=e,e=null),e=e?e.slice(0):[],r=Object.assign({},r);let n={command:t,args:e,options:r,file:void 0,original:{command:t,args:e}};return r.shell?n:Nl(n)}di.exports=Cl});var Si=j((Gm,yi)=>{"use strict";var Vr=process.platform==="win32";function Qr(t,e){return Object.assign(new Error(`${e} ${t.command} ENOENT`),{code:"ENOENT",errno:"ENOENT",syscall:`${e} ${t.command}`,path:t.command,spawnargs:t.args})}function Dl(t,e){if(!Vr)return;let r=t.emit;t.emit=function(n,s){if(n==="exit"){let i=gi(s,e);if(i)return r.call(t,"error",i)}return r.apply(t,arguments)}}function gi(t,e){return Vr&&t===1&&!e.file?Qr(e.original,"spawn"):null}function Ul(t,e){return Vr&&t===1&&!e.file?Qr(e.original,"spawnSync"):null}yi.exports={hookChildProcess:Dl,verifyENOENT:gi,verifyENOENTSync:Ul,notFoundError:Qr}});var xi=j((Wm,ht)=>{"use strict";var Pi=C("child_process"),Xr=mi(),Zr=Si();function bi(t,e,r){let n=Xr(t,e,r),s=Pi.spawn(n.command,n.args,n.options);return Zr.hookChildProcess(s,n),s}function Hl(t,e,r){let n=Xr(t,e,r),s=Pi.spawnSync(n.command,n.args,n.options);return s.error=s.error||Zr.verifyENOENTSync(s.status,n),s}ht.exports=bi;ht.exports.spawn=bi;ht.exports.sync=Hl;ht.exports._parse=Xr;ht.exports._enoent=Zr});var Oi=j((lg,ar)=>{ar.exports=["SIGABRT","SIGALRM","SIGHUP","SIGINT","SIGTERM"];process.platform!=="win32"&&ar.exports.push("SIGVTALRM","SIGXCPU","SIGXFSZ","SIGUSR2","SIGTRAP","SIGSYS","SIGQUIT","SIGIOT");process.platform==="linux"&&ar.exports.push("SIGIO","SIGPOLL","SIGPWR","SIGSTKFLT","SIGUNUSED")});var Hi=j((ug,gt)=>{var ne=global.process,Xe=function(t){return t&&typeof t=="object"&&typeof t.removeListener=="function"&&typeof t.emit=="function"&&typeof t.reallyExit=="function"&&typeof t.listeners=="function"&&typeof t.kill=="function"&&typeof t.pid=="number"&&typeof t.on=="function"};Xe(ne)?(Ni=C("assert"),dt=Oi(),Ci=/^win/i.test(ne.platform),Ot=C("events"),typeof Ot!="function"&&(Ot=Ot.EventEmitter),ne.__signal_exit_emitter__?he=ne.__signal_exit_emitter__:(he=ne.__signal_exit_emitter__=new Ot,he.count=0,he.emitted={}),he.infinite||(he.setMaxListeners(1/0),he.infinite=!0),gt.exports=function(t,e){if(!Xe(global.process))return function(){};Ni.equal(typeof t,"function","a callback must be provided for exit handler"),mt===!1&&nn();var r="exit";e&&e.alwaysLast&&(r="afterexit");var n=function(){he.removeListener(r,t),he.listeners("exit").length===0&&he.listeners("afterexit").length===0&&or()};return he.on(r,t),n},or=function(){!mt||!Xe(global.process)||(mt=!1,dt.forEach(function(e){try{ne.removeListener(e,cr[e])}catch{}}),ne.emit=lr,ne.reallyExit=sn,he.count-=1)},gt.exports.unload=or,Ze=function(e,r,n){he.emitted[e]||(he.emitted[e]=!0,he.emit(e,r,n))},cr={},dt.forEach(function(t){cr[t]=function(){if(Xe(global.process)){var r=ne.listeners(t);r.length===he.count&&(or(),Ze("exit",null,t),Ze("afterexit",null,t),Ci&&t==="SIGHUP"&&(t="SIGINT"),ne.kill(ne.pid,t))}}}),gt.exports.signals=function(){return dt},mt=!1,nn=function(){mt||!Xe(global.process)||(mt=!0,he.count+=1,dt=dt.filter(function(e){try{return ne.on(e,cr[e]),!0}catch{return!1}}),ne.emit=Ui,ne.reallyExit=Di)},gt.exports.load=nn,sn=ne.reallyExit,Di=function(e){Xe(global.process)&&(ne.exitCode=e||0,Ze("exit",ne.exitCode,null),Ze("afterexit",ne.exitCode,null),sn.call(ne,ne.exitCode))},lr=ne.emit,Ui=function(e,r){if(e==="exit"&&Xe(global.process)){r!==void 0&&(ne.exitCode=r);var n=lr.apply(this,arguments);return Ze("exit",ne.exitCode,null),Ze("afterexit",ne.exitCode,null),n}else return lr.apply(this,arguments)}):gt.exports=function(){return function(){}};var Ni,dt,Ci,Ot,he,or,Ze,cr,mt,nn,sn,Di,lr,Ui});var Ki=j((pg,Yi)=>{"use strict";var{PassThrough:lu}=C("stream");Yi.exports=t=>{t={...t};let{array:e}=t,{encoding:r}=t,n=r==="buffer",s=!1;e?s=!(r||n):r=r||"utf8",n&&(r=null);let i=new lu({objectMode:s});r&&i.setEncoding(r);let a=0,o=[];return i.on("data",c=>{o.push(c),s?a=o.length:a+=c.length}),i.getBufferedValue=()=>e?o:n?Buffer.concat(o,a):o.join(""),i.getBufferedLength=()=>a,i}});var Ji=j((dg,Nt)=>{"use strict";var{constants:uu}=C("buffer"),fu=C("stream"),{promisify:hu}=C("util"),pu=Ki(),du=hu(fu.pipeline),ur=class extends Error{constructor(){super("maxBuffer exceeded"),this.name="MaxBufferError"}};async function on(t,e){if(!t)throw new Error("Expected a stream");e={maxBuffer:1/0,...e};let{maxBuffer:r}=e,n=pu(e);return await new Promise((s,i)=>{let a=o=>{o&&n.getBufferedLength()<=uu.MAX_LENGTH&&(o.bufferedData=n.getBufferedValue()),i(o)};(async()=>{try{await du(t,n),s()}catch(o){a(o)}})(),n.on("data",()=>{n.getBufferedLength()>r&&a(new ur)})}),n.getBufferedValue()}Nt.exports=on;Nt.exports.buffer=(t,e)=>on(t,{...e,encoding:"buffer"});Nt.exports.array=(t,e)=>on(t,{...e,array:!0});Nt.exports.MaxBufferError=ur});var Qi=j((mg,Vi)=>{"use strict";var{PassThrough:mu}=C("stream");Vi.exports=function(){var t=[],e=new mu({objectMode:!0});return e.setMaxListeners(0),e.add=r,e.isEmpty=n,e.on("unpipe",s),Array.prototype.slice.call(arguments).forEach(r),e;function r(i){return Array.isArray(i)?(i.forEach(r),this):(t.push(i),i.once("end",s.bind(null,i)),i.once("error",e.emit.bind(e,"error")),i.pipe(e,{end:!1}),this)}function n(){return t.length==0}function s(i){t=t.filter(function(a){return a!==i}),!t.length&&e.readable&&e.end()}}});var hr=j(Ae=>{"use strict";Ae.isInteger=t=>typeof t=="number"?Number.isInteger(t):typeof t=="string"&&t.trim()!==""?Number.isInteger(Number(t)):!1;Ae.find=(t,e)=>t.nodes.find(r=>r.type===e);Ae.exceedsLimit=(t,e,r=1,n)=>n===!1||!Ae.isInteger(t)||!Ae.isInteger(e)?!1:(Number(e)-Number(t))/Number(r)>=n;Ae.escapeNode=(t,e=0,r)=>{let n=t.nodes[e];n&&(r&&n.type===r||n.type==="open"||n.type==="close")&&n.escaped!==!0&&(n.value="\\"+n.value,n.escaped=!0)};Ae.encloseBrace=t=>t.type!=="brace"||t.commas>>0+t.ranges>>0?!1:(t.invalid=!0,!0);Ae.isInvalidBrace=t=>t.type!=="brace"?!1:t.invalid===!0||t.dollar?!0:!(t.commas>>0+t.ranges>>0)||t.open!==!0||t.close!==!0?(t.invalid=!0,!0):!1;Ae.isOpenOrClose=t=>t.type==="open"||t.type==="close"?!0:t.open===!0||t.close===!0;Ae.reduce=t=>t.reduce((e,r)=>(r.type==="text"&&e.push(r.value),r.type==="range"&&(r.type="text"),e),[]);Ae.flatten=(...t)=>{let e=[],r=n=>{for(let s=0;s<n.length;s++){let i=n[s];if(Array.isArray(i)){r(i);continue}i!==void 0&&e.push(i)}return e};return r(t),e}});var pr=j((Ng,ua)=>{"use strict";var la=hr();ua.exports=(t,e={})=>{let r=(n,s={})=>{let i=e.escapeInvalid&&la.isInvalidBrace(s),a=n.invalid===!0&&e.escapeInvalid===!0,o="";if(n.value)return(i||a)&&la.isOpenOrClose(n)?"\\"+n.value:n.value;if(n.value)return n.value;if(n.nodes)for(let c of n.nodes)o+=r(c);return o};return r(t)}});var ha=j((Cg,fa)=>{"use strict";fa.exports=function(t){return typeof t=="number"?t-t===0:typeof t=="string"&&t.trim()!==""?Number.isFinite?Number.isFinite(+t):isFinite(+t):!1}});var xa=j((Dg,ba)=>{"use strict";var pa=ha(),_e=(t,e,r)=>{if(pa(t)===!1)throw new TypeError("toRegexRange: expected the first argument to be a number");if(e===void 0||t===e)return String(t);if(pa(e)===!1)throw new TypeError("toRegexRange: expected the second argument to be a number.");let n={relaxZeros:!0,...r};typeof n.strictZeros=="boolean"&&(n.relaxZeros=n.strictZeros===!1);let s=String(n.relaxZeros),i=String(n.shorthand),a=String(n.capture),o=String(n.wrap),c=t+":"+e+"="+s+i+a+o;if(_e.cache.hasOwnProperty(c))return _e.cache[c].result;let l=Math.min(t,e),h=Math.max(t,e);if(Math.abs(l-h)===1){let y=t+"|"+e;return n.capture?`(${y})`:n.wrap===!1?y:`(?:${y})`}let f=Pa(t)||Pa(e),u={min:t,max:e,a:l,b:h},g=[],x=[];if(f&&(u.isPadded=f,u.maxLen=String(u.max).length),l<0){let y=h<0?Math.abs(h):1;x=da(y,Math.abs(l),u,n),l=u.a=0}return h>=0&&(g=da(l,h,u,n)),u.negatives=x,u.positives=g,u.result=ku(x,g,n),n.capture===!0?u.result=`(${u.result})`:n.wrap!==!1&&g.length+x.length>1&&(u.result=`(?:${u.result})`),_e.cache[c]=u,u.result};function ku(t,e,r){let n=dn(t,e,"-",!1,r)||[],s=dn(e,t,"",!1,r)||[],i=dn(t,e,"-?",!0,r)||[];return n.concat(i).concat(s).join("|")}function Ru(t,e){let r=1,n=1,s=ga(t,r),i=new Set([e]);for(;t<=s&&s<=e;)i.add(s),r+=1,s=ga(t,r);for(s=ya(e+1,n)-1;t<s&&s<=e;)i.add(s),n+=1,s=ya(e+1,n)-1;return i=[...i],i.sort(Tu),i}function wu(t,e,r){if(t===e)return{pattern:t,count:[],digits:0};let n=Au(t,e),s=n.length,i="",a=0;for(let o=0;o<s;o++){let[c,l]=n[o];c===l?i+=c:c!=="0"||l!=="9"?i+=vu(c,l,r):a++}return a&&(i+=r.shorthand===!0?"\\d":"[0-9]"),{pattern:i,count:[a],digits:s}}function da(t,e,r,n){let s=Ru(t,e),i=[],a=t,o;for(let c=0;c<s.length;c++){let l=s[c],h=wu(String(a),String(l),n),f="";if(!r.isPadded&&o&&o.pattern===h.pattern){o.count.length>1&&o.count.pop(),o.count.push(h.count[0]),o.string=o.pattern+Sa(o.count),a=l+1;continue}r.isPadded&&(f=Lu(l,r,n)),h.string=f+h.pattern+Sa(h.count),i.push(h),a=l+1,o=h}return i}function dn(t,e,r,n,s){let i=[];for(let a of t){let{string:o}=a;!n&&!ma(e,"string",o)&&i.push(r+o),n&&ma(e,"string",o)&&i.push(r+o)}return i}function Au(t,e){let r=[];for(let n=0;n<t.length;n++)r.push([t[n],e[n]]);return r}function Tu(t,e){return t>e?1:e>t?-1:0}function ma(t,e,r){return t.some(n=>n[e]===r)}function ga(t,e){return Number(String(t).slice(0,-e)+"9".repeat(e))}function ya(t,e){return t-t%Math.pow(10,e)}function Sa(t){let[e=0,r=""]=t;return r||e>1?`{${e+(r?","+r:"")}}`:""}function vu(t,e,r){return`[${t}${e-t===1?"":"-"}${e}]`}function Pa(t){return/^-?(0+)\d/.test(t)}function Lu(t,e,r){if(!e.isPadded)return t;let n=Math.abs(e.maxLen-String(t).length),s=r.relaxZeros!==!1;switch(n){case 0:return"";case 1:return s?"0?":"0";case 2:return s?"0{0,2}":"00";default:return s?`0{0,${n}}`:`0{${n}}`}}_e.cache={};_e.clearCache=()=>_e.cache={};ba.exports=_e});var yn=j((Ug,va)=>{"use strict";var Iu=C("util"),ka=xa(),Ea=t=>t!==null&&typeof t=="object"&&!Array.isArray(t),Fu=t=>e=>t===!0?Number(e):String(e),mn=t=>typeof t=="number"||typeof t=="string"&&t!=="",Ut=t=>Number.isInteger(+t),gn=t=>{let e=`${t}`,r=-1;if(e[0]==="-"&&(e=e.slice(1)),e==="0")return!1;for(;e[++r]==="0";);return r>0},Ou=(t,e,r)=>typeof t=="string"||typeof e=="string"?!0:r.stringify===!0,Nu=(t,e,r)=>{if(e>0){let n=t[0]==="-"?"-":"";n&&(t=t.slice(1)),t=n+t.padStart(n?e-1:e,"0")}return r===!1?String(t):t},mr=(t,e)=>{let r=t[0]==="-"?"-":"";for(r&&(t=t.slice(1),e--);t.length<e;)t="0"+t;return r?"-"+t:t},Cu=(t,e,r)=>{t.negatives.sort((o,c)=>o<c?-1:o>c?1:0),t.positives.sort((o,c)=>o<c?-1:o>c?1:0);let n=e.capture?"":"?:",s="",i="",a;return t.positives.length&&(s=t.positives.map(o=>mr(String(o),r)).join("|")),t.negatives.length&&(i=`-(${n}${t.negatives.map(o=>mr(String(o),r)).join("|")})`),s&&i?a=`${s}|${i}`:a=s||i,e.wrap?`(${n}${a})`:a},Ra=(t,e,r,n)=>{if(r)return ka(t,e,{wrap:!1,...n});let s=String.fromCharCode(t);if(t===e)return s;let i=String.fromCharCode(e);return`[${s}-${i}]`},wa=(t,e,r)=>{if(Array.isArray(t)){let n=r.wrap===!0,s=r.capture?"":"?:";return n?`(${s}${t.join("|")})`:t.join("|")}return ka(t,e,r)},Aa=(...t)=>new RangeError("Invalid range arguments: "+Iu.inspect(...t)),Ta=(t,e,r)=>{if(r.strictRanges===!0)throw Aa([t,e]);return[]},Du=(t,e)=>{if(e.strictRanges===!0)throw new TypeError(`Expected step "${t}" to be a number`);return[]},Uu=(t,e,r=1,n={})=>{let s=Number(t),i=Number(e);if(!Number.isInteger(s)||!Number.isInteger(i)){if(n.strictRanges===!0)throw Aa([t,e]);return[]}s===0&&(s=0),i===0&&(i=0);let a=s>i,o=String(t),c=String(e),l=String(r);r=Math.max(Math.abs(r),1);let h=gn(o)||gn(c)||gn(l),f=h?Math.max(o.length,c.length,l.length):0,u=h===!1&&Ou(t,e,n)===!1,g=n.transform||Fu(u);if(n.toRegex&&r===1)return Ra(mr(t,f),mr(e,f),!0,n);let x={negatives:[],positives:[]},y=H=>x[H<0?"negatives":"positives"].push(Math.abs(H)),L=[],A=0;for(;a?s>=i:s<=i;)n.toRegex===!0&&r>1?y(s):L.push(Nu(g(s,A),f,u)),s=a?s-r:s+r,A++;return n.toRegex===!0?r>1?Cu(x,n,f):wa(L,null,{wrap:!1,...n}):L},Hu=(t,e,r=1,n={})=>{if(!Ut(t)&&t.length>1||!Ut(e)&&e.length>1)return Ta(t,e,n);let s=n.transform||(u=>String.fromCharCode(u)),i=`${t}`.charCodeAt(0),a=`${e}`.charCodeAt(0),o=i>a,c=Math.min(i,a),l=Math.max(i,a);if(n.toRegex&&r===1)return Ra(c,l,!1,n);let h=[],f=0;for(;o?i>=a:i<=a;)h.push(s(i,f)),i=o?i-r:i+r,f++;return n.toRegex===!0?wa(h,null,{wrap:!1,options:n}):h},dr=(t,e,r,n={})=>{if(e==null&&mn(t))return[t];if(!mn(t)||!mn(e))return Ta(t,e,n);if(typeof r=="function")return dr(t,e,1,{transform:r});if(Ea(r))return dr(t,e,0,r);let s={...n};return s.capture===!0&&(s.wrap=!0),r=r||s.step||1,Ut(r)?Ut(t)&&Ut(e)?Uu(t,e,r,s):Hu(t,e,Math.max(Math.abs(r),1),s):r!=null&&!Ea(r)?Du(r,s):dr(t,e,1,r)};va.exports=dr});var Fa=j((Hg,Ia)=>{"use strict";var Bu=yn(),La=hr(),ju=(t,e={})=>{let r=(n,s={})=>{let i=La.isInvalidBrace(s),a=n.invalid===!0&&e.escapeInvalid===!0,o=i===!0||a===!0,c=e.escapeInvalid===!0?"\\":"",l="";if(n.isOpen===!0)return c+n.value;if(n.isClose===!0)return console.log("node.isClose",c,n.value),c+n.value;if(n.type==="open")return o?c+n.value:"(";if(n.type==="close")return o?c+n.value:")";if(n.type==="comma")return n.prev.type==="comma"?"":o?n.value:"|";if(n.value)return n.value;if(n.nodes&&n.ranges>0){let h=La.reduce(n.nodes),f=Bu(...h,{...e,wrap:!1,toRegex:!0,strictZeros:!0});if(f.length!==0)return h.length>1&&f.length>1?`(${f})`:f}if(n.nodes)for(let h of n.nodes)l+=r(h,n);return l};return r(t)};Ia.exports=ju});var Ca=j((Bg,Na)=>{"use strict";var Mu=yn(),Oa=pr(),yt=hr(),$e=(t="",e="",r=!1)=>{let n=[];if(t=[].concat(t),e=[].concat(e),!e.length)return t;if(!t.length)return r?yt.flatten(e).map(s=>`{${s}}`):e;for(let s of t)if(Array.isArray(s))for(let i of s)n.push($e(i,e,r));else for(let i of e)r===!0&&typeof i=="string"&&(i=`{${i}}`),n.push(Array.isArray(i)?$e(s,i,r):s+i);return yt.flatten(n)},qu=(t,e={})=>{let r=e.rangeLimit===void 0?1e3:e.rangeLimit,n=(s,i={})=>{s.queue=[];let a=i,o=i.queue;for(;a.type!=="brace"&&a.type!=="root"&&a.parent;)a=a.parent,o=a.queue;if(s.invalid||s.dollar){o.push($e(o.pop(),Oa(s,e)));return}if(s.type==="brace"&&s.invalid!==!0&&s.nodes.length===2){o.push($e(o.pop(),["{}"]));return}if(s.nodes&&s.ranges>0){let f=yt.reduce(s.nodes);if(yt.exceedsLimit(...f,e.step,r))throw new RangeError("expanded array length exceeds range limit. Use options.rangeLimit to increase or disable the limit.");let u=Mu(...f,e);u.length===0&&(u=Oa(s,e)),o.push($e(o.pop(),u)),s.nodes=[];return}let c=yt.encloseBrace(s),l=s.queue,h=s;for(;h.type!=="brace"&&h.type!=="root"&&h.parent;)h=h.parent,l=h.queue;for(let f=0;f<s.nodes.length;f++){let u=s.nodes[f];if(u.type==="comma"&&s.type==="brace"){f===1&&l.push(""),l.push("");continue}if(u.type==="close"){o.push($e(o.pop(),l,c));continue}if(u.value&&u.type!=="open"){l.push($e(l.pop(),u.value));continue}u.nodes&&n(u,s)}return l};return yt.flatten(n(t))};Na.exports=qu});var Ua=j((jg,Da)=>{"use strict";Da.exports={MAX_LENGTH:1e4,CHAR_0:"0",CHAR_9:"9",CHAR_UPPERCASE_A:"A",CHAR_LOWERCASE_A:"a",CHAR_UPPERCASE_Z:"Z",CHAR_LOWERCASE_Z:"z",CHAR_LEFT_PARENTHESES:"(",CHAR_RIGHT_PARENTHESES:")",CHAR_ASTERISK:"*",CHAR_AMPERSAND:"&",CHAR_AT:"@",CHAR_BACKSLASH:"\\",CHAR_BACKTICK:"`",CHAR_CARRIAGE_RETURN:"\r",CHAR_CIRCUMFLEX_ACCENT:"^",CHAR_COLON:":",CHAR_COMMA:",",CHAR_DOLLAR:"$",CHAR_DOT:".",CHAR_DOUBLE_QUOTE:'"',CHAR_EQUAL:"=",CHAR_EXCLAMATION_MARK:"!",CHAR_FORM_FEED:"\f",CHAR_FORWARD_SLASH:"/",CHAR_HASH:"#",CHAR_HYPHEN_MINUS:"-",CHAR_LEFT_ANGLE_BRACKET:"<",CHAR_LEFT_CURLY_BRACE:"{",CHAR_LEFT_SQUARE_BRACKET:"[",CHAR_LINE_FEED:`
`,CHAR_NO_BREAK_SPACE:"\xA0",CHAR_PERCENT:"%",CHAR_PLUS:"+",CHAR_QUESTION_MARK:"?",CHAR_RIGHT_ANGLE_BRACKET:">",CHAR_RIGHT_CURLY_BRACE:"}",CHAR_RIGHT_SQUARE_BRACKET:"]",CHAR_SEMICOLON:";",CHAR_SINGLE_QUOTE:"'",CHAR_SPACE:" ",CHAR_TAB:"	",CHAR_UNDERSCORE:"_",CHAR_VERTICAL_LINE:"|",CHAR_ZERO_WIDTH_NOBREAK_SPACE:"\uFEFF"}});var qa=j((Mg,Ma)=>{"use strict";var Gu=pr(),{MAX_LENGTH:Ha,CHAR_BACKSLASH:Sn,CHAR_BACKTICK:Wu,CHAR_COMMA:zu,CHAR_DOT:Yu,CHAR_LEFT_PARENTHESES:Ku,CHAR_RIGHT_PARENTHESES:Ju,CHAR_LEFT_CURLY_BRACE:Vu,CHAR_RIGHT_CURLY_BRACE:Qu,CHAR_LEFT_SQUARE_BRACKET:Ba,CHAR_RIGHT_SQUARE_BRACKET:ja,CHAR_DOUBLE_QUOTE:Xu,CHAR_SINGLE_QUOTE:Zu,CHAR_NO_BREAK_SPACE:_u,CHAR_ZERO_WIDTH_NOBREAK_SPACE:$u}=Ua(),ef=(t,e={})=>{if(typeof t!="string")throw new TypeError("Expected a string");let r=e||{},n=typeof r.maxLength=="number"?Math.min(Ha,r.maxLength):Ha;if(t.length>n)throw new SyntaxError(`Input length (${t.length}), exceeds max characters (${n})`);let s={type:"root",input:t,nodes:[]},i=[s],a=s,o=s,c=0,l=t.length,h=0,f=0,u,g=()=>t[h++],x=y=>{if(y.type==="text"&&o.type==="dot"&&(o.type="text"),o&&o.type==="text"&&y.type==="text"){o.value+=y.value;return}return a.nodes.push(y),y.parent=a,y.prev=o,o=y,y};for(x({type:"bos"});h<l;)if(a=i[i.length-1],u=g(),!(u===$u||u===_u)){if(u===Sn){x({type:"text",value:(e.keepEscaping?u:"")+g()});continue}if(u===ja){x({type:"text",value:"\\"+u});continue}if(u===Ba){c++;let y;for(;h<l&&(y=g());){if(u+=y,y===Ba){c++;continue}if(y===Sn){u+=g();continue}if(y===ja&&(c--,c===0))break}x({type:"text",value:u});continue}if(u===Ku){a=x({type:"paren",nodes:[]}),i.push(a),x({type:"text",value:u});continue}if(u===Ju){if(a.type!=="paren"){x({type:"text",value:u});continue}a=i.pop(),x({type:"text",value:u}),a=i[i.length-1];continue}if(u===Xu||u===Zu||u===Wu){let y=u,L;for(e.keepQuotes!==!0&&(u="");h<l&&(L=g());){if(L===Sn){u+=L+g();continue}if(L===y){e.keepQuotes===!0&&(u+=L);break}u+=L}x({type:"text",value:u});continue}if(u===Vu){f++;let L={type:"brace",open:!0,close:!1,dollar:o.value&&o.value.slice(-1)==="$"||a.dollar===!0,depth:f,commas:0,ranges:0,nodes:[]};a=x(L),i.push(a),x({type:"open",value:u});continue}if(u===Qu){if(a.type!=="brace"){x({type:"text",value:u});continue}let y="close";a=i.pop(),a.close=!0,x({type:y,value:u}),f--,a=i[i.length-1];continue}if(u===zu&&f>0){if(a.ranges>0){a.ranges=0;let y=a.nodes.shift();a.nodes=[y,{type:"text",value:Gu(a)}]}x({type:"comma",value:u}),a.commas++;continue}if(u===Yu&&f>0&&a.commas===0){let y=a.nodes;if(f===0||y.length===0){x({type:"text",value:u});continue}if(o.type==="dot"){if(a.range=[],o.value+=u,o.type="range",a.nodes.length!==3&&a.nodes.length!==5){a.invalid=!0,a.ranges=0,o.type="text";continue}a.ranges++,a.args=[];continue}if(o.type==="range"){y.pop();let L=y[y.length-1];L.value+=o.value+u,o=L,a.ranges--;continue}x({type:"dot",value:u});continue}x({type:"text",value:u})}do if(a=i.pop(),a.type!=="root"){a.nodes.forEach(A=>{A.nodes||(A.type==="open"&&(A.isOpen=!0),A.type==="close"&&(A.isClose=!0),A.nodes||(A.type="text"),A.invalid=!0)});let y=i[i.length-1],L=y.nodes.indexOf(a);y.nodes.splice(L,1,...a.nodes)}while(i.length>0);return x({type:"eos"}),s};Ma.exports=ef});var za=j((qg,Wa)=>{"use strict";var Ga=pr(),tf=Fa(),rf=Ca(),nf=qa(),Ee=(t,e={})=>{let r=[];if(Array.isArray(t))for(let n of t){let s=Ee.create(n,e);Array.isArray(s)?r.push(...s):r.push(s)}else r=[].concat(Ee.create(t,e));return e&&e.expand===!0&&e.nodupes===!0&&(r=[...new Set(r)]),r};Ee.parse=(t,e={})=>nf(t,e);Ee.stringify=(t,e={})=>Ga(typeof t=="string"?Ee.parse(t,e):t,e);Ee.compile=(t,e={})=>(typeof t=="string"&&(t=Ee.parse(t,e)),tf(t,e));Ee.expand=(t,e={})=>{typeof t=="string"&&(t=Ee.parse(t,e));let r=rf(t,e);return e.noempty===!0&&(r=r.filter(Boolean)),e.nodupes===!0&&(r=[...new Set(r)]),r};Ee.create=(t,e={})=>t===""||t.length<3?[t]:e.expand!==!0?Ee.compile(t,e):Ee.expand(t,e);Wa.exports=Ee});var Ht=j((Gg,Qa)=>{"use strict";var sf=C("path"),Ne="\\\\/",Ya=`[^${Ne}]`,je="\\.",af="\\+",of="\\?",gr="\\/",cf="(?=.)",Ka="[^/]",Pn=`(?:${gr}|$)`,Ja=`(?:^|${gr})`,bn=`${je}{1,2}${Pn}`,lf=`(?!${je})`,uf=`(?!${Ja}${bn})`,ff=`(?!${je}{0,1}${Pn})`,hf=`(?!${bn})`,pf=`[^.${gr}]`,df=`${Ka}*?`,Va={DOT_LITERAL:je,PLUS_LITERAL:af,QMARK_LITERAL:of,SLASH_LITERAL:gr,ONE_CHAR:cf,QMARK:Ka,END_ANCHOR:Pn,DOTS_SLASH:bn,NO_DOT:lf,NO_DOTS:uf,NO_DOT_SLASH:ff,NO_DOTS_SLASH:hf,QMARK_NO_DOT:pf,STAR:df,START_ANCHOR:Ja},mf={...Va,SLASH_LITERAL:`[${Ne}]`,QMARK:Ya,STAR:`${Ya}*?`,DOTS_SLASH:`${je}{1,2}(?:[${Ne}]|$)`,NO_DOT:`(?!${je})`,NO_DOTS:`(?!(?:^|[${Ne}])${je}{1,2}(?:[${Ne}]|$))`,NO_DOT_SLASH:`(?!${je}{0,1}(?:[${Ne}]|$))`,NO_DOTS_SLASH:`(?!${je}{1,2}(?:[${Ne}]|$))`,QMARK_NO_DOT:`[^.${Ne}]`,START_ANCHOR:`(?:^|[${Ne}])`,END_ANCHOR:`(?:[${Ne}]|$)`},gf={alnum:"a-zA-Z0-9",alpha:"a-zA-Z",ascii:"\\x00-\\x7F",blank:" \\t",cntrl:"\\x00-\\x1F\\x7F",digit:"0-9",graph:"\\x21-\\x7E",lower:"a-z",print:"\\x20-\\x7E ",punct:"\\-!\"#$%&'()\\*+,./:;<=>?@[\\]^_`{|}~",space:" \\t\\r\\n\\v\\f",upper:"A-Z",word:"A-Za-z0-9_",xdigit:"A-Fa-f0-9"};Qa.exports={MAX_LENGTH:1024*64,POSIX_REGEX_SOURCE:gf,REGEX_BACKSLASH:/\\(?![*+?^${}(|)[\]])/g,REGEX_NON_SPECIAL_CHARS:/^[^@![\].,$*+?^{}()|\\/]+/,REGEX_SPECIAL_CHARS:/[-*+?.^${}(|)[\]]/,REGEX_SPECIAL_CHARS_BACKREF:/(\\?)((\W)(\3*))/g,REGEX_SPECIAL_CHARS_GLOBAL:/([-*+?.^${}(|)[\]])/g,REGEX_REMOVE_BACKSLASH:/(?:\[.*?[^\\]\]|\\(?=.))/g,REPLACEMENTS:{"***":"*","**/**":"**","**/**/**":"**"},CHAR_0:48,CHAR_9:57,CHAR_UPPERCASE_A:65,CHAR_LOWERCASE_A:97,CHAR_UPPERCASE_Z:90,CHAR_LOWERCASE_Z:122,CHAR_LEFT_PARENTHESES:40,CHAR_RIGHT_PARENTHESES:41,CHAR_ASTERISK:42,CHAR_AMPERSAND:38,CHAR_AT:64,CHAR_BACKWARD_SLASH:92,CHAR_CARRIAGE_RETURN:13,CHAR_CIRCUMFLEX_ACCENT:94,CHAR_COLON:58,CHAR_COMMA:44,CHAR_DOT:46,CHAR_DOUBLE_QUOTE:34,CHAR_EQUAL:61,CHAR_EXCLAMATION_MARK:33,CHAR_FORM_FEED:12,CHAR_FORWARD_SLASH:47,CHAR_GRAVE_ACCENT:96,CHAR_HASH:35,CHAR_HYPHEN_MINUS:45,CHAR_LEFT_ANGLE_BRACKET:60,CHAR_LEFT_CURLY_BRACE:123,CHAR_LEFT_SQUARE_BRACKET:91,CHAR_LINE_FEED:10,CHAR_NO_BREAK_SPACE:160,CHAR_PERCENT:37,CHAR_PLUS:43,CHAR_QUESTION_MARK:63,CHAR_RIGHT_ANGLE_BRACKET:62,CHAR_RIGHT_CURLY_BRACE:125,CHAR_RIGHT_SQUARE_BRACKET:93,CHAR_SEMICOLON:59,CHAR_SINGLE_QUOTE:39,CHAR_SPACE:32,CHAR_TAB:9,CHAR_UNDERSCORE:95,CHAR_VERTICAL_LINE:124,CHAR_ZERO_WIDTH_NOBREAK_SPACE:65279,SEP:sf.sep,extglobChars(t){return{"!":{type:"negate",open:"(?:(?!(?:",close:`))${t.STAR})`},"?":{type:"qmark",open:"(?:",close:")?"},"+":{type:"plus",open:"(?:",close:")+"},"*":{type:"star",open:"(?:",close:")*"},"@":{type:"at",open:"(?:",close:")"}}},globChars(t){return t===!0?mf:Va}}});var Bt=j(xe=>{"use strict";var yf=C("path"),Sf=process.platform==="win32",{REGEX_BACKSLASH:Pf,REGEX_REMOVE_BACKSLASH:bf,REGEX_SPECIAL_CHARS:xf,REGEX_SPECIAL_CHARS_GLOBAL:Ef}=Ht();xe.isObject=t=>t!==null&&typeof t=="object"&&!Array.isArray(t);xe.hasRegexChars=t=>xf.test(t);xe.isRegexChar=t=>t.length===1&&xe.hasRegexChars(t);xe.escapeRegex=t=>t.replace(Ef,"\\$1");xe.toPosixSlashes=t=>t.replace(Pf,"/");xe.removeBackslashes=t=>t.replace(bf,e=>e==="\\"?"":e);xe.supportsLookbehinds=()=>{let t=process.version.slice(1).split(".").map(Number);return t.length===3&&t[0]>=9||t[0]===8&&t[1]>=10};xe.isWindows=t=>t&&typeof t.windows=="boolean"?t.windows:Sf===!0||yf.sep==="\\";xe.escapeLast=(t,e,r)=>{let n=t.lastIndexOf(e,r);return n===-1?t:t[n-1]==="\\"?xe.escapeLast(t,e,n-1):`${t.slice(0,n)}\\${t.slice(n)}`};xe.removePrefix=(t,e={})=>{let r=t;return r.startsWith("./")&&(r=r.slice(2),e.prefix="./"),r};xe.wrapOutput=(t,e={},r={})=>{let n=r.contains?"":"^",s=r.contains?"":"$",i=`${n}(?:${t})${s}`;return e.negated===!0&&(i=`(?:^(?!${i}).*$)`),i}});var no=j((zg,ro)=>{"use strict";var Xa=Bt(),{CHAR_ASTERISK:xn,CHAR_AT:kf,CHAR_BACKWARD_SLASH:jt,CHAR_COMMA:Rf,CHAR_DOT:En,CHAR_EXCLAMATION_MARK:kn,CHAR_FORWARD_SLASH:to,CHAR_LEFT_CURLY_BRACE:Rn,CHAR_LEFT_PARENTHESES:wn,CHAR_LEFT_SQUARE_BRACKET:wf,CHAR_PLUS:Af,CHAR_QUESTION_MARK:Za,CHAR_RIGHT_CURLY_BRACE:Tf,CHAR_RIGHT_PARENTHESES:_a,CHAR_RIGHT_SQUARE_BRACKET:vf}=Ht(),$a=t=>t===to||t===jt,eo=t=>{t.isPrefix!==!0&&(t.depth=t.isGlobstar?1/0:1)},Lf=(t,e)=>{let r=e||{},n=t.length-1,s=r.parts===!0||r.scanToEnd===!0,i=[],a=[],o=[],c=t,l=-1,h=0,f=0,u=!1,g=!1,x=!1,y=!1,L=!1,A=!1,H=!1,N=!1,_=!1,M=!1,T=0,W,O,K={value:"",depth:0,isGlob:!1},$=()=>l>=n,m=()=>c.charCodeAt(l+1),V=()=>(W=O,c.charCodeAt(++l));for(;l<n;){O=V();let le;if(O===jt){H=K.backslashes=!0,O=V(),O===Rn&&(A=!0);continue}if(A===!0||O===Rn){for(T++;$()!==!0&&(O=V());){if(O===jt){H=K.backslashes=!0,V();continue}if(O===Rn){T++;continue}if(A!==!0&&O===En&&(O=V())===En){if(u=K.isBrace=!0,x=K.isGlob=!0,M=!0,s===!0)continue;break}if(A!==!0&&O===Rf){if(u=K.isBrace=!0,x=K.isGlob=!0,M=!0,s===!0)continue;break}if(O===Tf&&(T--,T===0)){A=!1,u=K.isBrace=!0,M=!0;break}}if(s===!0)continue;break}if(O===to){if(i.push(l),a.push(K),K={value:"",depth:0,isGlob:!1},M===!0)continue;if(W===En&&l===h+1){h+=2;continue}f=l+1;continue}if(r.noext!==!0&&(O===Af||O===kf||O===xn||O===Za||O===kn)===!0&&m()===wn){if(x=K.isGlob=!0,y=K.isExtglob=!0,M=!0,O===kn&&l===h&&(_=!0),s===!0){for(;$()!==!0&&(O=V());){if(O===jt){H=K.backslashes=!0,O=V();continue}if(O===_a){x=K.isGlob=!0,M=!0;break}}continue}break}if(O===xn){if(W===xn&&(L=K.isGlobstar=!0),x=K.isGlob=!0,M=!0,s===!0)continue;break}if(O===Za){if(x=K.isGlob=!0,M=!0,s===!0)continue;break}if(O===wf){for(;$()!==!0&&(le=V());){if(le===jt){H=K.backslashes=!0,V();continue}if(le===vf){g=K.isBracket=!0,x=K.isGlob=!0,M=!0;break}}if(s===!0)continue;break}if(r.nonegate!==!0&&O===kn&&l===h){N=K.negated=!0,h++;continue}if(r.noparen!==!0&&O===wn){if(x=K.isGlob=!0,s===!0){for(;$()!==!0&&(O=V());){if(O===wn){H=K.backslashes=!0,O=V();continue}if(O===_a){M=!0;break}}continue}break}if(x===!0){if(M=!0,s===!0)continue;break}}r.noext===!0&&(y=!1,x=!1);let X=c,oe="",d="";h>0&&(oe=c.slice(0,h),c=c.slice(h),f-=h),X&&x===!0&&f>0?(X=c.slice(0,f),d=c.slice(f)):x===!0?(X="",d=c):X=c,X&&X!==""&&X!=="/"&&X!==c&&$a(X.charCodeAt(X.length-1))&&(X=X.slice(0,-1)),r.unescape===!0&&(d&&(d=Xa.removeBackslashes(d)),X&&H===!0&&(X=Xa.removeBackslashes(X)));let S={prefix:oe,input:t,start:h,base:X,glob:d,isBrace:u,isBracket:g,isGlob:x,isExtglob:y,isGlobstar:L,negated:N,negatedExtglob:_};if(r.tokens===!0&&(S.maxDepth=0,$a(O)||a.push(K),S.tokens=a),r.parts===!0||r.tokens===!0){let le;for(let Q=0;Q<i.length;Q++){let ye=le?le+1:h,fe=i[Q],Se=t.slice(ye,fe);r.tokens&&(Q===0&&h!==0?(a[Q].isPrefix=!0,a[Q].value=oe):a[Q].value=Se,eo(a[Q]),S.maxDepth+=a[Q].depth),(Q!==0||Se!=="")&&o.push(Se),le=fe}if(le&&le+1<t.length){let Q=t.slice(le+1);o.push(Q),r.tokens&&(a[a.length-1].value=Q,eo(a[a.length-1]),S.maxDepth+=a[a.length-1].depth)}S.slashes=i,S.parts=o}return S};ro.exports=Lf});var ao=j((Yg,io)=>{"use strict";var yr=Ht(),ke=Bt(),{MAX_LENGTH:Sr,POSIX_REGEX_SOURCE:If,REGEX_NON_SPECIAL_CHARS:Ff,REGEX_SPECIAL_CHARS_BACKREF:Of,REPLACEMENTS:so}=yr,Nf=(t,e)=>{if(typeof e.expandRange=="function")return e.expandRange(...t,e);t.sort();let r=`[${t.join("-")}]`;try{new RegExp(r)}catch{return t.map(s=>ke.escapeRegex(s)).join("..")}return r},St=(t,e)=>`Missing ${t}: "${e}" - use "\\\\${e}" to match literal characters`,An=(t,e)=>{if(typeof t!="string")throw new TypeError("Expected a string");t=so[t]||t;let r={...e},n=typeof r.maxLength=="number"?Math.min(Sr,r.maxLength):Sr,s=t.length;if(s>n)throw new SyntaxError(`Input length: ${s}, exceeds maximum allowed length: ${n}`);let i={type:"bos",value:"",output:r.prepend||""},a=[i],o=r.capture?"":"?:",c=ke.isWindows(e),l=yr.globChars(c),h=yr.extglobChars(l),{DOT_LITERAL:f,PLUS_LITERAL:u,SLASH_LITERAL:g,ONE_CHAR:x,DOTS_SLASH:y,NO_DOT:L,NO_DOT_SLASH:A,NO_DOTS_SLASH:H,QMARK:N,QMARK_NO_DOT:_,STAR:M,START_ANCHOR:T}=l,W=p=>`(${o}(?:(?!${T}${p.dot?y:f}).)*?)`,O=r.dot?"":L,K=r.dot?N:_,$=r.bash===!0?W(r):M;r.capture&&($=`(${$})`),typeof r.noext=="boolean"&&(r.noextglob=r.noext);let m={input:t,index:-1,start:0,dot:r.dot===!0,consumed:"",output:"",prefix:"",backtrack:!1,negated:!1,brackets:0,braces:0,parens:0,quotes:0,globstar:!1,tokens:a};t=ke.removePrefix(t,m),s=t.length;let V=[],X=[],oe=[],d=i,S,le=()=>m.index===s-1,Q=m.peek=(p=1)=>t[m.index+p],ye=m.advance=()=>t[++m.index]||"",fe=()=>t.slice(m.index+1),Se=(p="",z=0)=>{m.consumed+=p,m.index+=z},k=p=>{m.output+=p.output!=null?p.output:p.value,Se(p.value)},E=()=>{let p=1;for(;Q()==="!"&&(Q(2)!=="("||Q(3)==="?");)ye(),m.start++,p++;return p%2===0?!1:(m.negated=!0,m.start++,!0)},I=p=>{m[p]++,oe.push(p)},w=p=>{m[p]--,oe.pop()},R=p=>{if(d.type==="globstar"){let z=m.braces>0&&(p.type==="comma"||p.type==="brace"),b=p.extglob===!0||V.length&&(p.type==="pipe"||p.type==="paren");p.type!=="slash"&&p.type!=="paren"&&!z&&!b&&(m.output=m.output.slice(0,-d.output.length),d.type="star",d.value="*",d.output=$,m.output+=d.output)}if(V.length&&p.type!=="paren"&&(V[V.length-1].inner+=p.value),(p.value||p.output)&&k(p),d&&d.type==="text"&&p.type==="text"){d.value+=p.value,d.output=(d.output||"")+p.value;return}p.prev=d,a.push(p),d=p},D=(p,z)=>{let b={...h[z],conditions:1,inner:""};b.prev=d,b.parens=m.parens,b.output=m.output;let Y=(r.capture?"(":"")+b.open;I("parens"),R({type:p,value:z,output:m.output?"":x}),R({type:"paren",extglob:!0,value:ye(),output:Y}),V.push(b)},q=p=>{let z=p.close+(r.capture?")":""),b;if(p.type==="negate"){let Y=$;if(p.inner&&p.inner.length>1&&p.inner.includes("/")&&(Y=W(r)),(Y!==$||le()||/^\)+$/.test(fe()))&&(z=p.close=`)$))${Y}`),p.inner.includes("*")&&(b=fe())&&/^\.[^\\/.]+$/.test(b)){let v=An(b,{...e,fastpaths:!1}).output;z=p.close=`)${v})${Y})`}p.prev.type==="bos"&&(m.negatedExtglob=!0)}R({type:"paren",extglob:!0,value:S,output:z}),w("parens")};if(r.fastpaths!==!1&&!/(^[*!]|[/()[\]{}"])/.test(t)){let p=!1,z=t.replace(Of,(b,Y,v,B,U,re)=>B==="\\"?(p=!0,b):B==="?"?Y?Y+B+(U?N.repeat(U.length):""):re===0?K+(U?N.repeat(U.length):""):N.repeat(v.length):B==="."?f.repeat(v.length):B==="*"?Y?Y+B+(U?$:""):$:Y?b:`\\${b}`);return p===!0&&(r.unescape===!0?z=z.replace(/\\/g,""):z=z.replace(/\\+/g,b=>b.length%2===0?"\\\\":b?"\\":"")),z===t&&r.contains===!0?(m.output=t,m):(m.output=ke.wrapOutput(z,m,e),m)}for(;!le();){if(S=ye(),S==="\0")continue;if(S==="\\"){let b=Q();if(b==="/"&&r.bash!==!0||b==="."||b===";")continue;if(!b){S+="\\",R({type:"text",value:S});continue}let Y=/^\\+/.exec(fe()),v=0;if(Y&&Y[0].length>2&&(v=Y[0].length,m.index+=v,v%2!==0&&(S+="\\")),r.unescape===!0?S=ye():S+=ye(),m.brackets===0){R({type:"text",value:S});continue}}if(m.brackets>0&&(S!=="]"||d.value==="["||d.value==="[^")){if(r.posix!==!1&&S===":"){let b=d.value.slice(1);if(b.includes("[")&&(d.posix=!0,b.includes(":"))){let Y=d.value.lastIndexOf("["),v=d.value.slice(0,Y),B=d.value.slice(Y+2),U=If[B];if(U){d.value=v+U,m.backtrack=!0,ye(),!i.output&&a.indexOf(d)===1&&(i.output=x);continue}}}(S==="["&&Q()!==":"||S==="-"&&Q()==="]")&&(S=`\\${S}`),S==="]"&&(d.value==="["||d.value==="[^")&&(S=`\\${S}`),r.posix===!0&&S==="!"&&d.value==="["&&(S="^"),d.value+=S,k({value:S});continue}if(m.quotes===1&&S!=='"'){S=ke.escapeRegex(S),d.value+=S,k({value:S});continue}if(S==='"'){m.quotes=m.quotes===1?0:1,r.keepQuotes===!0&&R({type:"text",value:S});continue}if(S==="("){I("parens"),R({type:"paren",value:S});continue}if(S===")"){if(m.parens===0&&r.strictBrackets===!0)throw new SyntaxError(St("opening","("));let b=V[V.length-1];if(b&&m.parens===b.parens+1){q(V.pop());continue}R({type:"paren",value:S,output:m.parens?")":"\\)"}),w("parens");continue}if(S==="["){if(r.nobracket===!0||!fe().includes("]")){if(r.nobracket!==!0&&r.strictBrackets===!0)throw new SyntaxError(St("closing","]"));S=`\\${S}`}else I("brackets");R({type:"bracket",value:S});continue}if(S==="]"){if(r.nobracket===!0||d&&d.type==="bracket"&&d.value.length===1){R({type:"text",value:S,output:`\\${S}`});continue}if(m.brackets===0){if(r.strictBrackets===!0)throw new SyntaxError(St("opening","["));R({type:"text",value:S,output:`\\${S}`});continue}w("brackets");let b=d.value.slice(1);if(d.posix!==!0&&b[0]==="^"&&!b.includes("/")&&(S=`/${S}`),d.value+=S,k({value:S}),r.literalBrackets===!1||ke.hasRegexChars(b))continue;let Y=ke.escapeRegex(d.value);if(m.output=m.output.slice(0,-d.value.length),r.literalBrackets===!0){m.output+=Y,d.value=Y;continue}d.value=`(${o}${Y}|${d.value})`,m.output+=d.value;continue}if(S==="{"&&r.nobrace!==!0){I("braces");let b={type:"brace",value:S,output:"(",outputIndex:m.output.length,tokensIndex:m.tokens.length};X.push(b),R(b);continue}if(S==="}"){let b=X[X.length-1];if(r.nobrace===!0||!b){R({type:"text",value:S,output:S});continue}let Y=")";if(b.dots===!0){let v=a.slice(),B=[];for(let U=v.length-1;U>=0&&(a.pop(),v[U].type!=="brace");U--)v[U].type!=="dots"&&B.unshift(v[U].value);Y=Nf(B,r),m.backtrack=!0}if(b.comma!==!0&&b.dots!==!0){let v=m.output.slice(0,b.outputIndex),B=m.tokens.slice(b.tokensIndex);b.value=b.output="\\{",S=Y="\\}",m.output=v;for(let U of B)m.output+=U.output||U.value}R({type:"brace",value:S,output:Y}),w("braces"),X.pop();continue}if(S==="|"){V.length>0&&V[V.length-1].conditions++,R({type:"text",value:S});continue}if(S===","){let b=S,Y=X[X.length-1];Y&&oe[oe.length-1]==="braces"&&(Y.comma=!0,b="|"),R({type:"comma",value:S,output:b});continue}if(S==="/"){if(d.type==="dot"&&m.index===m.start+1){m.start=m.index+1,m.consumed="",m.output="",a.pop(),d=i;continue}R({type:"slash",value:S,output:g});continue}if(S==="."){if(m.braces>0&&d.type==="dot"){d.value==="."&&(d.output=f);let b=X[X.length-1];d.type="dots",d.output+=S,d.value+=S,b.dots=!0;continue}if(m.braces+m.parens===0&&d.type!=="bos"&&d.type!=="slash"){R({type:"text",value:S,output:f});continue}R({type:"dot",value:S,output:f});continue}if(S==="?"){if(!(d&&d.value==="(")&&r.noextglob!==!0&&Q()==="("&&Q(2)!=="?"){D("qmark",S);continue}if(d&&d.type==="paren"){let Y=Q(),v=S;if(Y==="<"&&!ke.supportsLookbehinds())throw new Error("Node.js v10 or higher is required for regex lookbehinds");(d.value==="("&&!/[!=<:]/.test(Y)||Y==="<"&&!/<([!=]|\w+>)/.test(fe()))&&(v=`\\${S}`),R({type:"text",value:S,output:v});continue}if(r.dot!==!0&&(d.type==="slash"||d.type==="bos")){R({type:"qmark",value:S,output:_});continue}R({type:"qmark",value:S,output:N});continue}if(S==="!"){if(r.noextglob!==!0&&Q()==="("&&(Q(2)!=="?"||!/[!=<:]/.test(Q(3)))){D("negate",S);continue}if(r.nonegate!==!0&&m.index===0){E();continue}}if(S==="+"){if(r.noextglob!==!0&&Q()==="("&&Q(2)!=="?"){D("plus",S);continue}if(d&&d.value==="("||r.regex===!1){R({type:"plus",value:S,output:u});continue}if(d&&(d.type==="bracket"||d.type==="paren"||d.type==="brace")||m.parens>0){R({type:"plus",value:S});continue}R({type:"plus",value:u});continue}if(S==="@"){if(r.noextglob!==!0&&Q()==="("&&Q(2)!=="?"){R({type:"at",extglob:!0,value:S,output:""});continue}R({type:"text",value:S});continue}if(S!=="*"){(S==="$"||S==="^")&&(S=`\\${S}`);let b=Ff.exec(fe());b&&(S+=b[0],m.index+=b[0].length),R({type:"text",value:S});continue}if(d&&(d.type==="globstar"||d.star===!0)){d.type="star",d.star=!0,d.value+=S,d.output=$,m.backtrack=!0,m.globstar=!0,Se(S);continue}let p=fe();if(r.noextglob!==!0&&/^\([^?]/.test(p)){D("star",S);continue}if(d.type==="star"){if(r.noglobstar===!0){Se(S);continue}let b=d.prev,Y=b.prev,v=b.type==="slash"||b.type==="bos",B=Y&&(Y.type==="star"||Y.type==="globstar");if(r.bash===!0&&(!v||p[0]&&p[0]!=="/")){R({type:"star",value:S,output:""});continue}let U=m.braces>0&&(b.type==="comma"||b.type==="brace"),re=V.length&&(b.type==="pipe"||b.type==="paren");if(!v&&b.type!=="paren"&&!U&&!re){R({type:"star",value:S,output:""});continue}for(;p.slice(0,3)==="/**";){let Pe=t[m.index+4];if(Pe&&Pe!=="/")break;p=p.slice(3),Se("/**",3)}if(b.type==="bos"&&le()){d.type="globstar",d.value+=S,d.output=W(r),m.output=d.output,m.globstar=!0,Se(S);continue}if(b.type==="slash"&&b.prev.type!=="bos"&&!B&&le()){m.output=m.output.slice(0,-(b.output+d.output).length),b.output=`(?:${b.output}`,d.type="globstar",d.output=W(r)+(r.strictSlashes?")":"|$)"),d.value+=S,m.globstar=!0,m.output+=b.output+d.output,Se(S);continue}if(b.type==="slash"&&b.prev.type!=="bos"&&p[0]==="/"){let Pe=p[1]!==void 0?"|$":"";m.output=m.output.slice(0,-(b.output+d.output).length),b.output=`(?:${b.output}`,d.type="globstar",d.output=`${W(r)}${g}|${g}${Pe})`,d.value+=S,m.output+=b.output+d.output,m.globstar=!0,Se(S+ye()),R({type:"slash",value:"/",output:""});continue}if(b.type==="bos"&&p[0]==="/"){d.type="globstar",d.value+=S,d.output=`(?:^|${g}|${W(r)}${g})`,m.output=d.output,m.globstar=!0,Se(S+ye()),R({type:"slash",value:"/",output:""});continue}m.output=m.output.slice(0,-d.output.length),d.type="globstar",d.output=W(r),d.value+=S,m.output+=d.output,m.globstar=!0,Se(S);continue}let z={type:"star",value:S,output:$};if(r.bash===!0){z.output=".*?",(d.type==="bos"||d.type==="slash")&&(z.output=O+z.output),R(z);continue}if(d&&(d.type==="bracket"||d.type==="paren")&&r.regex===!0){z.output=S,R(z);continue}(m.index===m.start||d.type==="slash"||d.type==="dot")&&(d.type==="dot"?(m.output+=A,d.output+=A):r.dot===!0?(m.output+=H,d.output+=H):(m.output+=O,d.output+=O),Q()!=="*"&&(m.output+=x,d.output+=x)),R(z)}for(;m.brackets>0;){if(r.strictBrackets===!0)throw new SyntaxError(St("closing","]"));m.output=ke.escapeLast(m.output,"["),w("brackets")}for(;m.parens>0;){if(r.strictBrackets===!0)throw new SyntaxError(St("closing",")"));m.output=ke.escapeLast(m.output,"("),w("parens")}for(;m.braces>0;){if(r.strictBrackets===!0)throw new SyntaxError(St("closing","}"));m.output=ke.escapeLast(m.output,"{"),w("braces")}if(r.strictSlashes!==!0&&(d.type==="star"||d.type==="bracket")&&R({type:"maybe_slash",value:"",output:`${g}?`}),m.backtrack===!0){m.output="";for(let p of m.tokens)m.output+=p.output!=null?p.output:p.value,p.suffix&&(m.output+=p.suffix)}return m};An.fastpaths=(t,e)=>{let r={...e},n=typeof r.maxLength=="number"?Math.min(Sr,r.maxLength):Sr,s=t.length;if(s>n)throw new SyntaxError(`Input length: ${s}, exceeds maximum allowed length: ${n}`);t=so[t]||t;let i=ke.isWindows(e),{DOT_LITERAL:a,SLASH_LITERAL:o,ONE_CHAR:c,DOTS_SLASH:l,NO_DOT:h,NO_DOTS:f,NO_DOTS_SLASH:u,STAR:g,START_ANCHOR:x}=yr.globChars(i),y=r.dot?f:h,L=r.dot?u:h,A=r.capture?"":"?:",H={negated:!1,prefix:""},N=r.bash===!0?".*?":g;r.capture&&(N=`(${N})`);let _=O=>O.noglobstar===!0?N:`(${A}(?:(?!${x}${O.dot?l:a}).)*?)`,M=O=>{switch(O){case"*":return`${y}${c}${N}`;case".*":return`${a}${c}${N}`;case"*.*":return`${y}${N}${a}${c}${N}`;case"*/*":return`${y}${N}${o}${c}${L}${N}`;case"**":return y+_(r);case"**/*":return`(?:${y}${_(r)}${o})?${L}${c}${N}`;case"**/*.*":return`(?:${y}${_(r)}${o})?${L}${N}${a}${c}${N}`;case"**/.*":return`(?:${y}${_(r)}${o})?${a}${c}${N}`;default:{let K=/^(.*?)\.(\w+)$/.exec(O);if(!K)return;let $=M(K[1]);return $?$+a+K[2]:void 0}}},T=ke.removePrefix(t,H),W=M(T);return W&&r.strictSlashes!==!0&&(W+=`${o}?`),W};io.exports=An});var co=j((Kg,oo)=>{"use strict";var Cf=C("path"),Df=no(),Tn=ao(),vn=Bt(),Uf=Ht(),Hf=t=>t&&typeof t=="object"&&!Array.isArray(t),ae=(t,e,r=!1)=>{if(Array.isArray(t)){let h=t.map(u=>ae(u,e,r));return u=>{for(let g of h){let x=g(u);if(x)return x}return!1}}let n=Hf(t)&&t.tokens&&t.input;if(t===""||typeof t!="string"&&!n)throw new TypeError("Expected pattern to be a non-empty string");let s=e||{},i=vn.isWindows(e),a=n?ae.compileRe(t,e):ae.makeRe(t,e,!1,!0),o=a.state;delete a.state;let c=()=>!1;if(s.ignore){let h={...e,ignore:null,onMatch:null,onResult:null};c=ae(s.ignore,h,r)}let l=(h,f=!1)=>{let{isMatch:u,match:g,output:x}=ae.test(h,a,e,{glob:t,posix:i}),y={glob:t,state:o,regex:a,posix:i,input:h,output:x,match:g,isMatch:u};return typeof s.onResult=="function"&&s.onResult(y),u===!1?(y.isMatch=!1,f?y:!1):c(h)?(typeof s.onIgnore=="function"&&s.onIgnore(y),y.isMatch=!1,f?y:!1):(typeof s.onMatch=="function"&&s.onMatch(y),f?y:!0)};return r&&(l.state=o),l};ae.test=(t,e,r,{glob:n,posix:s}={})=>{if(typeof t!="string")throw new TypeError("Expected input to be a string");if(t==="")return{isMatch:!1,output:""};let i=r||{},a=i.format||(s?vn.toPosixSlashes:null),o=t===n,c=o&&a?a(t):t;return o===!1&&(c=a?a(t):t,o=c===n),(o===!1||i.capture===!0)&&(i.matchBase===!0||i.basename===!0?o=ae.matchBase(t,e,r,s):o=e.exec(c)),{isMatch:!!o,match:o,output:c}};ae.matchBase=(t,e,r,n=vn.isWindows(r))=>(e instanceof RegExp?e:ae.makeRe(e,r)).test(Cf.basename(t));ae.isMatch=(t,e,r)=>ae(e,r)(t);ae.parse=(t,e)=>Array.isArray(t)?t.map(r=>ae.parse(r,e)):Tn(t,{...e,fastpaths:!1});ae.scan=(t,e)=>Df(t,e);ae.compileRe=(t,e,r=!1,n=!1)=>{if(r===!0)return t.output;let s=e||{},i=s.contains?"":"^",a=s.contains?"":"$",o=`${i}(?:${t.output})${a}`;t&&t.negated===!0&&(o=`^(?!${o}).*$`);let c=ae.toRegex(o,e);return n===!0&&(c.state=t),c};ae.makeRe=(t,e={},r=!1,n=!1)=>{if(!t||typeof t!="string")throw new TypeError("Expected a non-empty string");let s={negated:!1,fastpaths:!0};return e.fastpaths!==!1&&(t[0]==="."||t[0]==="*")&&(s.output=Tn.fastpaths(t,e)),s.output||(s=Tn(t,e)),ae.compileRe(s,e,r,n)};ae.toRegex=(t,e)=>{try{let r=e||{};return new RegExp(t,r.flags||(r.nocase?"i":""))}catch(r){if(e&&e.debug===!0)throw r;return/$^/}};ae.constants=Uf;oo.exports=ae});var uo=j((Jg,lo)=>{"use strict";lo.exports=co()});var yo=j((Vg,go)=>{"use strict";var ho=C("util"),po=za(),Ce=uo(),Ln=Bt(),fo=t=>t===""||t==="./",mo=t=>{let e=t.indexOf("{");return e>-1&&t.indexOf("}",e)>-1},te=(t,e,r)=>{e=[].concat(e),t=[].concat(t);let n=new Set,s=new Set,i=new Set,a=0,o=h=>{i.add(h.output),r&&r.onResult&&r.onResult(h)};for(let h=0;h<e.length;h++){let f=Ce(String(e[h]),{...r,onResult:o},!0),u=f.state.negated||f.state.negatedExtglob;u&&a++;for(let g of t){let x=f(g,!0);(u?!x.isMatch:x.isMatch)&&(u?n.add(x.output):(n.delete(x.output),s.add(x.output)))}}let l=(a===e.length?[...i]:[...s]).filter(h=>!n.has(h));if(r&&l.length===0){if(r.failglob===!0)throw new Error(`No matches found for "${e.join(", ")}"`);if(r.nonull===!0||r.nullglob===!0)return r.unescape?e.map(h=>h.replace(/\\/g,"")):e}return l};te.match=te;te.matcher=(t,e)=>Ce(t,e);te.isMatch=(t,e,r)=>Ce(e,r)(t);te.any=te.isMatch;te.not=(t,e,r={})=>{e=[].concat(e).map(String);let n=new Set,s=[],i=o=>{r.onResult&&r.onResult(o),s.push(o.output)},a=new Set(te(t,e,{...r,onResult:i}));for(let o of s)a.has(o)||n.add(o);return[...n]};te.contains=(t,e,r)=>{if(typeof t!="string")throw new TypeError(`Expected a string: "${ho.inspect(t)}"`);if(Array.isArray(e))return e.some(n=>te.contains(t,n,r));if(typeof e=="string"){if(fo(t)||fo(e))return!1;if(t.includes(e)||t.startsWith("./")&&t.slice(2).includes(e))return!0}return te.isMatch(t,e,{...r,contains:!0})};te.matchKeys=(t,e,r)=>{if(!Ln.isObject(t))throw new TypeError("Expected the first argument to be an object");let n=te(Object.keys(t),e,r),s={};for(let i of n)s[i]=t[i];return s};te.some=(t,e,r)=>{let n=[].concat(t);for(let s of[].concat(e)){let i=Ce(String(s),r);if(n.some(a=>i(a)))return!0}return!1};te.every=(t,e,r)=>{let n=[].concat(t);for(let s of[].concat(e)){let i=Ce(String(s),r);if(!n.every(a=>i(a)))return!1}return!0};te.all=(t,e,r)=>{if(typeof t!="string")throw new TypeError(`Expected a string: "${ho.inspect(t)}"`);return[].concat(e).every(n=>Ce(n,r)(t))};te.capture=(t,e,r)=>{let n=Ln.isWindows(r),i=Ce.makeRe(String(t),{...r,capture:!0}).exec(n?Ln.toPosixSlashes(e):e);if(i)return i.slice(1).map(a=>a===void 0?"":a)};te.makeRe=(...t)=>Ce.makeRe(...t);te.scan=(...t)=>Ce.scan(...t);te.parse=(t,e)=>{let r=[];for(let n of[].concat(t||[]))for(let s of po(String(n),e))r.push(Ce.parse(s,e));return r};te.braces=(t,e)=>{if(typeof t!="string")throw new TypeError("Expected a string");return e&&e.nobrace===!0||!mo(t)?[t]:po(t,e)};te.braceExpand=(t,e)=>{if(typeof t!="string")throw new TypeError("Expected a string");return te.braces(t,{...e,expand:!0})};te.hasBraces=mo;go.exports=te});var Po=j((Qg,So)=>{So.exports=C("events")});var xo=j((Zg,bo)=>{bo.exports=class{constructor(e){if(!(e>0)||e-1&e)throw new Error("Max size for a FixedFIFO should be a power of two");this.buffer=new Array(e),this.mask=e-1,this.top=0,this.btm=0,this.next=null}clear(){this.top=this.btm=0,this.next=null,this.buffer.fill(void 0)}push(e){return this.buffer[this.top]!==void 0?!1:(this.buffer[this.top]=e,this.top=this.top+1&this.mask,!0)}shift(){let e=this.buffer[this.btm];if(e!==void 0)return this.buffer[this.btm]=void 0,this.btm=this.btm+1&this.mask,e}peek(){return this.buffer[this.btm]}isEmpty(){return this.buffer[this.btm]===void 0}}});var In=j(($g,ko)=>{var Eo=xo();ko.exports=class{constructor(e){this.hwm=e||16,this.head=new Eo(this.hwm),this.tail=this.head,this.length=0}clear(){this.head=this.tail,this.head.clear(),this.length=0}push(e){if(this.length++,!this.head.push(e)){let r=this.head;this.head=r.next=new Eo(2*this.head.buffer.length),this.head.push(e)}}shift(){this.length!==0&&this.length--;let e=this.tail.shift();if(e===void 0&&this.tail.next){let r=this.tail.next;return this.tail.next=null,this.tail=r,this.tail.shift()}return e}peek(){let e=this.tail.peek();return e===void 0&&this.tail.next?this.tail.next.peek():e}isEmpty(){return this.length===0}}});var Pt=j((ey,Ro)=>{function Bf(t){return Buffer.isBuffer(t)||t instanceof Uint8Array}function jf(t){return Buffer.isEncoding(t)}function Mf(t,e,r){return Buffer.alloc(t,e,r)}function qf(t){return Buffer.allocUnsafe(t)}function Gf(t){return Buffer.allocUnsafeSlow(t)}function Wf(t,e){return Buffer.byteLength(t,e)}function zf(t,e){return Buffer.compare(t,e)}function Yf(t,e){return Buffer.concat(t,e)}function Kf(t,e,r,n,s){return ee(t).copy(e,r,n,s)}function Jf(t,e){return ee(t).equals(e)}function Vf(t,e,r,n,s){return ee(t).fill(e,r,n,s)}function Qf(t,e,r){return Buffer.from(t,e,r)}function Xf(t,e,r,n){return ee(t).includes(e,r,n)}function Zf(t,e,r,n){return ee(t).indexOf(e,r,n)}function _f(t,e,r,n){return ee(t).lastIndexOf(e,r,n)}function $f(t){return ee(t).swap16()}function eh(t){return ee(t).swap32()}function th(t){return ee(t).swap64()}function ee(t){return Buffer.isBuffer(t)?t:Buffer.from(t.buffer,t.byteOffset,t.byteLength)}function rh(t,e,r,n){return ee(t).toString(e,r,n)}function nh(t,e,r,n,s){return ee(t).write(e,r,n,s)}function sh(t,e){return ee(t).readDoubleBE(e)}function ih(t,e){return ee(t).readDoubleLE(e)}function ah(t,e){return ee(t).readFloatBE(e)}function oh(t,e){return ee(t).readFloatLE(e)}function ch(t,e){return ee(t).readInt32BE(e)}function lh(t,e){return ee(t).readInt32LE(e)}function uh(t,e){return ee(t).readUInt32BE(e)}function fh(t,e){return ee(t).readUInt32LE(e)}function hh(t,e,r){return ee(t).writeDoubleBE(e,r)}function ph(t,e,r){return ee(t).writeDoubleLE(e,r)}function dh(t,e,r){return ee(t).writeFloatBE(e,r)}function mh(t,e,r){return ee(t).writeFloatLE(e,r)}function gh(t,e,r){return ee(t).writeInt32BE(e,r)}function yh(t,e,r){return ee(t).writeInt32LE(e,r)}function Sh(t,e,r){return ee(t).writeUInt32BE(e,r)}function Ph(t,e,r){return ee(t).writeUInt32LE(e,r)}Ro.exports={isBuffer:Bf,isEncoding:jf,alloc:Mf,allocUnsafe:qf,allocUnsafeSlow:Gf,byteLength:Wf,compare:zf,concat:Yf,copy:Kf,equals:Jf,fill:Vf,from:Qf,includes:Xf,indexOf:Zf,lastIndexOf:_f,swap16:$f,swap32:eh,swap64:th,toBuffer:ee,toString:rh,write:nh,readDoubleBE:sh,readDoubleLE:ih,readFloatBE:ah,readFloatLE:oh,readInt32BE:ch,readInt32LE:lh,readUInt32BE:uh,readUInt32LE:fh,writeDoubleBE:hh,writeDoubleLE:ph,writeFloatBE:dh,writeFloatLE:mh,writeInt32BE:gh,writeInt32LE:yh,writeUInt32BE:Sh,writeUInt32LE:Ph}});var Ao=j((ry,wo)=>{var bh=Pt();wo.exports=class{constructor(e){this.encoding=e}get remaining(){return 0}decode(e){return bh.toString(e,this.encoding)}flush(){return""}}});var vo=j((sy,To)=>{var xh=Pt();To.exports=class{constructor(){this.codePoint=0,this.bytesSeen=0,this.bytesNeeded=0,this.lowerBoundary=128,this.upperBoundary=191}get remaining(){return this.bytesSeen}decode(e){if(this.bytesNeeded===0){let n=!0;for(let s=Math.max(0,e.byteLength-4),i=e.byteLength;s<i&&n;s++)n=e[s]<=127;if(n)return xh.toString(e,"utf8")}let r="";for(let n=0,s=e.byteLength;n<s;n++){let i=e[n];if(this.bytesNeeded===0){i<=127?r+=String.fromCharCode(i):(this.bytesSeen=1,i>=194&&i<=223?(this.bytesNeeded=2,this.codePoint=i&31):i>=224&&i<=239?(i===224?this.lowerBoundary=160:i===237&&(this.upperBoundary=159),this.bytesNeeded=3,this.codePoint=i&15):i>=240&&i<=244?(i===240&&(this.lowerBoundary=144),i===244&&(this.upperBoundary=143),this.bytesNeeded=4,this.codePoint=i&7):r+="\uFFFD");continue}if(i<this.lowerBoundary||i>this.upperBoundary){this.codePoint=0,this.bytesNeeded=0,this.bytesSeen=0,this.lowerBoundary=128,this.upperBoundary=191,r+="\uFFFD";continue}this.lowerBoundary=128,this.upperBoundary=191,this.codePoint=this.codePoint<<6|i&63,this.bytesSeen++,this.bytesSeen===this.bytesNeeded&&(r+=String.fromCodePoint(this.codePoint),this.codePoint=0,this.bytesNeeded=0,this.bytesSeen=0)}return r}flush(){let e=this.bytesNeeded>0?"\uFFFD":"";return this.codePoint=0,this.bytesNeeded=0,this.bytesSeen=0,this.lowerBoundary=128,this.upperBoundary=191,e}}});var Io=j((ay,Lo)=>{var Eh=Ao(),kh=vo();Lo.exports=class{constructor(e="utf8"){switch(this.encoding=Rh(e),this.encoding){case"utf8":this.decoder=new kh;break;case"utf16le":case"base64":throw new Error("Unsupported encoding: "+this.encoding);default:this.decoder=new Eh(this.encoding)}}get remaining(){return this.decoder.remaining}push(e){return typeof e=="string"?e:this.decoder.decode(e)}write(e){return this.push(e)}end(e){let r="";return e&&(r=this.push(e)),r+=this.decoder.flush(),r}};function Rh(t){switch(t=t.toLowerCase(),t){case"utf8":case"utf-8":return"utf8";case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return"utf16le";case"latin1":case"binary":return"latin1";case"base64":case"ascii":case"hex":return t;default:throw new Error("Unknown encoding: "+t)}}});var Kn=j((oy,$o)=>{var{EventEmitter:wh}=Po(),Rr=new Error("Stream was destroyed"),Fn=new Error("Premature close"),Uo=In(),Ah=Io(),On=typeof queueMicrotask>"u"?t=>global.process.nextTick(t):queueMicrotask,se=(1<<29)-1,De=1,jn=2,et=4,Mt=8,Ho=se^De,Th=se^jn,Yt=16,bt=32,kt=64,We=128,Kt=256,Mn=512,tt=1024,Nn=2048,qn=4096,Gn=8192,ve=16384,Ge=32768,wr=65536,rt=131072,Bo=Kt|Mn,vh=Yt|wr,Lh=kt|Yt,Ih=qn|We,Wn=Kt|rt,Fh=se^Yt,Oh=se^kt,Nh=se^(kt|wr),Fo=se^wr,Ch=se^Kt,Dh=se^(We|Gn),Uh=se^tt,Oo=se^Bo,jo=se^Ge,Hh=se^bt,Mo=se^rt,Bh=se^Wn,Me=1<<18,Et=2<<18,Jt=4<<18,nt=8<<18,Vt=16<<18,ze=32<<18,Cn=64<<18,xt=128<<18,zn=256<<18,st=512<<18,Ar=1024<<18,jh=se^(Me|zn),qo=se^Jt,Mh=se^(Me|st),qh=se^Vt,Gh=se^nt,Go=se^xt,Wh=se^Et,Wo=se^Ar,qt=Yt|Me,zo=se^qt,Yn=ve|ze,Ue=et|Mt|jn,Re=Ue|De,Yo=Ue|Yn,zh=qo&Oh,Tr=xt|Ge,Yh=Tr&zo,Ko=Re|Yh,Kh=Re|tt|ve,No=Re|ve|We,Jh=Re|tt|We,Vh=Re|qn|We|Gn,Qh=Re|Yt|tt|ve|wr|rt,Xh=Ue|tt|ve,Zh=bt|Re|Ge|kt,_h=Ge|De,$h=Re|st|ze,ep=nt|Vt,Jo=nt|Me,tp=nt|Vt|Re|Me,Co=Re|Me|nt|Ar,rp=Jt|Me,np=Me|zn,sp=Re|st|Jo|ze,ip=Vt|Ue|st|ze,ap=Et|Re|xt|Jt,op=st|ze|Ue,Pr=Symbol.asyncIterator||Symbol("asyncIterator"),br=class{constructor(e,{highWaterMark:r=16384,map:n=null,mapWritable:s,byteLength:i,byteLengthWritable:a}={}){this.stream=e,this.queue=new Uo,this.highWaterMark=r,this.buffered=0,this.error=null,this.pipeline=null,this.drains=null,this.byteLength=a||i||_o,this.map=s||n,this.afterWrite=up.bind(this),this.afterUpdateNextTick=pp.bind(this)}get ended(){return(this.stream._duplexState&ze)!==0}push(e){return this.stream._duplexState&op?!1:(this.map!==null&&(e=this.map(e)),this.buffered+=this.byteLength(e),this.queue.push(e),this.buffered<this.highWaterMark?(this.stream._duplexState|=nt,!0):(this.stream._duplexState|=ep,!1))}shift(){let e=this.queue.shift();return this.buffered-=this.byteLength(e),this.buffered===0&&(this.stream._duplexState&=Gh),e}end(e){typeof e=="function"?this.stream.once("finish",e):e!=null&&this.push(e),this.stream._duplexState=(this.stream._duplexState|st)&qo}autoBatch(e,r){let n=[],s=this.stream;for(n.push(e);(s._duplexState&Co)===Jo;)n.push(s._writableState.shift());if(s._duplexState&Re)return r(null);s._writev(n,r)}update(){let e=this.stream;e._duplexState|=Et;do{for(;(e._duplexState&Co)===nt;){let r=this.shift();e._duplexState|=np,e._write(r,this.afterWrite)}e._duplexState&rp||this.updateNonPrimary()}while(this.continueUpdate()===!0);e._duplexState&=Wh}updateNonPrimary(){let e=this.stream;if((e._duplexState&sp)===st){e._duplexState=e._duplexState|Me,e._final(lp.bind(this));return}if((e._duplexState&Ue)===et){e._duplexState&Tr||(e._duplexState|=qt,e._destroy(Vo.bind(this)));return}(e._duplexState&Ko)===De&&(e._duplexState=(e._duplexState|qt)&Ho,e._open(Qo.bind(this)))}continueUpdate(){return this.stream._duplexState&xt?(this.stream._duplexState&=Go,!0):!1}updateCallback(){(this.stream._duplexState&ap)===Jt?this.update():this.updateNextTick()}updateNextTick(){this.stream._duplexState&xt||(this.stream._duplexState|=xt,this.stream._duplexState&Et||On(this.afterUpdateNextTick))}},Dn=class{constructor(e,{highWaterMark:r=16384,map:n=null,mapReadable:s,byteLength:i,byteLengthReadable:a}={}){this.stream=e,this.queue=new Uo,this.highWaterMark=r===0?1:r,this.buffered=0,this.readAhead=r>0,this.error=null,this.pipeline=null,this.byteLength=a||i||_o,this.map=s||n,this.pipeTo=null,this.afterRead=fp.bind(this),this.afterUpdateNextTick=hp.bind(this)}get ended(){return(this.stream._duplexState&ve)!==0}pipe(e,r){if(this.pipeTo!==null)throw new Error("Can only pipe to one destination");if(typeof r!="function"&&(r=null),this.stream._duplexState|=Mn,this.pipeTo=e,this.pipeline=new Hn(this.stream,e,r),r&&this.stream.on("error",Do),zt(e))e._writableState.pipeline=this.pipeline,r&&e.on("error",Do),e.on("finish",this.pipeline.finished.bind(this.pipeline));else{let n=this.pipeline.done.bind(this.pipeline,e),s=this.pipeline.done.bind(this.pipeline,e,null);e.on("error",n),e.on("close",s),e.on("finish",this.pipeline.finished.bind(this.pipeline))}e.on("drain",cp.bind(this)),this.stream.emit("piping",e),e.emit("pipe",this.stream)}push(e){let r=this.stream;return e===null?(this.highWaterMark=0,r._duplexState=(r._duplexState|tt)&Nh,!1):this.map!==null&&(e=this.map(e),e===null)?(r._duplexState&=Fo,this.buffered<this.highWaterMark):(this.buffered+=this.byteLength(e),this.queue.push(e),r._duplexState=(r._duplexState|We)&Fo,this.buffered<this.highWaterMark)}shift(){let e=this.queue.shift();return this.buffered-=this.byteLength(e),this.buffered===0&&(this.stream._duplexState&=Dh),e}unshift(e){let r=[this.map!==null?this.map(e):e];for(;this.buffered>0;)r.push(this.shift());for(let n=0;n<r.length-1;n++){let s=r[n];this.buffered+=this.byteLength(s),this.queue.push(s)}this.push(r[r.length-1])}read(){let e=this.stream;if((e._duplexState&No)===We){let r=this.shift();return this.pipeTo!==null&&this.pipeTo.write(r)===!1&&(e._duplexState&=Oo),e._duplexState&Nn&&e.emit("data",r),r}return this.readAhead===!1&&(e._duplexState|=rt,this.updateNextTick()),null}drain(){let e=this.stream;for(;(e._duplexState&No)===We&&e._duplexState&Bo;){let r=this.shift();this.pipeTo!==null&&this.pipeTo.write(r)===!1&&(e._duplexState&=Oo),e._duplexState&Nn&&e.emit("data",r)}}update(){let e=this.stream;e._duplexState|=bt;do{for(this.drain();this.buffered<this.highWaterMark&&(e._duplexState&Qh)===rt;)e._duplexState|=vh,e._read(this.afterRead),this.drain();(e._duplexState&Vh)===Ih&&(e._duplexState|=Gn,e.emit("readable")),e._duplexState&Lh||this.updateNonPrimary()}while(this.continueUpdate()===!0);e._duplexState&=Hh}updateNonPrimary(){let e=this.stream;if((e._duplexState&Jh)===tt&&(e._duplexState=(e._duplexState|ve)&Uh,e.emit("end"),(e._duplexState&Yo)===Yn&&(e._duplexState|=et),this.pipeTo!==null&&this.pipeTo.end()),(e._duplexState&Ue)===et){e._duplexState&Tr||(e._duplexState|=qt,e._destroy(Vo.bind(this)));return}(e._duplexState&Ko)===De&&(e._duplexState=(e._duplexState|qt)&Ho,e._open(Qo.bind(this)))}continueUpdate(){return this.stream._duplexState&Ge?(this.stream._duplexState&=jo,!0):!1}updateCallback(){(this.stream._duplexState&Zh)===kt?this.update():this.updateNextTick()}updateNextTickIfOpen(){this.stream._duplexState&_h||(this.stream._duplexState|=Ge,this.stream._duplexState&bt||On(this.afterUpdateNextTick))}updateNextTick(){this.stream._duplexState&Ge||(this.stream._duplexState|=Ge,this.stream._duplexState&bt||On(this.afterUpdateNextTick))}},Un=class{constructor(e){this.data=null,this.afterTransform=mp.bind(e),this.afterFinal=null}},Hn=class{constructor(e,r,n){this.from=e,this.to=r,this.afterPipe=n,this.error=null,this.pipeToFinished=!1}finished(){this.pipeToFinished=!0}done(e,r){if(r&&(this.error=r),e===this.to&&(this.to=null,this.from!==null)){(!(this.from._duplexState&ve)||!this.pipeToFinished)&&this.from.destroy(this.error||new Error("Writable stream closed prematurely"));return}if(e===this.from&&(this.from=null,this.to!==null)){e._duplexState&ve||this.to.destroy(this.error||new Error("Readable stream closed before ending"));return}this.afterPipe!==null&&this.afterPipe(this.error),this.to=this.from=this.afterPipe=null}};function cp(){this.stream._duplexState|=Mn,this.updateCallback()}function lp(t){let e=this.stream;t&&e.destroy(t),e._duplexState&Ue||(e._duplexState|=ze,e.emit("finish")),(e._duplexState&Yo)===Yn&&(e._duplexState|=et),e._duplexState&=Mh,e._duplexState&Et?this.updateNextTick():this.update()}function Vo(t){let e=this.stream;!t&&this.error!==Rr&&(t=this.error),t&&e.emit("error",t),e._duplexState|=Mt,e.emit("close");let r=e._readableState,n=e._writableState;if(r!==null&&r.pipeline!==null&&r.pipeline.done(e,t),n!==null){for(;n.drains!==null&&n.drains.length>0;)n.drains.shift().resolve(!1);n.pipeline!==null&&n.pipeline.done(e,t)}}function up(t){let e=this.stream;t&&e.destroy(t),e._duplexState&=jh,this.drains!==null&&dp(this.drains),(e._duplexState&tp)===Vt&&(e._duplexState&=qh,(e._duplexState&Cn)===Cn&&e.emit("drain")),this.updateCallback()}function fp(t){t&&this.stream.destroy(t),this.stream._duplexState&=Fh,this.readAhead===!1&&!(this.stream._duplexState&Kt)&&(this.stream._duplexState&=Mo),this.updateCallback()}function hp(){this.stream._duplexState&bt||(this.stream._duplexState&=jo,this.update())}function pp(){this.stream._duplexState&Et||(this.stream._duplexState&=Go,this.update())}function dp(t){for(let e=0;e<t.length;e++)--t[e].writes===0&&(t.shift().resolve(!0),e--)}function Qo(t){let e=this.stream;t&&e.destroy(t),e._duplexState&et||(e._duplexState&Kh||(e._duplexState|=kt),e._duplexState&$h||(e._duplexState|=Jt),e.emit("open")),e._duplexState&=zo,e._writableState!==null&&e._writableState.updateCallback(),e._readableState!==null&&e._readableState.updateCallback()}function mp(t,e){e!=null&&this.push(e),this._writableState.afterWrite(t)}function gp(t){this._readableState!==null&&(t==="data"&&(this._duplexState|=Nn|Wn,this._readableState.updateNextTick()),t==="readable"&&(this._duplexState|=qn,this._readableState.updateNextTick())),this._writableState!==null&&t==="drain"&&(this._duplexState|=Cn,this._writableState.updateNextTick())}var Gt=class extends wh{constructor(e){super(),this._duplexState=0,this._readableState=null,this._writableState=null,e&&(e.open&&(this._open=e.open),e.destroy&&(this._destroy=e.destroy),e.predestroy&&(this._predestroy=e.predestroy),e.signal&&e.signal.addEventListener("abort",Ap.bind(this))),this.on("newListener",gp)}_open(e){e(null)}_destroy(e){e(null)}_predestroy(){}get readable(){return this._readableState!==null?!0:void 0}get writable(){return this._writableState!==null?!0:void 0}get destroyed(){return(this._duplexState&Mt)!==0}get destroying(){return(this._duplexState&Ue)!==0}destroy(e){this._duplexState&Ue||(e||(e=Rr),this._duplexState=(this._duplexState|et)&zh,this._readableState!==null&&(this._readableState.highWaterMark=0,this._readableState.error=e),this._writableState!==null&&(this._writableState.highWaterMark=0,this._writableState.error=e),this._duplexState|=jn,this._predestroy(),this._duplexState&=Th,this._readableState!==null&&this._readableState.updateNextTick(),this._writableState!==null&&this._writableState.updateNextTick())}},xr=class t extends Gt{constructor(e){super(e),this._duplexState|=De|ze|rt,this._readableState=new Dn(this,e),e&&(this._readableState.readAhead===!1&&(this._duplexState&=Mo),e.read&&(this._read=e.read),e.eagerOpen&&this._readableState.updateNextTick(),e.encoding&&this.setEncoding(e.encoding))}setEncoding(e){let r=new Ah(e),n=this._readableState.map||Pp;return this._readableState.map=s,this;function s(i){let a=r.push(i);return a===""&&(i.byteLength!==0||r.remaining>0)?null:n(a)}}_read(e){e(null)}pipe(e,r){return this._readableState.updateNextTick(),this._readableState.pipe(e,r),e}read(){return this._readableState.updateNextTick(),this._readableState.read()}push(e){return this._readableState.updateNextTickIfOpen(),this._readableState.push(e)}unshift(e){return this._readableState.updateNextTickIfOpen(),this._readableState.unshift(e)}resume(){return this._duplexState|=Wn,this._readableState.updateNextTick(),this}pause(){return this._duplexState&=this._readableState.readAhead===!1?Bh:Ch,this}static _fromAsyncIterator(e,r){let n,s=new t({...r,read(a){e.next().then(i).then(a.bind(null,null)).catch(a)},predestroy(){n=e.return()},destroy(a){if(!n)return a(null);n.then(a.bind(null,null)).catch(a)}});return s;function i(a){a.done?s.push(null):s.push(a.value)}}static from(e,r){if(kp(e))return e;if(e[Pr])return this._fromAsyncIterator(e[Pr](),r);Array.isArray(e)||(e=e===void 0?[]:[e]);let n=0;return new t({...r,read(s){this.push(n===e.length?null:e[n++]),s(null)}})}static isBackpressured(e){return(e._duplexState&Xh)!==0||e._readableState.buffered>=e._readableState.highWaterMark}static isPaused(e){return(e._duplexState&Kt)===0}[Pr](){let e=this,r=null,n=null,s=null;return this.on("error",l=>{r=l}),this.on("readable",i),this.on("close",a),{[Pr](){return this},next(){return new Promise(function(l,h){n=l,s=h;let f=e.read();f!==null?o(f):e._duplexState&Mt&&o(null)})},return(){return c(null)},throw(l){return c(l)}};function i(){n!==null&&o(e.read())}function a(){n!==null&&o(null)}function o(l){s!==null&&(r?s(r):l===null&&!(e._duplexState&ve)?s(Rr):n({value:l,done:l===null}),s=n=null)}function c(l){return e.destroy(l),new Promise((h,f)=>{if(e._duplexState&Mt)return h({value:void 0,done:!0});e.once("close",function(){l?f(l):h({value:void 0,done:!0})})})}}},Er=class extends Gt{constructor(e){super(e),this._duplexState|=De|ve,this._writableState=new br(this,e),e&&(e.writev&&(this._writev=e.writev),e.write&&(this._write=e.write),e.final&&(this._final=e.final),e.eagerOpen&&this._writableState.updateNextTick())}cork(){this._duplexState|=Ar}uncork(){this._duplexState&=Wo,this._writableState.updateNextTick()}_writev(e,r){r(null)}_write(e,r){this._writableState.autoBatch(e,r)}_final(e){e(null)}static isBackpressured(e){return(e._duplexState&ip)!==0}static drained(e){if(e.destroyed)return Promise.resolve(!1);let r=e._writableState,s=(Tp(e)?Math.min(1,r.queue.length):r.queue.length)+(e._duplexState&zn?1:0);return s===0?Promise.resolve(!0):(r.drains===null&&(r.drains=[]),new Promise(i=>{r.drains.push({writes:s,resolve:i})}))}write(e){return this._writableState.updateNextTick(),this._writableState.push(e)}end(e){return this._writableState.updateNextTick(),this._writableState.end(e),this}},Wt=class extends xr{constructor(e){super(e),this._duplexState=De|this._duplexState&rt,this._writableState=new br(this,e),e&&(e.writev&&(this._writev=e.writev),e.write&&(this._write=e.write),e.final&&(this._final=e.final))}cork(){this._duplexState|=Ar}uncork(){this._duplexState&=Wo,this._writableState.updateNextTick()}_writev(e,r){r(null)}_write(e,r){this._writableState.autoBatch(e,r)}_final(e){e(null)}write(e){return this._writableState.updateNextTick(),this._writableState.push(e)}end(e){return this._writableState.updateNextTick(),this._writableState.end(e),this}},kr=class extends Wt{constructor(e){super(e),this._transformState=new Un(this),e&&(e.transform&&(this._transform=e.transform),e.flush&&(this._flush=e.flush))}_write(e,r){this._readableState.buffered>=this._readableState.highWaterMark?this._transformState.data=e:this._transform(e,this._transformState.afterTransform)}_read(e){if(this._transformState.data!==null){let r=this._transformState.data;this._transformState.data=null,e(null),this._transform(r,this._transformState.afterTransform)}else e(null)}destroy(e){super.destroy(e),this._transformState.data!==null&&(this._transformState.data=null,this._transformState.afterTransform())}_transform(e,r){r(null,e)}_flush(e){e(null)}_final(e){this._transformState.afterFinal=e,this._flush(yp.bind(this))}},Bn=class extends kr{};function yp(t,e){let r=this._transformState.afterFinal;if(t)return r(t);e!=null&&this.push(e),this.push(null),r(null)}function Sp(...t){return new Promise((e,r)=>Xo(...t,n=>{if(n)return r(n);e()}))}function Xo(t,...e){let r=Array.isArray(t)?[...t,...e]:[t,...e],n=r.length&&typeof r[r.length-1]=="function"?r.pop():null;if(r.length<2)throw new Error("Pipeline requires at least 2 streams");let s=r[0],i=null,a=null;for(let l=1;l<r.length;l++)i=r[l],zt(s)?s.pipe(i,c):(o(s,!0,l>1,c),s.pipe(i)),s=i;if(n){let l=!1,h=zt(i)||!!(i._writableState&&i._writableState.autoDestroy);i.on("error",f=>{a===null&&(a=f)}),i.on("finish",()=>{l=!0,h||n(a)}),h&&i.on("close",()=>n(a||(l?null:Fn)))}return i;function o(l,h,f,u){l.on("error",u),l.on("close",g);function g(){if(h&&l._readableState&&!l._readableState.ended||f&&l._writableState&&!l._writableState.ended)return u(Fn)}}function c(l){if(!(!l||a)){a=l;for(let h of r)h.destroy(l)}}}function Pp(t){return t}function Zo(t){return!!t._readableState||!!t._writableState}function zt(t){return typeof t._duplexState=="number"&&Zo(t)}function bp(t){return!!t._readableState&&t._readableState.ended}function xp(t){return!!t._writableState&&t._writableState.ended}function Ep(t,e={}){let r=t._readableState&&t._readableState.error||t._writableState&&t._writableState.error;return!e.all&&r===Rr?null:r}function kp(t){return zt(t)&&t.readable}function Rp(t){return(t._duplexState&De)!==De||(t._duplexState&Tr)!==0}function wp(t){return typeof t=="object"&&t!==null&&typeof t.byteLength=="number"}function _o(t){return wp(t)?t.byteLength:1024}function Do(){}function Ap(){this.destroy(new Error("Stream aborted."))}function Tp(t){return t._writev!==Er.prototype._writev&&t._writev!==Wt.prototype._writev}$o.exports={pipeline:Xo,pipelinePromise:Sp,isStream:Zo,isStreamx:zt,isEnded:bp,isFinished:xp,isDisturbed:Rp,getStreamError:Ep,Stream:Gt,Writable:Er,Readable:xr,Duplex:Wt,Transform:kr,PassThrough:Bn}});var Qn=j(wt=>{var Z=Pt(),vp="0000000000000000000",Lp="7777777777777777777",vr=48,ec=Z.from([117,115,116,97,114,0]),Ip=Z.from([vr,vr]),Fp=Z.from([117,115,116,97,114,32]),Op=Z.from([32,0]),Np=4095,Qt=257,Vn=263;wt.decodeLongPath=function(e,r){return Rt(e,0,e.length,r)};wt.encodePax=function(e){let r="";e.name&&(r+=Jn(" path="+e.name+`
`)),e.linkname&&(r+=Jn(" linkpath="+e.linkname+`
`));let n=e.pax;if(n)for(let s in n)r+=Jn(" "+s+"="+n[s]+`
`);return Z.from(r)};wt.decodePax=function(e){let r={};for(;e.length;){let n=0;for(;n<e.length&&e[n]!==32;)n++;let s=parseInt(Z.toString(e.subarray(0,n)),10);if(!s)return r;let i=Z.toString(e.subarray(n+1,s-1)),a=i.indexOf("=");if(a===-1)return r;r[i.slice(0,a)]=i.slice(a+1),e=e.subarray(s)}return r};wt.encode=function(e){let r=Z.alloc(512),n=e.name,s="";if(e.typeflag===5&&n[n.length-1]!=="/"&&(n+="/"),Z.byteLength(n)!==n.length)return null;for(;Z.byteLength(n)>100;){let i=n.indexOf("/");if(i===-1)return null;s+=s?"/"+n.slice(0,i):n.slice(0,i),n=n.slice(i+1)}return Z.byteLength(n)>100||Z.byteLength(s)>155||e.linkname&&Z.byteLength(e.linkname)>100?null:(Z.write(r,n),Z.write(r,Ke(e.mode&Np,6),100),Z.write(r,Ke(e.uid,6),108),Z.write(r,Ke(e.gid,6),116),Mp(e.size,r,124),Z.write(r,Ke(e.mtime.getTime()/1e3|0,11),136),r[156]=vr+Bp(e.type),e.linkname&&Z.write(r,e.linkname,157),Z.copy(ec,r,Qt),Z.copy(Ip,r,Vn),e.uname&&Z.write(r,e.uname,265),e.gname&&Z.write(r,e.gname,297),Z.write(r,Ke(e.devmajor||0,6),329),Z.write(r,Ke(e.devminor||0,6),337),s&&Z.write(r,s,345),Z.write(r,Ke(rc(r),6),148),r)};wt.decode=function(e,r,n){let s=e[156]===0?0:e[156]-vr,i=Rt(e,0,100,r),a=Ye(e,100,8),o=Ye(e,108,8),c=Ye(e,116,8),l=Ye(e,124,12),h=Ye(e,136,12),f=Hp(s),u=e[157]===0?null:Rt(e,157,100,r),g=Rt(e,265,32),x=Rt(e,297,32),y=Ye(e,329,8),L=Ye(e,337,8),A=rc(e);if(A===8*32)return null;if(A!==Ye(e,148,8))throw new Error("Invalid tar header. Maybe the tar is corrupted or it needs to be gunzipped?");if(Cp(e))e[345]&&(i=Rt(e,345,155,r)+"/"+i);else if(!Dp(e)){if(!n)throw new Error("Invalid tar header: unknown format.")}return s===0&&i&&i[i.length-1]==="/"&&(s=5),{name:i,mode:a,uid:o,gid:c,size:l,mtime:new Date(1e3*h),type:f,linkname:u,uname:g,gname:x,devmajor:y,devminor:L,pax:null}};function Cp(t){return Z.equals(ec,t.subarray(Qt,Qt+6))}function Dp(t){return Z.equals(Fp,t.subarray(Qt,Qt+6))&&Z.equals(Op,t.subarray(Vn,Vn+2))}function Up(t,e,r){return typeof t!="number"?r:(t=~~t,t>=e?e:t>=0||(t+=e,t>=0)?t:0)}function Hp(t){switch(t){case 0:return"file";case 1:return"link";case 2:return"symlink";case 3:return"character-device";case 4:return"block-device";case 5:return"directory";case 6:return"fifo";case 7:return"contiguous-file";case 72:return"pax-header";case 55:return"pax-global-header";case 27:return"gnu-long-link-path";case 28:case 30:return"gnu-long-path"}return null}function Bp(t){switch(t){case"file":return 0;case"link":return 1;case"symlink":return 2;case"character-device":return 3;case"block-device":return 4;case"directory":return 5;case"fifo":return 6;case"contiguous-file":return 7;case"pax-header":return 72}return 0}function tc(t,e,r,n){for(;r<n;r++)if(t[r]===e)return r;return n}function rc(t){let e=256;for(let r=0;r<148;r++)e+=t[r];for(let r=156;r<512;r++)e+=t[r];return e}function Ke(t,e){return t=t.toString(8),t.length>e?Lp.slice(0,e)+" ":vp.slice(0,e-t.length)+t+" "}function jp(t,e,r){e[r]=128;for(let n=11;n>0;n--)e[r+n]=t&255,t=Math.floor(t/256)}function Mp(t,e,r){t.toString(8).length>11?jp(t,e,r):Z.write(e,Ke(t,11),r)}function qp(t){let e;if(t[0]===128)e=!0;else if(t[0]===255)e=!1;else return null;let r=[],n;for(n=t.length-1;n>0;n--){let a=t[n];e?r.push(a):r.push(255-a)}let s=0,i=r.length;for(n=0;n<i;n++)s+=r[n]*Math.pow(256,n);return e?s:-1*s}function Ye(t,e,r){if(t=t.subarray(e,e+r),e=0,t[e]&128)return qp(t);{for(;e<t.length&&t[e]===32;)e++;let n=Up(tc(t,32,e,t.length),t.length,t.length);for(;e<n&&t[e]===0;)e++;return n===e?0:parseInt(Z.toString(t.subarray(e,n)),8)}}function Rt(t,e,r,n){return Z.toString(t.subarray(e,tc(t,0,e,e+r)),n)}function Jn(t){let e=Z.byteLength(t),r=Math.floor(Math.log(e)/Math.log(10))+1;return e+r>=Math.pow(10,r)&&r++,e+r+t}});var oc=j((ly,ac)=>{var{Writable:Gp,Readable:Wp,getStreamError:nc}=Kn(),zp=In(),sc=Pt(),At=Qn(),Yp=sc.alloc(0),Zn=class{constructor(){this.buffered=0,this.shifted=0,this.queue=new zp,this._offset=0}push(e){this.buffered+=e.byteLength,this.queue.push(e)}shiftFirst(e){return this._buffered===0?null:this._next(e)}shift(e){if(e>this.buffered)return null;if(e===0)return Yp;let r=this._next(e);if(e===r.byteLength)return r;let n=[r];for(;(e-=r.byteLength)>0;)r=this._next(e),n.push(r);return sc.concat(n)}_next(e){let r=this.queue.peek(),n=r.byteLength-this._offset;if(e>=n){let s=this._offset?r.subarray(this._offset,r.byteLength):r;return this.queue.shift(),this._offset=0,this.buffered-=n,this.shifted+=n,s}return this.buffered-=e,this.shifted+=e,r.subarray(this._offset,this._offset+=e)}},_n=class extends Wp{constructor(e,r,n){super(),this.header=r,this.offset=n,this._parent=e}_read(e){this.header.size===0&&this.push(null),this._parent._stream===this&&this._parent._update(),e(null)}_predestroy(){this._parent.destroy(nc(this))}_detach(){this._parent._stream===this&&(this._parent._stream=null,this._parent._missing=ic(this.header.size),this._parent._update())}_destroy(e){this._detach(),e(null)}},$n=class extends Gp{constructor(e){super(e),e||(e={}),this._buffer=new Zn,this._offset=0,this._header=null,this._stream=null,this._missing=0,this._longHeader=!1,this._callback=Xn,this._locked=!1,this._finished=!1,this._pax=null,this._paxGlobal=null,this._gnuLongPath=null,this._gnuLongLinkPath=null,this._filenameEncoding=e.filenameEncoding||"utf-8",this._allowUnknownFormat=!!e.allowUnknownFormat,this._unlockBound=this._unlock.bind(this)}_unlock(e){if(this._locked=!1,e){this.destroy(e),this._continueWrite(e);return}this._update()}_consumeHeader(){if(this._locked)return!1;this._offset=this._buffer.shifted;try{this._header=At.decode(this._buffer.shift(512),this._filenameEncoding,this._allowUnknownFormat)}catch(e){return this._continueWrite(e),!1}if(!this._header)return!0;switch(this._header.type){case"gnu-long-path":case"gnu-long-link-path":case"pax-global-header":case"pax-header":return this._longHeader=!0,this._missing=this._header.size,!0}return this._locked=!0,this._applyLongHeaders(),this._header.size===0||this._header.type==="directory"?(this.emit("entry",this._header,this._createStream(),this._unlockBound),!0):(this._stream=this._createStream(),this._missing=this._header.size,this.emit("entry",this._header,this._stream,this._unlockBound),!0)}_applyLongHeaders(){this._gnuLongPath&&(this._header.name=this._gnuLongPath,this._gnuLongPath=null),this._gnuLongLinkPath&&(this._header.linkname=this._gnuLongLinkPath,this._gnuLongLinkPath=null),this._pax&&(this._pax.path&&(this._header.name=this._pax.path),this._pax.linkpath&&(this._header.linkname=this._pax.linkpath),this._pax.size&&(this._header.size=parseInt(this._pax.size,10)),this._header.pax=this._pax,this._pax=null)}_decodeLongHeader(e){switch(this._header.type){case"gnu-long-path":this._gnuLongPath=At.decodeLongPath(e,this._filenameEncoding);break;case"gnu-long-link-path":this._gnuLongLinkPath=At.decodeLongPath(e,this._filenameEncoding);break;case"pax-global-header":this._paxGlobal=At.decodePax(e);break;case"pax-header":this._pax=this._paxGlobal===null?At.decodePax(e):Object.assign({},this._paxGlobal,At.decodePax(e));break}}_consumeLongHeader(){this._longHeader=!1,this._missing=ic(this._header.size);let e=this._buffer.shift(this._header.size);try{this._decodeLongHeader(e)}catch(r){return this._continueWrite(r),!1}return!0}_consumeStream(){let e=this._buffer.shiftFirst(this._missing);if(e===null)return!1;this._missing-=e.byteLength;let r=this._stream.push(e);return this._missing===0?(this._stream.push(null),r&&this._stream._detach(),r&&this._locked===!1):r}_createStream(){return new _n(this,this._header,this._offset)}_update(){for(;this._buffer.buffered>0&&!this.destroying;){if(this._missing>0){if(this._stream!==null){if(this._consumeStream()===!1)return;continue}if(this._longHeader===!0){if(this._missing>this._buffer.buffered)break;if(this._consumeLongHeader()===!1)return!1;continue}let e=this._buffer.shiftFirst(this._missing);e!==null&&(this._missing-=e.byteLength);continue}if(this._buffer.buffered<512)break;if(this._stream!==null||this._consumeHeader()===!1)return}this._continueWrite(null)}_continueWrite(e){let r=this._callback;this._callback=Xn,r(e)}_write(e,r){this._callback=r,this._buffer.push(e),this._update()}_final(e){this._finished=this._missing===0&&this._buffer.buffered===0,e(this._finished?null:new Error("Unexpected end of data"))}_predestroy(){this._continueWrite(null)}_destroy(e){this._stream&&this._stream.destroy(nc(this)),e(null)}[Symbol.asyncIterator](){let e=null,r=null,n=null,s=null,i=null,a=this;return this.on("entry",l),this.on("error",u=>{e=u}),this.on("close",h),{[Symbol.asyncIterator](){return this},next(){return new Promise(c)},return(){return f(null)},throw(u){return f(u)}};function o(u){if(!i)return;let g=i;i=null,g(u)}function c(u,g){if(e)return g(e);if(s){u({value:s,done:!1}),s=null;return}r=u,n=g,o(null),a._finished&&r&&(r({value:void 0,done:!0}),r=n=null)}function l(u,g,x){i=x,g.on("error",Xn),r?(r({value:g,done:!1}),r=n=null):s=g}function h(){o(e),r&&(e?n(e):r({value:void 0,done:!0}),r=n=null)}function f(u){return a.destroy(u),o(u),new Promise((g,x)=>{if(a.destroyed)return g({value:void 0,done:!0});a.once("close",function(){u?x(u):g({value:void 0,done:!0})})})}}};ac.exports=function(e){return new $n(e)};function Xn(){}function ic(t){return t&=511,t&&512-t}});var lc=j((uy,es)=>{var cc={S_IFMT:61440,S_IFDIR:16384,S_IFCHR:8192,S_IFBLK:24576,S_IFIFO:4096,S_IFLNK:40960};try{es.exports=C("fs").constants||cc}catch{es.exports=cc}});var dc=j((fy,pc)=>{var{Readable:Kp,Writable:Jp,getStreamError:uc}=Kn(),it=Pt(),Tt=lc(),Lr=Qn(),Vp=493,Qp=420,fc=it.alloc(1024),rs=class extends Jp{constructor(e,r,n){super({mapWritable:Zp,eagerOpen:!0}),this.written=0,this.header=r,this._callback=n,this._linkname=null,this._isLinkname=r.type==="symlink"&&!r.linkname,this._isVoid=r.type!=="file"&&r.type!=="contiguous-file",this._finished=!1,this._pack=e,this._openCallback=null,this._pack._stream===null?this._pack._stream=this:this._pack._pending.push(this)}_open(e){this._openCallback=e,this._pack._stream===this&&this._continueOpen()}_continuePack(e){if(this._callback===null)return;let r=this._callback;this._callback=null,r(e)}_continueOpen(){this._pack._stream===null&&(this._pack._stream=this);let e=this._openCallback;if(this._openCallback=null,e!==null){if(this._pack.destroying)return e(new Error("pack stream destroyed"));if(this._pack._finalized)return e(new Error("pack stream is already finalized"));this._pack._stream=this,this._isLinkname||this._pack._encode(this.header),this._isVoid&&(this._finish(),this._continuePack(null)),e(null)}}_write(e,r){if(this._isLinkname)return this._linkname=this._linkname?it.concat([this._linkname,e]):e,r(null);if(this._isVoid)return e.byteLength>0?r(new Error("No body allowed for this entry")):r();if(this.written+=e.byteLength,this._pack.push(e))return r();this._pack._drain=r}_finish(){this._finished||(this._finished=!0,this._isLinkname&&(this.header.linkname=this._linkname?it.toString(this._linkname,"utf-8"):"",this._pack._encode(this.header)),hc(this._pack,this.header.size),this._pack._done(this))}_final(e){if(this.written!==this.header.size)return e(new Error("Size mismatch"));this._finish(),e(null)}_getError(){return uc(this)||new Error("tar entry destroyed")}_predestroy(){this._pack.destroy(this._getError())}_destroy(e){this._pack._done(this),this._continuePack(this._finished?null:this._getError()),e()}},ns=class extends Kp{constructor(e){super(e),this._drain=ts,this._finalized=!1,this._finalizing=!1,this._pending=[],this._stream=null}entry(e,r,n){if(this._finalized||this.destroying)throw new Error("already finalized or destroyed");typeof r=="function"&&(n=r,r=null),n||(n=ts),(!e.size||e.type==="symlink")&&(e.size=0),e.type||(e.type=Xp(e.mode)),e.mode||(e.mode=e.type==="directory"?Vp:Qp),e.uid||(e.uid=0),e.gid||(e.gid=0),e.mtime||(e.mtime=new Date),typeof r=="string"&&(r=it.from(r));let s=new rs(this,e,n);return it.isBuffer(r)?(e.size=r.byteLength,s.write(r),s.end(),s):(s._isVoid,s)}finalize(){if(this._stream||this._pending.length>0){this._finalizing=!0;return}this._finalized||(this._finalized=!0,this.push(fc),this.push(null))}_done(e){e===this._stream&&(this._stream=null,this._finalizing&&this.finalize(),this._pending.length&&this._pending.shift()._continueOpen())}_encode(e){if(!e.pax){let r=Lr.encode(e);if(r){this.push(r);return}}this._encodePax(e)}_encodePax(e){let r=Lr.encodePax({name:e.name,linkname:e.linkname,pax:e.pax}),n={name:"PaxHeader",mode:e.mode,uid:e.uid,gid:e.gid,size:r.byteLength,mtime:e.mtime,type:"pax-header",linkname:e.linkname&&"PaxHeader",uname:e.uname,gname:e.gname,devmajor:e.devmajor,devminor:e.devminor};this.push(Lr.encode(n)),this.push(r),hc(this,r.byteLength),n.size=e.size,n.type=e.type,this.push(Lr.encode(n))}_doDrain(){let e=this._drain;this._drain=ts,e()}_predestroy(){let e=uc(this);for(this._stream&&this._stream.destroy(e);this._pending.length;){let r=this._pending.shift();r.destroy(e),r._continueOpen()}this._doDrain()}_read(e){this._doDrain(),e()}};pc.exports=function(e){return new ns(e)};function Xp(t){switch(t&Tt.S_IFMT){case Tt.S_IFBLK:return"block-device";case Tt.S_IFCHR:return"character-device";case Tt.S_IFDIR:return"directory";case Tt.S_IFIFO:return"fifo";case Tt.S_IFLNK:return"symlink"}return"file"}function ts(){}function hc(t,e){e&=511,e&&t.push(fc.subarray(0,512-e))}function Zp(t){return it.isBuffer(t)?t:it.from(t)}});var mc=j(ss=>{ss.extract=oc();ss.pack=dc()});var wc=j((Py,od)=>{od.exports=`# This file can't import anything as we include the contents of this file
# directly in nix eval --apply arguments (see how this file is included in runner/src/common.ts)

with builtins;

let
  nameValuePair = name: value: { inherit name value; };

  filterAttrs = pred: set:
    listToAttrs (concatMap (name: let v = set.\${name}; in if pred name v then [(nameValuePair name v)] else []) (attrNames set));

  ##

  getPackages = manifest:
    mapAttrs (name: pkg:
      filterAttrs (key: b: (builtins.elem key [
        "name"
        "outputHash"
        "outputHashByPlatform"
      ])) pkg
    ) manifest;
in
`});var el=j(Ie=>{"use strict";Object.defineProperty(Ie,"__esModule",{value:!0});var cd=C("zlib"),Uc=C("path"),ot=C("module"),ie=C("url"),Ac=C("util"),ld=C("assert"),ud=C("fs"),fd=C("crypto"),hd=C("os"),Br=t=>t&&typeof t=="object"&&"default"in t?t:{default:t},Hc=Br(cd),Nr=Br(Uc),pd=Br(ld),dd=Br(ud),Bc=(t=>(t.HARD="HARD",t.SOFT="SOFT",t))(Bc||{}),md=456789e3,hs={root:"/",dot:".",parent:".."},Cr={home:"~",nodeModules:"node_modules",manifest:"package.json",lockfile:"yarn.lock",virtual:"__virtual__",pnpJs:".pnp.js",pnpCjs:".pnp.cjs",pnpData:".pnp.data.json",pnpEsmLoader:".pnp.loader.mjs",rc:".yarnrc.yml",env:".env"},P=Object.create(Nr.default),J=Object.create(Nr.default.posix);P.cwd=()=>process.cwd();J.cwd=process.platform==="win32"?()=>bs(process.cwd()):process.cwd;process.platform==="win32"&&(J.resolve=(...t)=>t.length>0&&J.isAbsolute(t[0])?Nr.default.posix.resolve(...t):Nr.default.posix.resolve(J.cwd(),...t));var jc=function(t,e,r){return e=t.normalize(e),r=t.normalize(r),e===r?".":(e.endsWith(t.sep)||(e=e+t.sep),r.startsWith(e)?r.slice(e.length):null)};P.contains=(t,e)=>jc(P,t,e);J.contains=(t,e)=>jc(J,t,e);var gd=/^([a-zA-Z]:.*)$/,yd=/^\/\/(\.\/)?(.*)$/,Sd=/^\/([a-zA-Z]:.*)$/,Pd=/^\/unc\/(\.dot\/)?(.*)$/;function bd(t){let e,r;if(e=t.match(Sd))t=e[1];else if(r=t.match(Pd))t=`\\\\${r[1]?".\\":""}${r[2]}`;else return t;return t.replace(/\//g,"\\")}function xd(t){t=t.replace(/\\/g,"/");let e,r;return(e=t.match(gd))?t=`/${e[1]}`:(r=t.match(yd))&&(t=`/unc/${r[1]?".dot/":""}${r[2]}`),t}var bs=process.platform==="win32"?xd:t=>t,Mc=process.platform==="win32"?bd:t=>t;P.fromPortablePath=Mc;P.toPortablePath=bs;function qc(t,e){return t===P?Mc(e):bs(e)}var lt=new Date(md*1e3),Ed=lt.getTime();async function kd(t,e,r,n,s){let i=t.pathUtils.normalize(e),a=r.pathUtils.normalize(n),o=[],c=[],{atime:l,mtime:h}=s.stableTime?{atime:lt,mtime:lt}:await r.lstatPromise(a);await t.mkdirpPromise(t.pathUtils.dirname(e),{utimes:[l,h]}),await ps(o,c,t,i,r,a,{...s,didParentExist:!0});for(let f of o)await f();await Promise.all(c.map(f=>f()))}async function ps(t,e,r,n,s,i,a){let o=a.didParentExist?await Gc(r,n):null,c=await s.lstatPromise(i),{atime:l,mtime:h}=a.stableTime?{atime:lt,mtime:lt}:c,f;switch(!0){case c.isDirectory():f=await Rd(t,e,r,n,o,s,i,c,a);break;case c.isFile():f=await Td(t,e,r,n,o,s,i,c,a);break;case c.isSymbolicLink():f=await vd(t,e,r,n,o,s,i,c,a);break;default:throw new Error(`Unsupported file type (${c.mode})`)}return(a.linkStrategy?.type!=="HardlinkFromIndex"||!c.isFile())&&((f||o?.mtime?.getTime()!==h.getTime()||o?.atime?.getTime()!==l.getTime())&&(e.push(()=>r.lutimesPromise(n,l,h)),f=!0),(o===null||(o.mode&511)!==(c.mode&511))&&(e.push(()=>r.chmodPromise(n,c.mode&511)),f=!0)),f}async function Gc(t,e){try{return await t.lstatPromise(e)}catch{return null}}async function Rd(t,e,r,n,s,i,a,o,c){if(s!==null&&!s.isDirectory())if(c.overwrite)t.push(async()=>r.removePromise(n)),s=null;else return!1;let l=!1;s===null&&(t.push(async()=>{try{await r.mkdirPromise(n,{mode:o.mode})}catch(u){if(u.code!=="EEXIST")throw u}}),l=!0);let h=await i.readdirPromise(a),f=c.didParentExist&&!s?{...c,didParentExist:!1}:c;if(c.stableSort)for(let u of h.sort())await ps(t,e,r,r.pathUtils.join(n,u),i,i.pathUtils.join(a,u),f)&&(l=!0);else(await Promise.all(h.map(async g=>{await ps(t,e,r,r.pathUtils.join(n,g),i,i.pathUtils.join(a,g),f)}))).some(g=>g)&&(l=!0);return l}async function wd(t,e,r,n,s,i,a,o,c,l){let h=await i.checksumFilePromise(a,{algorithm:"sha1"}),f=420,u=o.mode&511,g=`${h}${u!==f?u.toString(8):""}`,x=r.pathUtils.join(l.indexPath,h.slice(0,2),`${g}.dat`),y;(_=>{_[_.Lock=0]="Lock",_[_.Rename=1]="Rename"})(y||(y={}));let L=1,A=await Gc(r,x);if(s){let _=A&&s.dev===A.dev&&s.ino===A.ino,M=A?.mtimeMs!==Ed;if(_&&M&&l.autoRepair&&(L=0,A=null),!_)if(c.overwrite)t.push(async()=>r.removePromise(n)),s=null;else return!1}let H=!A&&L===1?`${x}.${Math.floor(Math.random()*4294967296).toString(16).padStart(8,"0")}`:null,N=!1;return t.push(async()=>{if(!A&&(L===0&&await r.lockPromise(x,async()=>{let _=await i.readFilePromise(a);await r.writeFilePromise(x,_)}),L===1&&H)){let _=await i.readFilePromise(a);await r.writeFilePromise(H,_);try{await r.linkPromise(H,x)}catch(M){if(M.code==="EEXIST")N=!0,await r.unlinkPromise(H);else throw M}}s||await r.linkPromise(x,n)}),e.push(async()=>{A||(await r.lutimesPromise(x,lt,lt),u!==f&&await r.chmodPromise(x,u)),H&&!N&&await r.unlinkPromise(H)}),!1}async function Ad(t,e,r,n,s,i,a,o,c){if(s!==null)if(c.overwrite)t.push(async()=>r.removePromise(n)),s=null;else return!1;return t.push(async()=>{let l=await i.readFilePromise(a);await r.writeFilePromise(n,l)}),!0}async function Td(t,e,r,n,s,i,a,o,c){return c.linkStrategy?.type==="HardlinkFromIndex"?wd(t,e,r,n,s,i,a,o,c,c.linkStrategy):Ad(t,e,r,n,s,i,a,o,c)}async function vd(t,e,r,n,s,i,a,o,c){if(s!==null)if(c.overwrite)t.push(async()=>r.removePromise(n)),s=null;else return!1;return t.push(async()=>{await r.symlinkPromise(qc(r.pathUtils,await i.readlinkPromise(a)),n)}),!0}var Dr=class{pathUtils;constructor(e){this.pathUtils=e}async*genTraversePromise(e,{stableSort:r=!1}={}){let n=[e];for(;n.length>0;){let s=n.shift();if((await this.lstatPromise(s)).isDirectory()){let a=await this.readdirPromise(s);if(r)for(let o of a.sort())n.push(this.pathUtils.join(s,o));else throw new Error("Not supported")}else yield s}}async checksumFilePromise(e,{algorithm:r="sha512"}={}){let n=await this.openPromise(e,"r");try{let i=Buffer.allocUnsafeSlow(65536),a=fd.createHash(r),o=0;for(;(o=await this.readPromise(n,i,0,65536))!==0;)a.update(o===65536?i:i.slice(0,o));return a.digest("hex")}finally{await this.closePromise(n)}}async removePromise(e,{recursive:r=!0,maxRetries:n=5}={}){let s;try{s=await this.lstatPromise(e)}catch(i){if(i.code==="ENOENT")return;throw i}if(s.isDirectory()){if(r){let i=await this.readdirPromise(e);await Promise.all(i.map(a=>this.removePromise(this.pathUtils.resolve(e,a))))}for(let i=0;i<=n;i++)try{await this.rmdirPromise(e);break}catch(a){if(a.code!=="EBUSY"&&a.code!=="ENOTEMPTY")throw a;i<n&&await new Promise(o=>setTimeout(o,i*100))}}else await this.unlinkPromise(e)}removeSync(e,{recursive:r=!0}={}){let n;try{n=this.lstatSync(e)}catch(s){if(s.code==="ENOENT")return;throw s}if(n.isDirectory()){if(r)for(let s of this.readdirSync(e))this.removeSync(this.pathUtils.resolve(e,s));this.rmdirSync(e)}else this.unlinkSync(e)}async mkdirpPromise(e,{chmod:r,utimes:n}={}){if(e=this.resolve(e),e===this.pathUtils.dirname(e))return;let s=e.split(this.pathUtils.sep),i;for(let a=2;a<=s.length;++a){let o=s.slice(0,a).join(this.pathUtils.sep);if(!this.existsSync(o)){try{await this.mkdirPromise(o)}catch(c){if(c.code==="EEXIST")continue;throw c}if(i??=o,r!=null&&await this.chmodPromise(o,r),n!=null)await this.utimesPromise(o,n[0],n[1]);else{let c=await this.statPromise(this.pathUtils.dirname(o));await this.utimesPromise(o,c.atime,c.mtime)}}}return i}mkdirpSync(e,{chmod:r,utimes:n}={}){if(e=this.resolve(e),e===this.pathUtils.dirname(e))return;let s=e.split(this.pathUtils.sep),i;for(let a=2;a<=s.length;++a){let o=s.slice(0,a).join(this.pathUtils.sep);if(!this.existsSync(o)){try{this.mkdirSync(o)}catch(c){if(c.code==="EEXIST")continue;throw c}if(i??=o,r!=null&&this.chmodSync(o,r),n!=null)this.utimesSync(o,n[0],n[1]);else{let c=this.statSync(this.pathUtils.dirname(o));this.utimesSync(o,c.atime,c.mtime)}}}return i}async copyPromise(e,r,{baseFs:n=this,overwrite:s=!0,stableSort:i=!1,stableTime:a=!1,linkStrategy:o=null}={}){return await kd(this,e,n,r,{overwrite:s,stableSort:i,stableTime:a,linkStrategy:o})}copySync(e,r,{baseFs:n=this,overwrite:s=!0}={}){let i=n.lstatSync(r),a=this.existsSync(e);if(i.isDirectory()){this.mkdirpSync(e);let c=n.readdirSync(r);for(let l of c)this.copySync(this.pathUtils.join(e,l),n.pathUtils.join(r,l),{baseFs:n,overwrite:s})}else if(i.isFile()){if(!a||s){a&&this.removeSync(e);let c=n.readFileSync(r);this.writeFileSync(e,c)}}else if(i.isSymbolicLink()){if(!a||s){a&&this.removeSync(e);let c=n.readlinkSync(r);this.symlinkSync(qc(this.pathUtils,c),e)}}else throw new Error(`Unsupported file type (file: ${r}, mode: 0o${i.mode.toString(8).padStart(6,"0")})`);let o=i.mode&511;this.chmodSync(e,o)}async changeFilePromise(e,r,n={}){return Buffer.isBuffer(r)?this.changeFileBufferPromise(e,r,n):this.changeFileTextPromise(e,r,n)}async changeFileBufferPromise(e,r,{mode:n}={}){let s=Buffer.alloc(0);try{s=await this.readFilePromise(e)}catch{}Buffer.compare(s,r)!==0&&await this.writeFilePromise(e,r,{mode:n})}async changeFileTextPromise(e,r,{automaticNewlines:n,mode:s}={}){let i="";try{i=await this.readFilePromise(e,"utf8")}catch{}let a=n?Tc(i,r):r;i!==a&&await this.writeFilePromise(e,a,{mode:s})}changeFileSync(e,r,n={}){return Buffer.isBuffer(r)?this.changeFileBufferSync(e,r,n):this.changeFileTextSync(e,r,n)}changeFileBufferSync(e,r,{mode:n}={}){let s=Buffer.alloc(0);try{s=this.readFileSync(e)}catch{}Buffer.compare(s,r)!==0&&this.writeFileSync(e,r,{mode:n})}changeFileTextSync(e,r,{automaticNewlines:n=!1,mode:s}={}){let i="";try{i=this.readFileSync(e,"utf8")}catch{}let a=n?Tc(i,r):r;i!==a&&this.writeFileSync(e,a,{mode:s})}async movePromise(e,r){try{await this.renamePromise(e,r)}catch(n){if(n.code==="EXDEV")await this.copyPromise(r,e),await this.removePromise(e);else throw n}}moveSync(e,r){try{this.renameSync(e,r)}catch(n){if(n.code==="EXDEV")this.copySync(r,e),this.removeSync(e);else throw n}}async lockPromise(e,r){let n=`${e}.flock`,s=1e3/60,i=Date.now(),a=null,o=async()=>{let c;try{[c]=await this.readJsonPromise(n)}catch{return Date.now()-i<500}try{return process.kill(c,0),!0}catch{return!1}};for(;a===null;)try{a=await this.openPromise(n,"wx")}catch(c){if(c.code==="EEXIST"){if(!await o())try{await this.unlinkPromise(n);continue}catch{}if(Date.now()-i<60*1e3)await new Promise(l=>setTimeout(l,s));else throw new Error(`Couldn't acquire a lock in a reasonable time (via ${n})`)}else throw c}await this.writePromise(a,JSON.stringify([process.pid]));try{return await r()}finally{try{await this.closePromise(a),await this.unlinkPromise(n)}catch{}}}async readJsonPromise(e){let r=await this.readFilePromise(e,"utf8");try{return JSON.parse(r)}catch(n){throw n.message+=` (in ${e})`,n}}readJsonSync(e){let r=this.readFileSync(e,"utf8");try{return JSON.parse(r)}catch(n){throw n.message+=` (in ${e})`,n}}async writeJsonPromise(e,r,{compact:n=!1}={}){let s=n?0:2;return await this.writeFilePromise(e,`${JSON.stringify(r,null,s)}
`)}writeJsonSync(e,r,{compact:n=!1}={}){let s=n?0:2;return this.writeFileSync(e,`${JSON.stringify(r,null,s)}
`)}async preserveTimePromise(e,r){let n=await this.lstatPromise(e),s=await r();typeof s<"u"&&(e=s),await this.lutimesPromise(e,n.atime,n.mtime)}async preserveTimeSync(e,r){let n=this.lstatSync(e),s=r();typeof s<"u"&&(e=s),this.lutimesSync(e,n.atime,n.mtime)}},ds=class extends Dr{constructor(){super(J)}};function Ld(t){let e=t.match(/\r?\n/g);if(e===null)return hd.EOL;let r=e.filter(s=>s===`\r
`).length,n=e.length-r;return r>n?`\r
`:`
`}function Tc(t,e){return e.replace(/\r?\n/g,Ld(t))}var ms=class extends Dr{getExtractHint(e){return this.baseFs.getExtractHint(e)}resolve(e){return this.mapFromBase(this.baseFs.resolve(this.mapToBase(e)))}getRealPath(){return this.mapFromBase(this.baseFs.getRealPath())}async openPromise(e,r,n){return this.baseFs.openPromise(this.mapToBase(e),r,n)}openSync(e,r,n){return this.baseFs.openSync(this.mapToBase(e),r,n)}async opendirPromise(e,r){return Object.assign(await this.baseFs.opendirPromise(this.mapToBase(e),r),{path:e})}opendirSync(e,r){return Object.assign(this.baseFs.opendirSync(this.mapToBase(e),r),{path:e})}async readPromise(e,r,n,s,i){return await this.baseFs.readPromise(e,r,n,s,i)}readSync(e,r,n,s,i){return this.baseFs.readSync(e,r,n,s,i)}async writePromise(e,r,n,s,i){return typeof r=="string"?await this.baseFs.writePromise(e,r,n):await this.baseFs.writePromise(e,r,n,s,i)}writeSync(e,r,n,s,i){return typeof r=="string"?this.baseFs.writeSync(e,r,n):this.baseFs.writeSync(e,r,n,s,i)}async closePromise(e){return this.baseFs.closePromise(e)}closeSync(e){this.baseFs.closeSync(e)}createReadStream(e,r){return this.baseFs.createReadStream(e!==null?this.mapToBase(e):e,r)}createWriteStream(e,r){return this.baseFs.createWriteStream(e!==null?this.mapToBase(e):e,r)}async realpathPromise(e){return this.mapFromBase(await this.baseFs.realpathPromise(this.mapToBase(e)))}realpathSync(e){return this.mapFromBase(this.baseFs.realpathSync(this.mapToBase(e)))}async existsPromise(e){return this.baseFs.existsPromise(this.mapToBase(e))}existsSync(e){return this.baseFs.existsSync(this.mapToBase(e))}accessSync(e,r){return this.baseFs.accessSync(this.mapToBase(e),r)}async accessPromise(e,r){return this.baseFs.accessPromise(this.mapToBase(e),r)}async statPromise(e,r){return this.baseFs.statPromise(this.mapToBase(e),r)}statSync(e,r){return this.baseFs.statSync(this.mapToBase(e),r)}async fstatPromise(e,r){return this.baseFs.fstatPromise(e,r)}fstatSync(e,r){return this.baseFs.fstatSync(e,r)}lstatPromise(e,r){return this.baseFs.lstatPromise(this.mapToBase(e),r)}lstatSync(e,r){return this.baseFs.lstatSync(this.mapToBase(e),r)}async fchmodPromise(e,r){return this.baseFs.fchmodPromise(e,r)}fchmodSync(e,r){return this.baseFs.fchmodSync(e,r)}async chmodPromise(e,r){return this.baseFs.chmodPromise(this.mapToBase(e),r)}chmodSync(e,r){return this.baseFs.chmodSync(this.mapToBase(e),r)}async fchownPromise(e,r,n){return this.baseFs.fchownPromise(e,r,n)}fchownSync(e,r,n){return this.baseFs.fchownSync(e,r,n)}async chownPromise(e,r,n){return this.baseFs.chownPromise(this.mapToBase(e),r,n)}chownSync(e,r,n){return this.baseFs.chownSync(this.mapToBase(e),r,n)}async renamePromise(e,r){return this.baseFs.renamePromise(this.mapToBase(e),this.mapToBase(r))}renameSync(e,r){return this.baseFs.renameSync(this.mapToBase(e),this.mapToBase(r))}async copyFilePromise(e,r,n=0){return this.baseFs.copyFilePromise(this.mapToBase(e),this.mapToBase(r),n)}copyFileSync(e,r,n=0){return this.baseFs.copyFileSync(this.mapToBase(e),this.mapToBase(r),n)}async appendFilePromise(e,r,n){return this.baseFs.appendFilePromise(this.fsMapToBase(e),r,n)}appendFileSync(e,r,n){return this.baseFs.appendFileSync(this.fsMapToBase(e),r,n)}async writeFilePromise(e,r,n){return this.baseFs.writeFilePromise(this.fsMapToBase(e),r,n)}writeFileSync(e,r,n){return this.baseFs.writeFileSync(this.fsMapToBase(e),r,n)}async unlinkPromise(e){return this.baseFs.unlinkPromise(this.mapToBase(e))}unlinkSync(e){return this.baseFs.unlinkSync(this.mapToBase(e))}async utimesPromise(e,r,n){return this.baseFs.utimesPromise(this.mapToBase(e),r,n)}utimesSync(e,r,n){return this.baseFs.utimesSync(this.mapToBase(e),r,n)}async lutimesPromise(e,r,n){return this.baseFs.lutimesPromise(this.mapToBase(e),r,n)}lutimesSync(e,r,n){return this.baseFs.lutimesSync(this.mapToBase(e),r,n)}async mkdirPromise(e,r){return this.baseFs.mkdirPromise(this.mapToBase(e),r)}mkdirSync(e,r){return this.baseFs.mkdirSync(this.mapToBase(e),r)}async rmdirPromise(e,r){return this.baseFs.rmdirPromise(this.mapToBase(e),r)}rmdirSync(e,r){return this.baseFs.rmdirSync(this.mapToBase(e),r)}async rmPromise(e,r){return this.baseFs.rmPromise(this.mapToBase(e),r)}rmSync(e,r){return this.baseFs.rmSync(this.mapToBase(e),r)}async linkPromise(e,r){return this.baseFs.linkPromise(this.mapToBase(e),this.mapToBase(r))}linkSync(e,r){return this.baseFs.linkSync(this.mapToBase(e),this.mapToBase(r))}async symlinkPromise(e,r,n){let s=this.mapToBase(r);if(this.pathUtils.isAbsolute(e))return this.baseFs.symlinkPromise(this.mapToBase(e),s,n);let i=this.mapToBase(this.pathUtils.join(this.pathUtils.dirname(r),e)),a=this.baseFs.pathUtils.relative(this.baseFs.pathUtils.dirname(s),i);return this.baseFs.symlinkPromise(a,s,n)}symlinkSync(e,r,n){let s=this.mapToBase(r);if(this.pathUtils.isAbsolute(e))return this.baseFs.symlinkSync(this.mapToBase(e),s,n);let i=this.mapToBase(this.pathUtils.join(this.pathUtils.dirname(r),e)),a=this.baseFs.pathUtils.relative(this.baseFs.pathUtils.dirname(s),i);return this.baseFs.symlinkSync(a,s,n)}async readFilePromise(e,r){return this.baseFs.readFilePromise(this.fsMapToBase(e),r)}readFileSync(e,r){return this.baseFs.readFileSync(this.fsMapToBase(e),r)}readdirPromise(e,r){return this.baseFs.readdirPromise(this.mapToBase(e),r)}readdirSync(e,r){return this.baseFs.readdirSync(this.mapToBase(e),r)}async readlinkPromise(e){return this.mapFromBase(await this.baseFs.readlinkPromise(this.mapToBase(e)))}readlinkSync(e){return this.mapFromBase(this.baseFs.readlinkSync(this.mapToBase(e)))}async truncatePromise(e,r){return this.baseFs.truncatePromise(this.mapToBase(e),r)}truncateSync(e,r){return this.baseFs.truncateSync(this.mapToBase(e),r)}async ftruncatePromise(e,r){return this.baseFs.ftruncatePromise(e,r)}ftruncateSync(e,r){return this.baseFs.ftruncateSync(e,r)}watch(e,r,n){return this.baseFs.watch(this.mapToBase(e),r,n)}watchFile(e,r,n){return this.baseFs.watchFile(this.mapToBase(e),r,n)}unwatchFile(e,r){return this.baseFs.unwatchFile(this.mapToBase(e),r)}fsMapToBase(e){return typeof e=="number"?e:this.mapToBase(e)}};function vc(t){let e=t;return typeof t.path=="string"&&(e.path=P.toPortablePath(t.path)),e}var gs=class extends ds{realFs;constructor(e=dd.default){super(),this.realFs=e}getExtractHint(){return!1}getRealPath(){return hs.root}resolve(e){return J.resolve(e)}async openPromise(e,r,n){return await new Promise((s,i)=>{this.realFs.open(P.fromPortablePath(e),r,n,this.makeCallback(s,i))})}openSync(e,r,n){return this.realFs.openSync(P.fromPortablePath(e),r,n)}async opendirPromise(e,r){return await new Promise((n,s)=>{typeof r<"u"?this.realFs.opendir(P.fromPortablePath(e),r,this.makeCallback(n,s)):this.realFs.opendir(P.fromPortablePath(e),this.makeCallback(n,s))}).then(n=>{let s=n;return Object.defineProperty(s,"path",{value:e,configurable:!0,writable:!0}),s})}opendirSync(e,r){let s=typeof r<"u"?this.realFs.opendirSync(P.fromPortablePath(e),r):this.realFs.opendirSync(P.fromPortablePath(e));return Object.defineProperty(s,"path",{value:e,configurable:!0,writable:!0}),s}async readPromise(e,r,n=0,s=0,i=-1){return await new Promise((a,o)=>{this.realFs.read(e,r,n,s,i,(c,l)=>{c?o(c):a(l)})})}readSync(e,r,n,s,i){return this.realFs.readSync(e,r,n,s,i)}async writePromise(e,r,n,s,i){return await new Promise((a,o)=>typeof r=="string"?this.realFs.write(e,r,n,this.makeCallback(a,o)):this.realFs.write(e,r,n,s,i,this.makeCallback(a,o)))}writeSync(e,r,n,s,i){return typeof r=="string"?this.realFs.writeSync(e,r,n):this.realFs.writeSync(e,r,n,s,i)}async closePromise(e){await new Promise((r,n)=>{this.realFs.close(e,this.makeCallback(r,n))})}closeSync(e){this.realFs.closeSync(e)}createReadStream(e,r){let n=e!==null?P.fromPortablePath(e):e;return this.realFs.createReadStream(n,r)}createWriteStream(e,r){let n=e!==null?P.fromPortablePath(e):e;return this.realFs.createWriteStream(n,r)}async realpathPromise(e){return await new Promise((r,n)=>{this.realFs.realpath(P.fromPortablePath(e),{},this.makeCallback(r,n))}).then(r=>P.toPortablePath(r))}realpathSync(e){return P.toPortablePath(this.realFs.realpathSync(P.fromPortablePath(e),{}))}async existsPromise(e){return await new Promise(r=>{this.realFs.exists(P.fromPortablePath(e),r)})}accessSync(e,r){return this.realFs.accessSync(P.fromPortablePath(e),r)}async accessPromise(e,r){return await new Promise((n,s)=>{this.realFs.access(P.fromPortablePath(e),r,this.makeCallback(n,s))})}existsSync(e){return this.realFs.existsSync(P.fromPortablePath(e))}async statPromise(e,r){return await new Promise((n,s)=>{r?this.realFs.stat(P.fromPortablePath(e),r,this.makeCallback(n,s)):this.realFs.stat(P.fromPortablePath(e),this.makeCallback(n,s))})}statSync(e,r){return r?this.realFs.statSync(P.fromPortablePath(e),r):this.realFs.statSync(P.fromPortablePath(e))}async fstatPromise(e,r){return await new Promise((n,s)=>{r?this.realFs.fstat(e,r,this.makeCallback(n,s)):this.realFs.fstat(e,this.makeCallback(n,s))})}fstatSync(e,r){return r?this.realFs.fstatSync(e,r):this.realFs.fstatSync(e)}async lstatPromise(e,r){return await new Promise((n,s)=>{r?this.realFs.lstat(P.fromPortablePath(e),r,this.makeCallback(n,s)):this.realFs.lstat(P.fromPortablePath(e),this.makeCallback(n,s))})}lstatSync(e,r){return r?this.realFs.lstatSync(P.fromPortablePath(e),r):this.realFs.lstatSync(P.fromPortablePath(e))}async fchmodPromise(e,r){return await new Promise((n,s)=>{this.realFs.fchmod(e,r,this.makeCallback(n,s))})}fchmodSync(e,r){return this.realFs.fchmodSync(e,r)}async chmodPromise(e,r){return await new Promise((n,s)=>{this.realFs.chmod(P.fromPortablePath(e),r,this.makeCallback(n,s))})}chmodSync(e,r){return this.realFs.chmodSync(P.fromPortablePath(e),r)}async fchownPromise(e,r,n){return await new Promise((s,i)=>{this.realFs.fchown(e,r,n,this.makeCallback(s,i))})}fchownSync(e,r,n){return this.realFs.fchownSync(e,r,n)}async chownPromise(e,r,n){return await new Promise((s,i)=>{this.realFs.chown(P.fromPortablePath(e),r,n,this.makeCallback(s,i))})}chownSync(e,r,n){return this.realFs.chownSync(P.fromPortablePath(e),r,n)}async renamePromise(e,r){return await new Promise((n,s)=>{this.realFs.rename(P.fromPortablePath(e),P.fromPortablePath(r),this.makeCallback(n,s))})}renameSync(e,r){return this.realFs.renameSync(P.fromPortablePath(e),P.fromPortablePath(r))}async copyFilePromise(e,r,n=0){return await new Promise((s,i)=>{this.realFs.copyFile(P.fromPortablePath(e),P.fromPortablePath(r),n,this.makeCallback(s,i))})}copyFileSync(e,r,n=0){return this.realFs.copyFileSync(P.fromPortablePath(e),P.fromPortablePath(r),n)}async appendFilePromise(e,r,n){return await new Promise((s,i)=>{let a=typeof e=="string"?P.fromPortablePath(e):e;n?this.realFs.appendFile(a,r,n,this.makeCallback(s,i)):this.realFs.appendFile(a,r,this.makeCallback(s,i))})}appendFileSync(e,r,n){let s=typeof e=="string"?P.fromPortablePath(e):e;n?this.realFs.appendFileSync(s,r,n):this.realFs.appendFileSync(s,r)}async writeFilePromise(e,r,n){return await new Promise((s,i)=>{let a=typeof e=="string"?P.fromPortablePath(e):e;n?this.realFs.writeFile(a,r,n,this.makeCallback(s,i)):this.realFs.writeFile(a,r,this.makeCallback(s,i))})}writeFileSync(e,r,n){let s=typeof e=="string"?P.fromPortablePath(e):e;n?this.realFs.writeFileSync(s,r,n):this.realFs.writeFileSync(s,r)}async unlinkPromise(e){return await new Promise((r,n)=>{this.realFs.unlink(P.fromPortablePath(e),this.makeCallback(r,n))})}unlinkSync(e){return this.realFs.unlinkSync(P.fromPortablePath(e))}async utimesPromise(e,r,n){return await new Promise((s,i)=>{this.realFs.utimes(P.fromPortablePath(e),r,n,this.makeCallback(s,i))})}utimesSync(e,r,n){this.realFs.utimesSync(P.fromPortablePath(e),r,n)}async lutimesPromise(e,r,n){return await new Promise((s,i)=>{this.realFs.lutimes(P.fromPortablePath(e),r,n,this.makeCallback(s,i))})}lutimesSync(e,r,n){this.realFs.lutimesSync(P.fromPortablePath(e),r,n)}async mkdirPromise(e,r){return await new Promise((n,s)=>{this.realFs.mkdir(P.fromPortablePath(e),r,this.makeCallback(n,s))})}mkdirSync(e,r){return this.realFs.mkdirSync(P.fromPortablePath(e),r)}async rmdirPromise(e,r){return await new Promise((n,s)=>{r?this.realFs.rmdir(P.fromPortablePath(e),r,this.makeCallback(n,s)):this.realFs.rmdir(P.fromPortablePath(e),this.makeCallback(n,s))})}rmdirSync(e,r){return this.realFs.rmdirSync(P.fromPortablePath(e),r)}async rmPromise(e,r){return await new Promise((n,s)=>{r?this.realFs.rm(P.fromPortablePath(e),r,this.makeCallback(n,s)):this.realFs.rm(P.fromPortablePath(e),this.makeCallback(n,s))})}rmSync(e,r){return this.realFs.rmSync(P.fromPortablePath(e),r)}async linkPromise(e,r){return await new Promise((n,s)=>{this.realFs.link(P.fromPortablePath(e),P.fromPortablePath(r),this.makeCallback(n,s))})}linkSync(e,r){return this.realFs.linkSync(P.fromPortablePath(e),P.fromPortablePath(r))}async symlinkPromise(e,r,n){return await new Promise((s,i)=>{this.realFs.symlink(P.fromPortablePath(e.replace(/\/+$/,"")),P.fromPortablePath(r),n,this.makeCallback(s,i))})}symlinkSync(e,r,n){return this.realFs.symlinkSync(P.fromPortablePath(e.replace(/\/+$/,"")),P.fromPortablePath(r),n)}async readFilePromise(e,r){return await new Promise((n,s)=>{let i=typeof e=="string"?P.fromPortablePath(e):e;this.realFs.readFile(i,r,this.makeCallback(n,s))})}readFileSync(e,r){let n=typeof e=="string"?P.fromPortablePath(e):e;return this.realFs.readFileSync(n,r)}async readdirPromise(e,r){return await new Promise((n,s)=>{r?r.recursive&&process.platform==="win32"?r.withFileTypes?this.realFs.readdir(P.fromPortablePath(e),r,this.makeCallback(i=>n(i.map(vc)),s)):this.realFs.readdir(P.fromPortablePath(e),r,this.makeCallback(i=>n(i.map(P.toPortablePath)),s)):this.realFs.readdir(P.fromPortablePath(e),r,this.makeCallback(n,s)):this.realFs.readdir(P.fromPortablePath(e),this.makeCallback(n,s))})}readdirSync(e,r){return r?r.recursive&&process.platform==="win32"?r.withFileTypes?this.realFs.readdirSync(P.fromPortablePath(e),r).map(vc):this.realFs.readdirSync(P.fromPortablePath(e),r).map(P.toPortablePath):this.realFs.readdirSync(P.fromPortablePath(e),r):this.realFs.readdirSync(P.fromPortablePath(e))}async readlinkPromise(e){return await new Promise((r,n)=>{this.realFs.readlink(P.fromPortablePath(e),this.makeCallback(r,n))}).then(r=>P.toPortablePath(r))}readlinkSync(e){return P.toPortablePath(this.realFs.readlinkSync(P.fromPortablePath(e)))}async truncatePromise(e,r){return await new Promise((n,s)=>{this.realFs.truncate(P.fromPortablePath(e),r,this.makeCallback(n,s))})}truncateSync(e,r){return this.realFs.truncateSync(P.fromPortablePath(e),r)}async ftruncatePromise(e,r){return await new Promise((n,s)=>{this.realFs.ftruncate(e,r,this.makeCallback(n,s))})}ftruncateSync(e,r){return this.realFs.ftruncateSync(e,r)}watch(e,r,n){return this.realFs.watch(P.fromPortablePath(e),r,n)}watchFile(e,r,n){return this.realFs.watchFile(P.fromPortablePath(e),r,n)}unwatchFile(e,r){return this.realFs.unwatchFile(P.fromPortablePath(e),r)}makeCallback(e,r){return(n,s)=>{n?r(n):e(s)}}},Id=/^[0-9]+$/,os=/^(\/(?:[^/]+\/)*?(?:\$\$virtual|__virtual__))((?:\/((?:[^/]+-)?[a-f0-9]+)(?:\/([^/]+))?)?((?:\/.*)?))$/,Fd=/^([^/]+-)?[a-f0-9]+$/,Ur=class t extends ms{baseFs;static makeVirtualPath(e,r,n){if(J.basename(e)!=="__virtual__")throw new Error('Assertion failed: Virtual folders must be named "__virtual__"');if(!J.basename(r).match(Fd))throw new Error("Assertion failed: Virtual components must be ended by an hexadecimal hash");let i=J.relative(J.dirname(e),n).split("/"),a=0;for(;a<i.length&&i[a]==="..";)a+=1;let o=i.slice(a);return J.join(e,r,String(a),...o)}static resolveVirtual(e){let r=e.match(os);if(!r||!r[3]&&r[5])return e;let n=J.dirname(r[1]);if(!r[3]||!r[4])return n;if(!Id.test(r[4]))return e;let i=Number(r[4]),a="../".repeat(i),o=r[5]||".";return t.resolveVirtual(J.join(n,a,o))}constructor({baseFs:e=new gs}={}){super(J),this.baseFs=e}getExtractHint(e){return this.baseFs.getExtractHint(e)}getRealPath(){return this.baseFs.getRealPath()}realpathSync(e){let r=e.match(os);if(!r)return this.baseFs.realpathSync(e);if(!r[5])return e;let n=this.baseFs.realpathSync(this.mapToBase(e));return t.makeVirtualPath(r[1],r[3],n)}async realpathPromise(e){let r=e.match(os);if(!r)return await this.baseFs.realpathPromise(e);if(!r[5])return e;let n=await this.baseFs.realpathPromise(this.mapToBase(e));return t.makeVirtualPath(r[1],r[3],n)}mapToBase(e){if(e==="")return e;if(this.pathUtils.isAbsolute(e))return t.resolveVirtual(e);let r=t.resolveVirtual(this.baseFs.resolve(hs.dot)),n=t.resolveVirtual(this.baseFs.resolve(e));return J.relative(r,n)||hs.dot}mapFromBase(e){return e}},Wc={DEFAULT:{collapsed:!1,next:{"*":"DEFAULT"}},TOP_LEVEL:{collapsed:!1,next:{fallbackExclusionList:"FALLBACK_EXCLUSION_LIST",packageRegistryData:"PACKAGE_REGISTRY_DATA","*":"DEFAULT"}},FALLBACK_EXCLUSION_LIST:{collapsed:!1,next:{"*":"FALLBACK_EXCLUSION_ENTRIES"}},FALLBACK_EXCLUSION_ENTRIES:{collapsed:!0,next:{"*":"FALLBACK_EXCLUSION_DATA"}},FALLBACK_EXCLUSION_DATA:{collapsed:!0,next:{"*":"DEFAULT"}},PACKAGE_REGISTRY_DATA:{collapsed:!1,next:{"*":"PACKAGE_REGISTRY_ENTRIES"}},PACKAGE_REGISTRY_ENTRIES:{collapsed:!0,next:{"*":"PACKAGE_STORE_DATA"}},PACKAGE_STORE_DATA:{collapsed:!1,next:{"*":"PACKAGE_STORE_ENTRIES"}},PACKAGE_STORE_ENTRIES:{collapsed:!0,next:{"*":"PACKAGE_INFORMATION_DATA"}},PACKAGE_INFORMATION_DATA:{collapsed:!1,next:{packageDependencies:"PACKAGE_DEPENDENCIES","*":"DEFAULT"}},PACKAGE_DEPENDENCIES:{collapsed:!1,next:{"*":"PACKAGE_DEPENDENCY"}},PACKAGE_DEPENDENCY:{collapsed:!0,next:{"*":"DEFAULT"}}};function Od(t,e,r){let n="";n+="[";for(let s=0,i=t.length;s<i;++s)n+=jr(String(s),t[s],e,r).replace(/^ +/g,""),s+1<i&&(n+=", ");return n+="]",n}function Nd(t,e,r){let n=`${r}  `,s="";s+=r,s+=`[
`;for(let i=0,a=t.length;i<a;++i)s+=n+jr(String(i),t[i],e,n).replace(/^ +/,""),i+1<a&&(s+=","),s+=`
`;return s+=r,s+="]",s}function Cd(t,e,r){let n=Object.keys(t),s="";s+="{";for(let i=0,a=n.length,o=0;i<a;++i){let c=n[i],l=t[c];typeof l>"u"||(o!==0&&(s+=", "),s+=JSON.stringify(c),s+=": ",s+=jr(c,l,e,r).replace(/^ +/g,""),o+=1)}return s+="}",s}function Dd(t,e,r){let n=Object.keys(t),s=`${r}  `,i="";i+=r,i+=`{
`;let a=0;for(let o=0,c=n.length;o<c;++o){let l=n[o],h=t[l];typeof h>"u"||(a!==0&&(i+=",",i+=`
`),i+=s,i+=JSON.stringify(l),i+=": ",i+=jr(l,h,e,s).replace(/^ +/g,""),a+=1)}return a!==0&&(i+=`
`),i+=r,i+="}",i}function jr(t,e,r,n){let{next:s}=Wc[r],i=s[t]||s["*"];return zc(e,i,n)}function zc(t,e,r){let{collapsed:n}=Wc[e];return Array.isArray(t)?n?Od(t,e,r):Nd(t,e,r):typeof t=="object"&&t!==null?n?Cd(t,e,r):Dd(t,e,r):JSON.stringify(t)}function Yc(t){return zc(t,"TOP_LEVEL","")}function _t(t,e){let r=Array.from(t);Array.isArray(e)||(e=[e]);let n=[];for(let i of e)n.push(r.map(a=>i(a)));let s=r.map((i,a)=>a);return s.sort((i,a)=>{for(let o of n){let c=o[i]<o[a]?-1:o[i]>o[a]?1:0;if(c!==0)return c}return 0}),s.map(i=>r[i])}function Ud(t){let e=new Map,r=_t(t.fallbackExclusionList||[],[({name:n,reference:s})=>n,({name:n,reference:s})=>s]);for(let{name:n,reference:s}of r){let i=e.get(n);typeof i>"u"&&e.set(n,i=new Set),i.add(s)}return Array.from(e).map(([n,s])=>[n,Array.from(s)])}function Hd(t){return _t(t.fallbackPool||[],([e])=>e)}function Bd(t){let e=[],r=t.dependencyTreeRoots.find(n=>t.packageRegistry.get(n.name)?.get(n.reference)?.packageLocation==="./");for(let[n,s]of _t(t.packageRegistry,([i])=>i===null?"0":`1${i}`)){if(n===null)continue;let i=[];e.push([n,i]);for(let[a,{packageLocation:o,packageDependencies:c,packagePeers:l,linkType:h,discardFromLookup:f}]of _t(s,([u])=>u===null?"0":`1${u}`)){if(a===null)continue;let u=[];n!==null&&a!==null&&!c.has(n)&&u.push([n,a]);for(let[A,H]of c)u.push([A,H]);let g=_t(u,([A])=>A),x=l&&l.size>0?Array.from(l):void 0,L={packageLocation:o,packageDependencies:g,packagePeers:x,linkType:h,discardFromLookup:f||void 0};i.push([a,L]),r&&n===r.name&&a===r.reference&&e.unshift([null,[[null,L]]])}}return e}function xs(t){return{__info:["This file is automatically generated. Do not touch it, or risk","your modifications being lost."],dependencyTreeRoots:t.dependencyTreeRoots,enableTopLevelFallback:t.enableTopLevelFallback||!1,ignorePatternData:t.ignorePattern||null,pnpZipBackend:t.pnpZipBackend,fallbackExclusionList:Ud(t),fallbackPool:Hd(t),packageRegistryData:Bd(t)}}var cs,jd=()=>(typeof cs>"u"&&(cs=Hc.default.brotliDecompressSync(Buffer.from("","base64")).toString()),cs);function Es(t,e){return[t?`${t}
`:"",`/* eslint-disable */
`,`// @ts-nocheck
`,`"use strict";
`,`
`,e,`
`,jd()].join("")}function Md(t){return JSON.stringify(t,null,2)}function qd(t){return`'${t.replace(/\\/g,"\\\\").replace(/'/g,"\\'").replace(/\n/g,`\\
`)}'`}function Gd(t){return[`const RAW_RUNTIME_STATE =
`,`${qd(Yc(t))};

`,`function $$SETUP_STATE(hydrateRuntimeState, basePath) {
`,`  return hydrateRuntimeState(JSON.parse(RAW_RUNTIME_STATE), {basePath: basePath || __dirname});
`,`}
`].join("")}function Wd(){return[`function $$SETUP_STATE(hydrateRuntimeState, basePath) {
`,`  const fs = require('fs');
`,`  const path = require('path');
`,`  const pnpDataFilepath = path.resolve(__dirname, ${JSON.stringify(Cr.pnpData)});
`,`  return hydrateRuntimeState(JSON.parse(fs.readFileSync(pnpDataFilepath, 'utf8')), {basePath: basePath || __dirname});
`,`}
`].join("")}function zd(t){let e=xs(t),r=Gd(e);return Es(t.shebang,r)}function Yd(t){let e=xs(t),r=Wd(),n=Es(t.shebang,r);return{dataFile:Md(e),loaderFile:n}}function Kc(t,{basePath:e}){let r=P.toPortablePath(e),n=J.resolve(r),s=t.ignorePatternData!==null?new RegExp(t.ignorePatternData):null,i=new Map,a=new Map(t.packageRegistryData.map(([f,u])=>[f,new Map(u.map(([g,x])=>{if(f===null!=(g===null))throw new Error("Assertion failed: The name and reference should be null, or neither should");let y=x.discardFromLookup??!1,L={name:f,reference:g},A=i.get(x.packageLocation);A?(A.discardFromLookup=A.discardFromLookup&&y,y||(A.locator=L)):i.set(x.packageLocation,{locator:L,discardFromLookup:y});let H=null;return[g,{packageDependencies:new Map(x.packageDependencies),packagePeers:new Set(x.packagePeers),linkType:x.linkType,discardFromLookup:y,get packageLocation(){return H||(H=J.join(n,x.packageLocation))}}]}))])),o=new Map(t.fallbackExclusionList.map(([f,u])=>[f,new Set(u)])),c=new Map(t.fallbackPool),l=t.dependencyTreeRoots,h=t.enableTopLevelFallback;return{basePath:r,dependencyTreeRoots:l,enableTopLevelFallback:h,fallbackExclusionList:o,pnpZipBackend:t.pnpZipBackend,fallbackPool:c,ignorePattern:s,packageLocatorsByLocations:i,packageRegistry:a}}var Jc=Array.isArray,ys=JSON.stringify,Mr=Object.getOwnPropertyNames,qr=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),Lc=(t,e)=>RegExp.prototype.exec.call(t,e),Ic=(t,...e)=>RegExp.prototype[Symbol.replace].apply(t,e),vt=(t,...e)=>String.prototype.endsWith.apply(t,e),Vc=(t,...e)=>String.prototype.includes.apply(t,e),Qc=(t,...e)=>String.prototype.lastIndexOf.apply(t,e),Hr=(t,...e)=>String.prototype.indexOf.apply(t,e),Kd=(t,...e)=>String.prototype.replace.apply(t,e),ct=(t,...e)=>String.prototype.slice.apply(t,e),Ve=(t,...e)=>String.prototype.startsWith.apply(t,e),Jd=Map,Vd=JSON.parse;function er(t,e,r){return class extends r{constructor(...n){super(e(...n)),this.code=t,this.name=`${r.name} [${t}]`}}}var Qd=er("ERR_PACKAGE_IMPORT_NOT_DEFINED",(t,e,r)=>`Package import specifier "${t}" is not defined${e?` in package ${e}package.json`:""} imported from ${r}`,TypeError),Xc=er("ERR_INVALID_MODULE_SPECIFIER",(t,e,r=void 0)=>`Invalid module "${t}" ${e}${r?` imported from ${r}`:""}`,TypeError),Xd=er("ERR_INVALID_PACKAGE_TARGET",(t,e,r,n=!1,s=void 0)=>{let i=typeof r=="string"&&!n&&r.length&&!Ve(r,"./");return e==="."?(pd.default(n===!1),`Invalid "exports" main target ${ys(r)} defined in the package config ${t}package.json${s?` imported from ${s}`:""}${i?'; targets must start with "./"':""}`):`Invalid "${n?"imports":"exports"}" target ${ys(r)} defined for '${e}' in the package config ${t}package.json${s?` imported from ${s}`:""}${i?'; targets must start with "./"':""}`},Error),ks=er("ERR_INVALID_PACKAGE_CONFIG",(t,e,r)=>`Invalid package config ${t}${e?` while importing ${e}`:""}${r?`. ${r}`:""}`,Error),Zd=er("ERR_PACKAGE_PATH_NOT_EXPORTED",(t,e,r=void 0)=>e==="."?`No "exports" main defined in ${t}package.json${r?` imported from ${r}`:""}`:`Package subpath '${e}' is not defined by "exports" in ${t}package.json${r?` imported from ${r}`:""}`,Error);function _d(t,e){let r=Object.create(null);for(let n=0;n<e.length;n++){let s=e[n];qr(t,s)&&(r[s]=t[s])}return r}var Or=new Jd;function $d(t,e,r,n){let s=Or.get(t);if(s!==void 0)return s;let i=n(t);if(i===void 0){let g={pjsonPath:t,exists:!1,main:void 0,name:void 0,type:"none",exports:void 0,imports:void 0};return Or.set(t,g),g}let a;try{a=Vd(i)}catch(g){throw new ks(t,(r?`"${e}" from `:"")+ie.fileURLToPath(r||e),g.message)}let{imports:o,main:c,name:l,type:h}=_d(a,["imports","main","name","type"]),f=qr(a,"exports")?a.exports:void 0;(typeof o!="object"||o===null)&&(o=void 0),typeof c!="string"&&(c=void 0),typeof l!="string"&&(l=void 0),h!=="module"&&h!=="commonjs"&&(h="none");let u={pjsonPath:t,exists:!0,main:c,name:l,type:h,exports:f,imports:o};return Or.set(t,u),u}function em(t,e){let r=new URL("./package.json",t);for(;;){let i=r.pathname;if(vt(i,"node_modules/package.json"))break;let a=$d(ie.fileURLToPath(r),t,void 0,e);if(a.exists)return a;let o=r;if(r=new URL("../package.json",r),r.pathname===o.pathname)break}let n=ie.fileURLToPath(r),s={pjsonPath:n,exists:!1,main:void 0,name:void 0,type:"none",exports:void 0,imports:void 0};return Or.set(n,s),s}function tm(t,e,r){throw new Qd(t,e&&ie.fileURLToPath(new URL(".",e)),ie.fileURLToPath(r))}function rm(t,e,r,n){let s=`request is not a valid subpath for the "${r?"imports":"exports"}" resolution of ${ie.fileURLToPath(e)}`;throw new Xc(t,s,n&&ie.fileURLToPath(n))}function Zt(t,e,r,n,s){throw typeof e=="object"&&e!==null?e=ys(e,null,""):e=`${e}`,new Xd(ie.fileURLToPath(new URL(".",r)),t,e,n,s&&ie.fileURLToPath(s))}var Fc=/(^|\\|\/)((\.|%2e)(\.|%2e)?|(n|%6e|%4e)(o|%6f|%4f)(d|%64|%44)(e|%65|%45)(_|%5f)(m|%6d|%4d)(o|%6f|%4f)(d|%64|%44)(u|%75|%55)(l|%6c|%4c)(e|%65|%45)(s|%73|%53))(\\|\/|$)/i,Oc=/\*/g;function nm(t,e,r,n,s,i,a,o){if(e!==""&&!i&&t[t.length-1]!=="/"&&Zt(r,t,n,a,s),!Ve(t,"./")){if(a&&!Ve(t,"../")&&!Ve(t,"/")){let f=!1;try{new URL(t),f=!0}catch{}if(!f)return i?Ic(Oc,t,()=>e):t+e}Zt(r,t,n,a,s)}Lc(Fc,ct(t,2))!==null&&Zt(r,t,n,a,s);let c=new URL(t,n),l=c.pathname,h=new URL(".",n).pathname;if(Ve(l,h)||Zt(r,t,n,a,s),e==="")return c;if(Lc(Fc,e)!==null){let f=i?Kd(r,"*",()=>e):r+e;rm(f,n,a,s)}return i?new URL(Ic(Oc,c.href,()=>e)):new URL(e,c)}function sm(t){let e=+t;return`${e}`!==t?!1:e>=0&&e<4294967295}function Lt(t,e,r,n,s,i,a,o){if(typeof e=="string")return nm(e,r,n,t,s,i,a);if(Jc(e)){if(e.length===0)return null;let c;for(let l=0;l<e.length;l++){let h=e[l],f;try{f=Lt(t,h,r,n,s,i,a,o)}catch(u){if(c=u,u.code==="ERR_INVALID_PACKAGE_TARGET")continue;throw u}if(f!==void 0){if(f===null){c=null;continue}return f}}if(c==null)return c;throw c}else if(typeof e=="object"&&e!==null){let c=Mr(e);for(let l=0;l<c.length;l++){let h=c[l];if(sm(h))throw new ks(ie.fileURLToPath(t),s,'"exports" cannot contain numeric property keys.')}for(let l=0;l<c.length;l++){let h=c[l];if(h==="default"||o.has(h)){let f=e[h],u=Lt(t,f,r,n,s,i,a,o);if(u===void 0)continue;return u}}return}else if(e===null)return null;Zt(n,e,t,a,s)}function Zc(t,e){let r=Hr(t,"*"),n=Hr(e,"*"),s=r===-1?t.length:r+1,i=n===-1?e.length:n+1;return s>i?-1:i>s||r===-1?1:n===-1||t.length>e.length?-1:e.length>t.length?1:0}function im(t,e,r){if(typeof t=="string"||Jc(t))return!0;if(typeof t!="object"||t===null)return!1;let n=Mr(t),s=!1,i=0;for(let a=0;a<n.length;a++){let o=n[a],c=o===""||o[0]!==".";if(i++===0)s=c;else if(s!==c)throw new ks(ie.fileURLToPath(e),r,`"exports" cannot contain some keys starting with '.' and some not. The exports object must either be an object of package subpath keys or an object of main entry condition name keys only.`)}return s}function ls(t,e,r){throw new Zd(ie.fileURLToPath(new URL(".",e)),t,r&&ie.fileURLToPath(r))}var Nc=new Set;function am(t,e,r){let n=ie.fileURLToPath(e);Nc.has(n+"|"+t)||(Nc.add(n+"|"+t),process.emitWarning(`Use of deprecated trailing slash pattern mapping "${t}" in the "exports" field module resolution of the package at ${n}${r?` imported from ${ie.fileURLToPath(r)}`:""}. Mapping specifiers ending in "/" is no longer supported.`,"DeprecationWarning","DEP0155"))}function om({packageJSONUrl:t,packageSubpath:e,exports:r,base:n,conditions:s}){if(im(r,t,n)&&(r={".":r}),qr(r,e)&&!Vc(e,"*")&&!vt(e,"/")){let c=r[e],l=Lt(t,c,"",e,n,!1,!1,s);return l==null&&ls(e,t,n),l}let i="",a,o=Mr(r);for(let c=0;c<o.length;c++){let l=o[c],h=Hr(l,"*");if(h!==-1&&Ve(e,ct(l,0,h))){vt(e,"/")&&am(e,t,n);let f=ct(l,h+1);e.length>=l.length&&vt(e,f)&&Zc(i,l)===1&&Qc(l,"*")===h&&(i=l,a=ct(e,h,e.length-f.length))}}if(i){let c=r[i],l=Lt(t,c,a,i,n,!0,!1,s);return l==null&&ls(e,t,n),l}ls(e,t,n)}function cm({name:t,base:e,conditions:r,readFileSyncFn:n}){if(t==="#"||Ve(t,"#/")||vt(t,"/")){let a="is not a valid internal imports specifier name";throw new Xc(t,a,ie.fileURLToPath(e))}let s,i=em(e,n);if(i.exists){s=ie.pathToFileURL(i.pjsonPath);let a=i.imports;if(a)if(qr(a,t)&&!Vc(t,"*")){let o=Lt(s,a[t],"",t,e,!1,!0,r);if(o!=null)return o}else{let o="",c,l=Mr(a);for(let h=0;h<l.length;h++){let f=l[h],u=Hr(f,"*");if(u!==-1&&Ve(t,ct(f,0,u))){let g=ct(f,u+1);t.length>=f.length&&vt(t,g)&&Zc(o,f)===1&&Qc(f,"*")===u&&(o=f,c=ct(t,u,t.length-g.length))}}if(o){let h=a[o],f=Lt(s,h,c,o,e,!0,!0,r);if(f!=null)return f}}}tm(t,s,e)}var ce=(t=>(t.API_ERROR="API_ERROR",t.BUILTIN_NODE_RESOLUTION_FAILED="BUILTIN_NODE_RESOLUTION_FAILED",t.EXPORTS_RESOLUTION_FAILED="EXPORTS_RESOLUTION_FAILED",t.MISSING_DEPENDENCY="MISSING_DEPENDENCY",t.MISSING_PEER_DEPENDENCY="MISSING_PEER_DEPENDENCY",t.QUALIFIED_PATH_RESOLUTION_FAILED="QUALIFIED_PATH_RESOLUTION_FAILED",t.INTERNAL="INTERNAL",t.UNDECLARED_DEPENDENCY="UNDECLARED_DEPENDENCY",t.UNSUPPORTED="UNSUPPORTED",t))(ce||{}),lm=new Set(["BUILTIN_NODE_RESOLUTION_FAILED","MISSING_DEPENDENCY","MISSING_PEER_DEPENDENCY","QUALIFIED_PATH_RESOLUTION_FAILED","UNDECLARED_DEPENDENCY"]);function ue(t,e,r={},n){n??=lm.has(t)?"MODULE_NOT_FOUND":t;let s={configurable:!0,writable:!0,enumerable:!1};return Object.defineProperties(new Error(e),{code:{...s,value:n},pnpCode:{...s,value:t},data:{...s,value:r}})}function He(t){return P.normalize(P.fromPortablePath(t))}var Ss=Symbol("arg flag"),Te=class t extends Error{constructor(e,r){super(e),this.name="ArgError",this.code=r,Object.setPrototypeOf(this,t.prototype)}};function $t(t,{argv:e=process.argv.slice(2),permissive:r=!1,stopAtPositional:n=!1}={}){if(!t)throw new Te("argument specification object is required","ARG_CONFIG_NO_SPEC");let s={_:[]},i={},a={};for(let o of Object.keys(t)){if(!o)throw new Te("argument key cannot be an empty string","ARG_CONFIG_EMPTY_KEY");if(o[0]!=="-")throw new Te(`argument key must start with '-' but found: '${o}'`,"ARG_CONFIG_NONOPT_KEY");if(o.length===1)throw new Te(`argument key must have a name; singular '-' keys are not allowed: ${o}`,"ARG_CONFIG_NONAME_KEY");if(typeof t[o]=="string"){i[o]=t[o];continue}let c=t[o],l=!1;if(Array.isArray(c)&&c.length===1&&typeof c[0]=="function"){let[h]=c;c=(f,u,g=[])=>(g.push(h(f,u,g[g.length-1])),g),l=h===Boolean||h[Ss]===!0}else if(typeof c=="function")l=c===Boolean||c[Ss]===!0;else throw new Te(`type missing or not a function or valid array type: ${o}`,"ARG_CONFIG_VAD_TYPE");if(o[1]!=="-"&&o.length>2)throw new Te(`short argument keys (with a single hyphen) must have only one character: ${o}`,"ARG_CONFIG_SHORTOPT_TOOLONG");a[o]=[c,l]}for(let o=0,c=e.length;o<c;o++){let l=e[o];if(n&&s._.length>0){s._=s._.concat(e.slice(o));break}if(l==="--"){s._=s._.concat(e.slice(o+1));break}if(l.length>1&&l[0]==="-"){let h=l[1]==="-"||l.length===2?[l]:l.slice(1).split("").map(f=>`-${f}`);for(let f=0;f<h.length;f++){let u=h[f],[g,x]=u[1]==="-"?u.split(/=(.*)/,2):[u,void 0],y=g;for(;y in i;)y=i[y];if(!(y in a))if(r){s._.push(u);continue}else throw new Te(`unknown or unexpected option: ${g}`,"ARG_UNKNOWN_OPTION");let[L,A]=a[y];if(!A&&f+1<h.length)throw new Te(`option requires argument (but was followed by another short argument): ${g}`,"ARG_MISSING_REQUIRED_SHORTARG");if(A)s[y]=L(!0,y,s[y]);else if(x===void 0){if(e.length<o+2||e[o+1].length>1&&e[o+1][0]==="-"&&!(e[o+1].match(/^-?\d*(\.(?=\d))?\d*$/)&&(L===Number||typeof BigInt<"u"&&L===BigInt))){let H=g===y?"":` (alias for ${y})`;throw new Te(`option requires argument: ${g}${H}`,"ARG_MISSING_REQUIRED_LONGARG")}s[y]=L(e[o+1],y,s[y]),++o}else s[y]=L(x,y,s[y])}}else s._.push(l)}return s}$t.flag=t=>(t[Ss]=!0,t);$t.COUNT=$t.flag((t,e,r)=>(r||0)+1);$t.ArgError=Te;var um=$t;function fm(t){return hm(),Ps[t]}var Ps;function hm(){Ps||(Ps={"--conditions":[],...Cc(pm()),...Cc(process.execArgv)})}function Cc(t){return um({"--conditions":[String],"-C":"--conditions"},{argv:t,permissive:!0})}function pm(){let t=[],e=dm(process.env.NODE_OPTIONS||"",t);return t.length,e}function dm(t,e){let r=[],n=!1,s=!0;for(let i=0;i<t.length;++i){let a=t[i];if(a==="\\"&&n){if(i+1===t.length)return e.push(`invalid value for NODE_OPTIONS (invalid escape)
`),r;a=t[++i]}else if(a===" "&&!n){s=!0;continue}else if(a==='"'){n=!n;continue}s?(r.push(a),s=!1):r[r.length-1]+=a}return n&&e.push(`invalid value for NODE_OPTIONS (unterminated string)
`),r}var[us,Dc]=process.versions.node.split(".").map(t=>parseInt(t,10)),mm=us>19||us===19&&Dc>=2||us===18&&Dc>=13;function gm(t){if(process.env.WATCH_REPORT_DEPENDENCIES&&process.send)if(t=t.map(e=>P.fromPortablePath(Ur.resolveVirtual(P.toPortablePath(e)))),mm)process.send({"watch:require":t});else for(let e of t)process.send({"watch:require":e})}function _c(t,e){let r=Number(process.env.PNP_ALWAYS_WARN_ON_FALLBACK)>0,n=Number(process.env.PNP_DEBUG_LEVEL),s=/^(?![a-zA-Z]:[\\/]|\\\\|\.{0,2}(?:\/|$))((?:node:)?(?:@[^/]+\/)?[^/]+)\/*(.*|)$/,i=/^(\/|\.{1,2}(\/|$))/,a=/\/$/,o=/^\.{0,2}\//,c={name:null,reference:null},l=[],h=new Set;if(t.enableTopLevelFallback===!0&&l.push(c),e.compatibilityMode!==!1)for(let k of["react-scripts","gatsby"]){let E=t.packageRegistry.get(k);if(E)for(let I of E.keys()){if(I===null)throw new Error("Assertion failed: This reference shouldn't be null");l.push({name:k,reference:I})}}let{ignorePattern:f,packageRegistry:u,packageLocatorsByLocations:g}=t;function x(k,E){return{fn:k,args:E,error:null,result:null}}function y(k){let E=process.stderr?.hasColors?.()??process.stdout.isTTY,I=(D,q)=>`\x1B[${D}m${q}\x1B[0m`,w=k.error;console.error(w?I("31;1",`\u2716 ${k.error?.message.replace(/\n.*/s,"")}`):I("33;1","\u203C Resolution")),k.args.length>0&&console.error();for(let D of k.args)console.error(`  ${I("37;1","In \u2190")} ${Ac.inspect(D,{colors:E,compact:!0})}`);k.result&&(console.error(),console.error(`  ${I("37;1","Out \u2192")} ${Ac.inspect(k.result,{colors:E,compact:!0})}`));let R=new Error().stack.match(/(?<=^ +)at.*/gm)?.slice(2)??[];if(R.length>0){console.error();for(let D of R)console.error(`  ${I("38;5;244",D)}`)}console.error()}function L(k,E){if(e.allowDebug===!1)return E;if(Number.isFinite(n)){if(n>=2)return(...I)=>{let w=x(k,I);try{return w.result=E(...I)}catch(R){throw w.error=R}finally{y(w)}};if(n>=1)return(...I)=>{try{return E(...I)}catch(w){let R=x(k,I);throw R.error=w,y(R),w}}}return E}function A(k){let E=m(k);if(!E)throw ue(ce.INTERNAL,"Couldn't find a matching entry in the dependency tree for the specified parent (this is probably an internal error)");return E}function H(k){if(k.name===null)return!0;for(let E of t.dependencyTreeRoots)if(E.name===k.name&&E.reference===k.reference)return!0;return!1}let N=new Set(["node","require",...fm("--conditions")]);function _(k,E=N,I){let w=oe(J.join(k,"internal.js"),{resolveIgnored:!0,includeDiscardFromLookup:!0});if(w===null)throw ue(ce.INTERNAL,`The locator that owns the "${k}" path can't be found inside the dependency tree (this is probably an internal error)`);let{packageLocation:R}=A(w),D=J.join(R,Cr.manifest);if(!e.fakeFs.existsSync(D))return null;let q=JSON.parse(e.fakeFs.readFileSync(D,"utf8"));if(q.exports==null)return null;let p=J.contains(R,k);if(p===null)throw ue(ce.INTERNAL,"unqualifiedPath doesn't contain the packageLocation (this is probably an internal error)");p!=="."&&!o.test(p)&&(p=`./${p}`);try{let z=om({packageJSONUrl:ie.pathToFileURL(P.fromPortablePath(D)),packageSubpath:p,exports:q.exports,base:I?ie.pathToFileURL(P.fromPortablePath(I)):null,conditions:E});return P.toPortablePath(ie.fileURLToPath(z))}catch(z){throw ue(ce.EXPORTS_RESOLUTION_FAILED,z.message,{unqualifiedPath:He(k),locator:w,pkgJson:q,subpath:He(p),conditions:E},z.code)}}function M(k,E,{extensions:I}){let w;try{E.push(k),w=e.fakeFs.statSync(k)}catch{}if(w&&!w.isDirectory())return e.fakeFs.realpathSync(k);if(w&&w.isDirectory()){let R;try{R=JSON.parse(e.fakeFs.readFileSync(J.join(k,Cr.manifest),"utf8"))}catch{}let D;if(R&&R.main&&(D=J.resolve(k,R.main)),D&&D!==k){let q=M(D,E,{extensions:I});if(q!==null)return q}}for(let R=0,D=I.length;R<D;R++){let q=`${k}${I[R]}`;if(E.push(q),e.fakeFs.existsSync(q))return q}if(w&&w.isDirectory())for(let R=0,D=I.length;R<D;R++){let q=J.format({dir:k,name:"index",ext:I[R]});if(E.push(q),e.fakeFs.existsSync(q))return q}return null}function T(k){let E=new ot.Module(k,null);return E.filename=k,E.paths=ot.Module._nodeModulePaths(k),E}function W(k,E){return E.endsWith("/")&&(E=J.join(E,"internal.js")),ot.Module._resolveFilename(P.fromPortablePath(k),T(P.fromPortablePath(E)),!1,{plugnplay:!1})}function O(k){if(f===null)return!1;let E=J.contains(t.basePath,k);return E===null?!1:!!f.test(E.replace(/\/$/,""))}let K={std:3,resolveVirtual:1,getAllLocators:1},$=c;function m({name:k,reference:E}){let I=u.get(k);if(!I)return null;let w=I.get(E);return w||null}function V({name:k,reference:E}){let I=[];for(let[w,R]of u)if(w!==null)for(let[D,q]of R)D===null||q.packageDependencies.get(k)!==E||w===k&&D===E||I.push({name:w,reference:D});return I}function X(k,E){let I=new Map,w=new Set,R=q=>{let p=JSON.stringify(q.name);if(w.has(p))return;w.add(p);let z=V(q);for(let b of z)if(A(b).packagePeers.has(k))R(b);else{let v=I.get(b.name);typeof v>"u"&&I.set(b.name,v=new Set),v.add(b.reference)}};R(E);let D=[];for(let q of[...I.keys()].sort())for(let p of[...I.get(q)].sort())D.push({name:q,reference:p});return D}function oe(k,{resolveIgnored:E=!1,includeDiscardFromLookup:I=!1}={}){if(O(k)&&!E)return null;let w=J.relative(t.basePath,k);w.match(i)||(w=`./${w}`),w.endsWith("/")||(w=`${w}/`);do{let R=g.get(w);if(typeof R>"u"||R.discardFromLookup&&!I){w=w.substring(0,w.lastIndexOf("/",w.length-2)+1);continue}return R.locator}while(w!=="");return null}function d(k){try{return e.fakeFs.readFileSync(P.toPortablePath(k),"utf8")}catch(E){if(E.code==="ENOENT")return;throw E}}function S(k,E,{considerBuiltins:I=!0}={}){if(k.startsWith("#"))throw new Error("resolveToUnqualified can not handle private import mappings");if(k==="pnpapi")return P.toPortablePath(e.pnpapiResolution);if(I&&ot.isBuiltin(k))return null;let w=He(k),R=E&&He(E);if(E&&O(E)&&(!J.isAbsolute(k)||oe(k)===null)){let p=W(k,E);if(p===!1)throw ue(ce.BUILTIN_NODE_RESOLUTION_FAILED,`The builtin node resolution algorithm was unable to resolve the requested module (it didn't go through the pnp resolver because the issuer was explicitely ignored by the regexp)

Require request: "${w}"
Required by: ${R}
`,{request:w,issuer:R});return P.toPortablePath(p)}let D,q=k.match(s);if(q){if(!E)throw ue(ce.API_ERROR,"The resolveToUnqualified function must be called with a valid issuer when the path isn't a builtin nor absolute",{request:w,issuer:R});let[,p,z]=q,b=oe(E);if(!b){let pe=W(k,E);if(pe===!1)throw ue(ce.BUILTIN_NODE_RESOLUTION_FAILED,`The builtin node resolution algorithm was unable to resolve the requested module (it didn't go through the pnp resolver because the issuer doesn't seem to be part of the Yarn-managed dependency tree).

Require path: "${w}"
Required by: ${R}
`,{request:w,issuer:R});return P.toPortablePath(pe)}let v=A(b).packageDependencies.get(p),B=null;if(v==null&&b.name!==null){let pe=t.fallbackExclusionList.get(b.name);if(!pe||!pe.has(b.reference)){for(let qe=0,sl=l.length;qe<sl;++qe){let Gr=A(l[qe]).packageDependencies.get(p);if(Gr!=null){r?B=Gr:v=Gr;break}}if(t.enableTopLevelFallback&&v==null&&B===null){let qe=t.fallbackPool.get(p);qe!=null&&(B=qe)}}}let U=null;if(v===null)if(H(b))U=ue(ce.MISSING_PEER_DEPENDENCY,`Your application tried to access ${p} (a peer dependency); this isn't allowed as there is no ancestor to satisfy the requirement. Use a devDependency if needed.

Required package: ${p}${p!==w?` (via "${w}")`:""}
Required by: ${R}
`,{request:w,issuer:R,dependencyName:p});else{let pe=X(p,b);pe.every(Be=>H(Be))?U=ue(ce.MISSING_PEER_DEPENDENCY,`${b.name} tried to access ${p} (a peer dependency) but it isn't provided by your application; this makes the require call ambiguous and unsound.

Required package: ${p}${p!==w?` (via "${w}")`:""}
Required by: ${b.name}@${b.reference} (via ${R})
${pe.map(Be=>`Ancestor breaking the chain: ${Be.name}@${Be.reference}
`).join("")}
`,{request:w,issuer:R,issuerLocator:Object.assign({},b),dependencyName:p,brokenAncestors:pe}):U=ue(ce.MISSING_PEER_DEPENDENCY,`${b.name} tried to access ${p} (a peer dependency) but it isn't provided by its ancestors; this makes the require call ambiguous and unsound.

Required package: ${p}${p!==w?` (via "${w}")`:""}
Required by: ${b.name}@${b.reference} (via ${R})

${pe.map(Be=>`Ancestor breaking the chain: ${Be.name}@${Be.reference}
`).join("")}
`,{request:w,issuer:R,issuerLocator:Object.assign({},b),dependencyName:p,brokenAncestors:pe})}else v===void 0&&(!I&&ot.isBuiltin(k)?H(b)?U=ue(ce.UNDECLARED_DEPENDENCY,`Your application tried to access ${p}. While this module is usually interpreted as a Node builtin, your resolver is running inside a non-Node resolution context where such builtins are ignored. Since ${p} isn't otherwise declared in your dependencies, this makes the require call ambiguous and unsound.

Required package: ${p}${p!==w?` (via "${w}")`:""}
Required by: ${R}
`,{request:w,issuer:R,dependencyName:p}):U=ue(ce.UNDECLARED_DEPENDENCY,`${b.name} tried to access ${p}. While this module is usually interpreted as a Node builtin, your resolver is running inside a non-Node resolution context where such builtins are ignored. Since ${p} isn't otherwise declared in ${b.name}'s dependencies, this makes the require call ambiguous and unsound.

Required package: ${p}${p!==w?` (via "${w}")`:""}
Required by: ${R}
`,{request:w,issuer:R,issuerLocator:Object.assign({},b),dependencyName:p}):H(b)?U=ue(ce.UNDECLARED_DEPENDENCY,`Your application tried to access ${p}, but it isn't declared in your dependencies; this makes the require call ambiguous and unsound.

Required package: ${p}${p!==w?` (via "${w}")`:""}
Required by: ${R}
`,{request:w,issuer:R,dependencyName:p}):U=ue(ce.UNDECLARED_DEPENDENCY,`${b.name} tried to access ${p}, but it isn't declared in its dependencies; this makes the require call ambiguous and unsound.

Required package: ${p}${p!==w?` (via "${w}")`:""}
Required by: ${b.name}@${b.reference} (via ${R})
`,{request:w,issuer:R,issuerLocator:Object.assign({},b),dependencyName:p}));if(v==null){if(B===null||U===null)throw U||new Error("Assertion failed: Expected an error to have been set");v=B;let pe=U.message.replace(/\n.*/g,"");U.message=pe,!h.has(pe)&&n!==0&&(h.add(pe),process.emitWarning(U))}let re=Array.isArray(v)?{name:v[0],reference:v[1]}:{name:p,reference:v},Pe=A(re);if(!Pe.packageLocation)throw ue(ce.MISSING_DEPENDENCY,`A dependency seems valid but didn't get installed for some reason. This might be caused by a partial install, such as dev vs prod.

Required package: ${re.name}@${re.reference}${re.name!==w?` (via "${w}")`:""}
Required by: ${b.name}@${b.reference} (via ${R})
`,{request:w,issuer:R,dependencyLocator:Object.assign({},re)});let Qe=Pe.packageLocation;z?D=J.join(Qe,z):D=Qe}else if(J.isAbsolute(k))D=J.normalize(k);else{if(!E)throw ue(ce.API_ERROR,"The resolveToUnqualified function must be called with a valid issuer when the path isn't a builtin nor absolute",{request:w,issuer:R});let p=J.resolve(E);E.match(a)?D=J.normalize(J.join(p,k)):D=J.normalize(J.join(J.dirname(p),k))}return J.normalize(D)}function le(k,E,I=N,w){if(i.test(k))return E;let R=_(E,I,w);return R?J.normalize(R):E}function Q(k,{extensions:E=Object.keys(ot.Module._extensions)}={}){let I=[],w=M(k,I,{extensions:E});if(w)return J.normalize(w);{gm(I.map(q=>P.fromPortablePath(q)));let R=He(k),D=oe(k);if(D){let{packageLocation:q}=A(D),p=!0;try{e.fakeFs.accessSync(q)}catch(z){if(z?.code==="ENOENT")p=!1;else{let b=(z?.message??z??"empty exception thrown").replace(/^[A-Z]/,Y=>Y.toLowerCase());throw ue(ce.QUALIFIED_PATH_RESOLUTION_FAILED,`Required package exists but could not be accessed (${b}).

Missing package: ${D.name}@${D.reference}
Expected package location: ${He(q)}
`,{unqualifiedPath:R,extensions:E})}}if(!p){let z=q.includes("/unplugged/")?"Required unplugged package missing from disk. This may happen when switching branches without running installs (unplugged packages must be fully materialized on disk to work).":"Required package missing from disk. If you keep your packages inside your repository then restarting the Node process may be enough. Otherwise, try to run an install first.";throw ue(ce.QUALIFIED_PATH_RESOLUTION_FAILED,`${z}

Missing package: ${D.name}@${D.reference}
Expected package location: ${He(q)}
`,{unqualifiedPath:R,extensions:E})}}throw ue(ce.QUALIFIED_PATH_RESOLUTION_FAILED,`Qualified path resolution failed: we looked for the following paths, but none could be accessed.

Source path: ${R}
${I.map(q=>`Not found: ${He(q)}
`).join("")}`,{unqualifiedPath:R,extensions:E})}}function ye(k,E,I){if(!E)throw new Error("Assertion failed: An issuer is required to resolve private import mappings");let w=cm({name:k,base:ie.pathToFileURL(P.fromPortablePath(E)),conditions:I.conditions??N,readFileSyncFn:d});if(w instanceof URL)return Q(P.toPortablePath(ie.fileURLToPath(w)),{extensions:I.extensions});if(w.startsWith("#"))throw new Error("Mapping from one private import to another isn't allowed");return fe(w,E,I)}function fe(k,E,I={}){try{if(k.startsWith("#"))return ye(k,E,I);let{considerBuiltins:w,extensions:R,conditions:D}=I,q=S(k,E,{considerBuiltins:w});if(k==="pnpapi")return q;if(q===null)return null;let p=()=>E!==null?O(E):!1,z=(!w||!ot.isBuiltin(k))&&!p()?le(k,q,D,E):q;return Q(z,{extensions:R})}catch(w){throw Object.hasOwn(w,"pnpCode")&&Object.assign(w.data,{request:He(k),issuer:E&&He(E)}),w}}function Se(k){let E=J.normalize(k),I=Ur.resolveVirtual(E);return I!==E?I:null}return{VERSIONS:K,topLevel:$,getLocator:(k,E)=>Array.isArray(E)?{name:E[0],reference:E[1]}:{name:k,reference:E},getDependencyTreeRoots:()=>[...t.dependencyTreeRoots],getAllLocators(){let k=[];for(let[E,I]of u)for(let w of I.keys())E!==null&&w!==null&&k.push({name:E,reference:w});return k},getPackageInformation:k=>{let E=m(k);if(E===null)return null;let I=P.fromPortablePath(E.packageLocation);return{...E,packageLocation:I}},findPackageLocator:k=>oe(P.toPortablePath(k)),resolveToUnqualified:L("resolveToUnqualified",(k,E,I)=>{let w=E!==null?P.toPortablePath(E):null,R=S(P.toPortablePath(k),w,I);return R===null?null:P.fromPortablePath(R)}),resolveUnqualified:L("resolveUnqualified",(k,E)=>P.fromPortablePath(Q(P.toPortablePath(k),E))),resolveRequest:L("resolveRequest",(k,E,I)=>{let w=E!==null?P.toPortablePath(E):null,R=fe(P.toPortablePath(k),w,I);return R===null?null:P.fromPortablePath(R)}),resolveVirtual:L("resolveVirtual",k=>{let E=Se(P.toPortablePath(k));return E!==null?P.fromPortablePath(E):null})}}async function ym(t,{fakeFs:e,pnpapiResolution:r}){let n=await e.readFilePromise(t,"utf8");return $c(n,{basePath:Uc.dirname(t),fakeFs:e,pnpapiResolution:r})}function $c(t,{basePath:e,fakeFs:r,pnpapiResolution:n}){let s=JSON.parse(t),i=Kc(s,{basePath:e});return _c(i,{compatibilityMode:!0,fakeFs:r,pnpapiResolution:n})}var Sm=(t,e,r)=>{let n=xs(t),s=Kc(n,{basePath:e}),i=P.join(e,Cr.pnpCjs);return _c(s,{fakeFs:r,pnpapiResolution:i})},fs,Pm=()=>(typeof fs>"u"&&(fs=Hc.default.brotliDecompressSync(Buffer.from("","base64")).toString()),fs);Ie.LinkType=Bc;Ie.generateInlinedScript=zd;Ie.generateLoader=Es;Ie.generatePrettyJson=Yc;Ie.generateSplitScript=Yd;Ie.getESMLoaderTemplate=Pm;Ie.hydratePnpFile=ym;Ie.hydratePnpSource=$c;Ie.makeRuntimeApi=Sm});var Tm={};ul(Tm,{default:()=>Am,getExistingYarnManifest:()=>Rm,nixCurrentSystem:()=>km});var na=C("buffer"),sa=we(C("path"),1),fr=we(C("child_process"),1),Ct=we(C("process"),1),ia=we(xi(),1);function _r(t){let e=typeof t=="string"?`
`:10,r=typeof t=="string"?"\r":13;return t[t.length-1]===e&&(t=t.slice(0,-1)),t[t.length-1]===r&&(t=t.slice(0,-1)),t}var It=we(C("process"),1),pt=we(C("path"),1),$r=C("url");function nr(t={}){let{env:e=process.env,platform:r=process.platform}=t;return r!=="win32"?"PATH":Object.keys(e).reverse().find(n=>n.toUpperCase()==="PATH")||"Path"}var Bl=({cwd:t=It.default.cwd(),path:e=It.default.env[nr()],preferLocal:r=!0,execPath:n=It.default.execPath,addExecPath:s=!0}={})=>{let i=t instanceof URL?(0,$r.fileURLToPath)(t):t,a=pt.default.resolve(i),o=[];return r&&jl(o,a),s&&Ml(o,n,a),[...o,e].join(pt.default.delimiter)},jl=(t,e)=>{let r;for(;r!==e;)t.push(pt.default.join(e,"node_modules/.bin")),r=e,e=pt.default.resolve(e,"..")},Ml=(t,e,r)=>{let n=e instanceof URL?(0,$r.fileURLToPath)(e):e;t.push(pt.default.resolve(r,n,".."))},Ei=({env:t=It.default.env,...e}={})=>{t={...t};let r=nr({env:t});return e.path=t[r],t[r]=Bl(e),t};var ql=(t,e,r,n)=>{if(r==="length"||r==="prototype"||r==="arguments"||r==="caller")return;let s=Object.getOwnPropertyDescriptor(t,r),i=Object.getOwnPropertyDescriptor(e,r);!Gl(s,i)&&n||Object.defineProperty(t,r,i)},Gl=function(t,e){return t===void 0||t.configurable||t.writable===e.writable&&t.enumerable===e.enumerable&&t.configurable===e.configurable&&(t.writable||t.value===e.value)},Wl=(t,e)=>{let r=Object.getPrototypeOf(e);r!==Object.getPrototypeOf(t)&&Object.setPrototypeOf(t,r)},zl=(t,e)=>`/* Wrapped ${t}*/
${e}`,Yl=Object.getOwnPropertyDescriptor(Function.prototype,"toString"),Kl=Object.getOwnPropertyDescriptor(Function.prototype.toString,"name"),Jl=(t,e,r)=>{let n=r===""?"":`with ${r.trim()}() `,s=zl.bind(null,n,e.toString());Object.defineProperty(s,"name",Kl),Object.defineProperty(t,"toString",{...Yl,value:s})};function en(t,e,{ignoreNonConfigurable:r=!1}={}){let{name:n}=t;for(let s of Reflect.ownKeys(e))ql(t,e,s,r);return Wl(t,e),Jl(t,e,n),t}var sr=new WeakMap,ki=(t,e={})=>{if(typeof t!="function")throw new TypeError("Expected a function");let r,n=0,s=t.displayName||t.name||"<anonymous>",i=function(...a){if(sr.set(i,++n),n===1)r=t.apply(this,a),t=null;else if(e.throw===!0)throw new Error(`Function \`${s}\` can only be called once`);return r};return en(i,t),sr.set(i,n),i};ki.callCount=t=>{if(!sr.has(t))throw new Error(`The given function \`${t.name}\` is not wrapped by the \`onetime\` package`);return sr.get(t)};var Ri=ki;var Li=C("os");var wi=function(){let t=tn-Ai+1;return Array.from({length:t},Vl)},Vl=function(t,e){return{name:`SIGRT${e+1}`,number:Ai+e,action:"terminate",description:"Application-specific signal (realtime)",standard:"posix"}},Ai=34,tn=64;var vi=C("os");var Ti=[{name:"SIGHUP",number:1,action:"terminate",description:"Terminal closed",standard:"posix"},{name:"SIGINT",number:2,action:"terminate",description:"User interruption with CTRL-C",standard:"ansi"},{name:"SIGQUIT",number:3,action:"core",description:"User interruption with CTRL-\\",standard:"posix"},{name:"SIGILL",number:4,action:"core",description:"Invalid machine instruction",standard:"ansi"},{name:"SIGTRAP",number:5,action:"core",description:"Debugger breakpoint",standard:"posix"},{name:"SIGABRT",number:6,action:"core",description:"Aborted",standard:"ansi"},{name:"SIGIOT",number:6,action:"core",description:"Aborted",standard:"bsd"},{name:"SIGBUS",number:7,action:"core",description:"Bus error due to misaligned, non-existing address or paging error",standard:"bsd"},{name:"SIGEMT",number:7,action:"terminate",description:"Command should be emulated but is not implemented",standard:"other"},{name:"SIGFPE",number:8,action:"core",description:"Floating point arithmetic error",standard:"ansi"},{name:"SIGKILL",number:9,action:"terminate",description:"Forced termination",standard:"posix",forced:!0},{name:"SIGUSR1",number:10,action:"terminate",description:"Application-specific signal",standard:"posix"},{name:"SIGSEGV",number:11,action:"core",description:"Segmentation fault",standard:"ansi"},{name:"SIGUSR2",number:12,action:"terminate",description:"Application-specific signal",standard:"posix"},{name:"SIGPIPE",number:13,action:"terminate",description:"Broken pipe or socket",standard:"posix"},{name:"SIGALRM",number:14,action:"terminate",description:"Timeout or timer",standard:"posix"},{name:"SIGTERM",number:15,action:"terminate",description:"Termination",standard:"ansi"},{name:"SIGSTKFLT",number:16,action:"terminate",description:"Stack is empty or overflowed",standard:"other"},{name:"SIGCHLD",number:17,action:"ignore",description:"Child process terminated, paused or unpaused",standard:"posix"},{name:"SIGCLD",number:17,action:"ignore",description:"Child process terminated, paused or unpaused",standard:"other"},{name:"SIGCONT",number:18,action:"unpause",description:"Unpaused",standard:"posix",forced:!0},{name:"SIGSTOP",number:19,action:"pause",description:"Paused",standard:"posix",forced:!0},{name:"SIGTSTP",number:20,action:"pause",description:'Paused using CTRL-Z or "suspend"',standard:"posix"},{name:"SIGTTIN",number:21,action:"pause",description:"Background process cannot read terminal input",standard:"posix"},{name:"SIGBREAK",number:21,action:"terminate",description:"User interruption with CTRL-BREAK",standard:"other"},{name:"SIGTTOU",number:22,action:"pause",description:"Background process cannot write to terminal output",standard:"posix"},{name:"SIGURG",number:23,action:"ignore",description:"Socket received out-of-band data",standard:"bsd"},{name:"SIGXCPU",number:24,action:"core",description:"Process timed out",standard:"bsd"},{name:"SIGXFSZ",number:25,action:"core",description:"File too big",standard:"bsd"},{name:"SIGVTALRM",number:26,action:"terminate",description:"Timeout or timer",standard:"bsd"},{name:"SIGPROF",number:27,action:"terminate",description:"Timeout or timer",standard:"bsd"},{name:"SIGWINCH",number:28,action:"ignore",description:"Terminal window size changed",standard:"bsd"},{name:"SIGIO",number:29,action:"terminate",description:"I/O is available",standard:"other"},{name:"SIGPOLL",number:29,action:"terminate",description:"Watched event",standard:"other"},{name:"SIGINFO",number:29,action:"ignore",description:"Request for process information",standard:"other"},{name:"SIGPWR",number:30,action:"terminate",description:"Device running out of power",standard:"systemv"},{name:"SIGSYS",number:31,action:"core",description:"Invalid system call",standard:"other"},{name:"SIGUNUSED",number:31,action:"terminate",description:"Invalid system call",standard:"other"}];var rn=function(){let t=wi();return[...Ti,...t].map(Ql)},Ql=function({name:t,number:e,description:r,action:n,forced:s=!1,standard:i}){let{signals:{[t]:a}}=vi.constants,o=a!==void 0;return{name:t,number:o?a:e,description:r,supported:o,action:n,forced:s,standard:i}};var Xl=function(){return rn().reduce(Zl,{})},Zl=function(t,{name:e,number:r,description:n,supported:s,action:i,forced:a,standard:o}){return{...t,[e]:{name:e,number:r,description:n,supported:s,action:i,forced:a,standard:o}}},Ii=Xl(),_l=function(){let t=rn(),e=65,r=Array.from({length:e},(n,s)=>$l(s,t));return Object.assign({},...r)},$l=function(t,e){let r=eu(t,e);if(r===void 0)return{};let{name:n,description:s,supported:i,action:a,forced:o,standard:c}=r;return{[t]:{name:n,number:t,description:s,supported:i,action:a,forced:o,standard:c}}},eu=function(t,e){let r=e.find(({name:n})=>Li.constants.signals[n]===t);return r!==void 0?r:e.find(n=>n.number===t)},sg=_l();var tu=({timedOut:t,timeout:e,errorCode:r,signal:n,signalDescription:s,exitCode:i,isCanceled:a})=>t?`timed out after ${e} milliseconds`:a?"was canceled":r!==void 0?`failed with ${r}`:n!==void 0?`was killed with ${n} (${s})`:i!==void 0?`failed with exit code ${i}`:"failed",Ft=({stdout:t,stderr:e,all:r,error:n,signal:s,exitCode:i,command:a,escapedCommand:o,timedOut:c,isCanceled:l,killed:h,parsed:{options:{timeout:f}}})=>{i=i===null?void 0:i,s=s===null?void 0:s;let u=s===void 0?void 0:Ii[s].description,g=n&&n.code,y=`Command ${tu({timedOut:c,timeout:f,errorCode:g,signal:s,signalDescription:u,exitCode:i,isCanceled:l})}: ${a}`,L=Object.prototype.toString.call(n)==="[object Error]",A=L?`${y}
${n.message}`:y,H=[A,e,t].filter(Boolean).join(`
`);return L?(n.originalMessage=n.message,n.message=H):n=new Error(H),n.shortMessage=A,n.command=a,n.escapedCommand=o,n.exitCode=i,n.signal=s,n.signalDescription=u,n.stdout=t,n.stderr=e,r!==void 0&&(n.all=r),"bufferedData"in n&&delete n.bufferedData,n.failed=!0,n.timedOut=!!c,n.isCanceled=l,n.killed=h&&!c,n};var ir=["stdin","stdout","stderr"],ru=t=>ir.some(e=>t[e]!==void 0),Fi=t=>{if(!t)return;let{stdio:e}=t;if(e===void 0)return ir.map(n=>t[n]);if(ru(t))throw new Error(`It's not possible to provide \`stdio\` in combination with one of ${ir.map(n=>`\`${n}\``).join(", ")}`);if(typeof e=="string")return e;if(!Array.isArray(e))throw new TypeError(`Expected \`stdio\` to be of type \`string\` or \`Array\`, got \`${typeof e}\``);let r=Math.max(e.length,ir.length);return Array.from({length:r},(n,s)=>e[s])};var Bi=we(C("os"),1),ji=we(Hi(),1),nu=1e3*5,Mi=(t,e="SIGTERM",r={})=>{let n=t(e);return su(t,e,r,n),n},su=(t,e,r,n)=>{if(!iu(e,r,n))return;let s=ou(r),i=setTimeout(()=>{t("SIGKILL")},s);i.unref&&i.unref()},iu=(t,{forceKillAfterTimeout:e},r)=>au(t)&&e!==!1&&r,au=t=>t===Bi.default.constants.signals.SIGTERM||typeof t=="string"&&t.toUpperCase()==="SIGTERM",ou=({forceKillAfterTimeout:t=!0})=>{if(t===!0)return nu;if(!Number.isFinite(t)||t<0)throw new TypeError(`Expected the \`forceKillAfterTimeout\` option to be a non-negative integer, got \`${t}\` (${typeof t})`);return t},qi=(t,e)=>{t.kill()&&(e.isCanceled=!0)},cu=(t,e,r)=>{t.kill(e),r(Object.assign(new Error("Timed out"),{timedOut:!0,signal:e}))},Gi=(t,{timeout:e,killSignal:r="SIGTERM"},n)=>{if(e===0||e===void 0)return n;let s,i=new Promise((o,c)=>{s=setTimeout(()=>{cu(t,r,c)},e)}),a=n.finally(()=>{clearTimeout(s)});return Promise.race([i,a])},Wi=({timeout:t})=>{if(t!==void 0&&(!Number.isFinite(t)||t<0))throw new TypeError(`Expected the \`timeout\` option to be a non-negative integer, got \`${t}\` (${typeof t})`)},zi=async(t,{cleanup:e,detached:r},n)=>{if(!e||r)return n;let s=(0,ji.default)(()=>{t.kill()});return n.finally(()=>{s()})};function an(t){return t!==null&&typeof t=="object"&&typeof t.pipe=="function"}var un=we(Ji(),1),Xi=we(Qi(),1),Zi=(t,e)=>{e===void 0||t.stdin===void 0||(an(e)?e.pipe(t.stdin):t.stdin.end(e))},_i=(t,{all:e})=>{if(!e||!t.stdout&&!t.stderr)return;let r=(0,Xi.default)();return t.stdout&&r.add(t.stdout),t.stderr&&r.add(t.stderr),r},cn=async(t,e)=>{if(t){t.destroy();try{return await e}catch(r){return r.bufferedData}}},ln=(t,{encoding:e,buffer:r,maxBuffer:n})=>{if(!(!t||!r))return e?(0,un.default)(t,{encoding:e,maxBuffer:n}):un.default.buffer(t,{maxBuffer:n})},$i=async({stdout:t,stderr:e,all:r},{encoding:n,buffer:s,maxBuffer:i},a)=>{let o=ln(t,{encoding:n,buffer:s,maxBuffer:i}),c=ln(e,{encoding:n,buffer:s,maxBuffer:i}),l=ln(r,{encoding:n,buffer:s,maxBuffer:i*2});try{return await Promise.all([a,o,c,l])}catch(h){return Promise.all([{error:h,signal:h.signal,timedOut:h.timedOut},cn(t,o),cn(e,c),cn(r,l)])}},ea=({input:t})=>{if(an(t))throw new TypeError("The `input` option cannot be a stream in sync mode")};var gu=(async()=>{})().constructor.prototype,yu=["then","catch","finally"].map(t=>[t,Reflect.getOwnPropertyDescriptor(gu,t)]),fn=(t,e)=>{for(let[r,n]of yu){let s=typeof e=="function"?(...i)=>Reflect.apply(n.value,e(),i):n.value.bind(e);Reflect.defineProperty(t,r,{...n,value:s})}return t},ta=t=>new Promise((e,r)=>{t.on("exit",(n,s)=>{e({exitCode:n,signal:s})}),t.on("error",n=>{r(n)}),t.stdin&&t.stdin.on("error",n=>{r(n)})});var ra=(t,e=[])=>Array.isArray(e)?[t,...e]:[t],Su=/^[\w.-]+$/,Pu=/"/g,bu=t=>typeof t!="string"||Su.test(t)?t:`"${t.replace(Pu,'\\"')}"`,hn=(t,e)=>ra(t,e).join(" "),pn=(t,e)=>ra(t,e).map(r=>bu(r)).join(" ");var xu=1e3*1e3*100,Eu=({env:t,extendEnv:e,preferLocal:r,localDir:n,execPath:s})=>{let i=e?{...Ct.default.env,...t}:t;return r?Ei({env:i,cwd:n,execPath:s}):i},aa=(t,e,r={})=>{let n=ia.default._parse(t,e,r);return t=n.command,e=n.args,r=n.options,r={maxBuffer:xu,buffer:!0,stripFinalNewline:!0,extendEnv:!0,preferLocal:!1,localDir:r.cwd||Ct.default.cwd(),execPath:Ct.default.execPath,encoding:"utf8",reject:!0,cleanup:!0,all:!1,windowsHide:!0,...r},r.env=Eu(r),r.stdio=Fi(r),Ct.default.platform==="win32"&&sa.default.basename(t,".exe")==="cmd"&&e.unshift("/q"),{file:t,args:e,options:r,parsed:n}},Dt=(t,e,r)=>typeof e!="string"&&!na.Buffer.isBuffer(e)?r===void 0?void 0:"":t.stripFinalNewline?_r(e):e;function oa(t,e,r){let n=aa(t,e,r),s=hn(t,e),i=pn(t,e);Wi(n.options);let a;try{a=fr.default.spawn(n.file,n.args,n.options)}catch(g){let x=new fr.default.ChildProcess,y=Promise.reject(Ft({error:g,stdout:"",stderr:"",all:"",command:s,escapedCommand:i,parsed:n,timedOut:!1,isCanceled:!1,killed:!1}));return fn(x,y)}let o=ta(a),c=Gi(a,n.options,o),l=zi(a,n.options,c),h={isCanceled:!1};a.kill=Mi.bind(null,a.kill.bind(a)),a.cancel=qi.bind(null,a,h);let u=Ri(async()=>{let[{error:g,exitCode:x,signal:y,timedOut:L},A,H,N]=await $i(a,n.options,l),_=Dt(n.options,A),M=Dt(n.options,H),T=Dt(n.options,N);if(g||x!==0||y!==null){let W=Ft({error:g,exitCode:x,signal:y,stdout:_,stderr:M,all:T,command:s,escapedCommand:i,parsed:n,timedOut:L,isCanceled:h.isCanceled||(n.options.signal?n.options.signal.aborted:!1),killed:a.killed});if(!n.options.reject)return W;throw W}return{command:s,escapedCommand:i,exitCode:0,stdout:_,stderr:M,all:T,failed:!1,timedOut:!1,isCanceled:!1,killed:!1}});return Zi(a,n.options.input),a.all=_i(a,n.options),fn(a,u)}function ca(t,e,r){let n=aa(t,e,r),s=hn(t,e),i=pn(t,e);ea(n.options);let a;try{a=fr.default.spawnSync(n.file,n.args,n.options)}catch(l){throw Ft({error:l,stdout:"",stderr:"",all:"",command:s,escapedCommand:i,parsed:n,timedOut:!1,isCanceled:!1,killed:!1})}let o=Dt(n.options,a.stdout,a.error),c=Dt(n.options,a.stderr,a.error);if(a.error||a.status!==0||a.signal!==null){let l=Ft({stdout:o,stderr:c,error:a.error,signal:a.signal,exitCode:a.status,command:s,escapedCommand:i,parsed:n,timedOut:a.error&&a.error.code==="ETIMEDOUT",isCanceled:!1,killed:a.signal!==null});if(!n.options.reject)return l;throw l}return{command:s,escapedCommand:i,exitCode:0,stdout:o,stderr:c,failed:!1,timedOut:!1,isCanceled:!1,killed:!1}}var Fr=C("@yarnpkg/cli"),de=C("@yarnpkg/core"),Le=C("@yarnpkg/fslib"),Je=C("clipanion");var at=C("@yarnpkg/core"),G=C("@yarnpkg/fslib"),is=we(yo()),Pc=we(mc()),bc=C("zlib"),_p=["/package.json","/readme","/readme.*","/license","/license.*","/licence","/licence.*","/changelog","/changelog.*"],$p=["/package.tgz",".github",".git",".hg","node_modules",".npmignore",".gitignore",".#*",".DS_Store"];async function xc(t){return!!(at.scriptUtils.hasWorkspaceScript(t,"prepack")||at.scriptUtils.hasWorkspaceScript(t,"postpack"))}async function Ec(t,{report:e},r){await at.scriptUtils.maybeExecuteWorkspaceLifecycleScript(t,"prepack",{report:e});try{let n=G.ppath.join(t.cwd,at.Manifest.fileName);await G.xfs.existsPromise(n)&&await t.manifest.loadFile(n,{baseFs:G.xfs}),await r()}finally{await at.scriptUtils.maybeExecuteWorkspaceLifecycleScript(t,"postpack",{report:e})}}async function kc(t,e){typeof e>"u"&&(e=await as(t));let r=new Set;for(let i of t.manifest.publishConfig?.executableFiles??new Set)r.add(G.ppath.normalize(i));for(let i of t.manifest.bin.values())r.add(G.ppath.normalize(i));let n=Pc.default.pack();process.nextTick(async()=>{for(let i of e){let a=G.ppath.normalize(i),o=G.ppath.resolve(t.cwd,a),c=G.ppath.join("package",a),l=await G.xfs.lstatPromise(o),h={name:c,mtime:new Date(G.constants.SAFE_TIME*1e3)},f=r.has(a)?493:420,u,g,x=new Promise((L,A)=>{u=L,g=A}),y=L=>{L?g(L):u()};if(l.isFile()){let L;a==="package.json"?L=Buffer.from(JSON.stringify(await ed(t),null,2)):L=await G.xfs.readFilePromise(o),n.entry({...h,mode:f,type:"file"},L,y)}else l.isSymbolicLink()?n.entry({...h,mode:f,type:"symlink",linkname:await G.xfs.readlinkPromise(o)},y):y(new Error(`Unsupported file type ${l.mode} for ${G.npath.fromPortablePath(a)}`));await x}n.finalize()});let s=(0,bc.createGzip)();return n.pipe(s),s}async function ed(t){let e=JSON.parse(JSON.stringify(t.manifest.raw));return await t.project.configuration.triggerHook(r=>r.beforeWorkspacePacking,t,e),e}async function as(t){let e=t.project,r=e.configuration,n={accept:[],reject:[]};for(let f of $p)n.reject.push(f);for(let f of _p)n.accept.push(f);n.reject.push(r.get("rcFilename"));let s=f=>{if(f===null||!f.startsWith(`${t.cwd}/`))return;let u=G.ppath.relative(t.cwd,f),g=G.ppath.resolve(G.PortablePath.root,u);n.reject.push(g)};s(G.ppath.resolve(e.cwd,G.Filename.lockfile)),s(r.get("cacheFolder")),s(r.get("globalFolder")),s(r.get("installStatePath")),s(r.get("virtualFolder")),s(r.get("yarnPath")),await r.triggerHook(f=>f.populateYarnPaths,e,f=>{s(f)});for(let f of e.workspaces){let u=G.ppath.relative(t.cwd,f.cwd);u!==""&&!u.match(/^(\.\.)?\//)&&n.reject.push(`/${u}`)}let i={accept:[],reject:[]},a=t.manifest.publishConfig?.main??t.manifest.main,o=t.manifest.publishConfig?.module??t.manifest.module,c=t.manifest.publishConfig?.browser??t.manifest.browser,l=t.manifest.publishConfig?.bin??t.manifest.bin;a!=null&&i.accept.push(G.ppath.resolve(G.PortablePath.root,a)),o!=null&&i.accept.push(G.ppath.resolve(G.PortablePath.root,o)),typeof c=="string"&&i.accept.push(G.ppath.resolve(G.PortablePath.root,c));for(let f of l.values())i.accept.push(G.ppath.resolve(G.PortablePath.root,f));if(c instanceof Map)for(let[f,u]of c.entries())i.accept.push(G.ppath.resolve(G.PortablePath.root,f)),typeof u=="string"&&i.accept.push(G.ppath.resolve(G.PortablePath.root,u));let h=t.manifest.files!==null;if(h){i.reject.push("/*");for(let f of t.manifest.files)Rc(i.accept,f,{cwd:G.PortablePath.root})}return await td(t.cwd,{hasExplicitFileList:h,globalList:n,ignoreList:i})}async function td(t,{hasExplicitFileList:e,globalList:r,ignoreList:n}){let s=[],i=new G.JailFS(t),a=[[G.PortablePath.root,[n]]];for(;a.length>0;){let[o,c]=a.pop(),l=await i.lstatPromise(o);if(!yc(o,{globalList:r,ignoreLists:l.isDirectory()?null:c}))if(l.isDirectory()){let h=await i.readdirPromise(o),f=!1,u=!1;if(!e||o!==G.PortablePath.root)for(let y of h)f=f||y===".gitignore",u=u||y===".npmignore";let g=u?await gc(i,o,".npmignore"):f?await gc(i,o,".gitignore"):null,x=g!==null?[g].concat(c):c;yc(o,{globalList:r,ignoreLists:c})&&(x=[...c,{accept:[],reject:["**/*"]}]);for(let y of h)a.push([G.ppath.resolve(o,y),x])}else(l.isFile()||l.isSymbolicLink())&&s.push(G.ppath.relative(G.PortablePath.root,o))}return s.sort()}async function gc(t,e,r){let n={accept:[],reject:[]},s=await t.readFilePromise(G.ppath.join(e,r),"utf8");for(let i of s.split(/\n/g))Rc(n.reject,i,{cwd:e});return n}function rd(t,{cwd:e}){let r=t[0]==="!";return r&&(t=t.slice(1)),t.match(/\.{0,1}\//)&&(t=G.ppath.resolve(e,t)),r&&(t=`!${t}`),t}function Rc(t,e,{cwd:r}){let n=e.trim();n===""||n[0]==="#"||t.push(rd(n,{cwd:r}))}function yc(t,{globalList:e,ignoreLists:r}){let n=Ir(t,e.accept);if(n!==0)return n===2;let s=Ir(t,e.reject);if(s!==0)return s===1;if(r!==null)for(let i of r){let a=Ir(t,i.accept);if(a!==0)return a===2;let o=Ir(t,i.reject);if(o!==0)return o===1}return!1}function Ir(t,e){let r=e,n=[];for(let s=0;s<e.length;++s)e[s][0]!=="!"?r!==e&&r.push(e[s]):(r===e&&(r=e.slice(0,s)),n.push(e[s].slice(1)));return Sc(t,n)?2:Sc(t,r)?1:0}function Sc(t,e){let r=e,n=[];for(let s=0;s<e.length;++s)e[s].includes("/")?r!==e&&r.push(e[s]):(r===e&&(r=e.slice(0,s)),n.push(e[s]));return!!(is.default.isMatch(t,r,{dot:!0,nocase:!0})||is.default.isMatch(t,n,{dot:!0,basename:!0,nocase:!0}))}var Xt=class extends Fr.BaseCommand{constructor(){super(...arguments);this.installIfNeeded=Je.Option.Boolean("--install-if-needed",!1,{description:"Run a preliminary `yarn install` if the package contains build scripts"});this.dryRun=Je.Option.Boolean("-n,--dry-run",!1,{description:"Print the file paths without actually generating the package archive"});this.json=Je.Option.Boolean("--json",!1,{description:"Format the output as an NDJSON stream"});this.out=Je.Option.String("-o,--out",{description:"Create the archive at the specified path"});this.filename=Je.Option.String("--filename",{hidden:!0})}static{this.paths=[["nix","pack"]]}static{this.usage=Je.Command.Usage({description:"generate a tarball from the active workspace",details:"\n      This command will turn the active workspace into a compressed archive suitable for publishing. The archive will by default be stored at the root of the workspace (`package.tgz`).\n\n      If the `-o,---out` is set the archive will be created at the specified path. The `%s` and `%v` variables can be used within the path and will be respectively replaced by the package name and version.\n    ",examples:[["Create an archive from the active workspace","yarn pack"],["List the files that would be made part of the workspace's archive","yarn pack --dry-run"],["Name and output the archive in a dedicated folder","yarn pack --out /artifacts/%s-%v.tgz"]]})}async execute(){let r=await de.Configuration.find(this.context.cwd,this.context.plugins),{project:n,workspace:s}=await de.Project.find(r,this.context.cwd);if(!s)throw new Fr.WorkspaceRequiredError(n.cwd,this.context.cwd);process.env.YARNNIX_PACK_DIRECTORY!=null&&(s.cwd=process.env.YARNNIX_PACK_DIRECTORY),await xc(s)&&(this.installIfNeeded?await n.install({cache:await de.Cache.find(r),report:new de.ThrowReport}):await n.restoreInstallState());let i=this.out??this.filename,a=typeof i<"u"?Le.ppath.resolve(this.context.cwd,sd(i,{workspace:s})):Le.ppath.resolve(s.cwd,"package.tgz");return(await de.StreamReport.start({configuration:r,stdout:this.context.stdout,json:this.json},async c=>{await Ec(s,{report:c},async()=>{c.reportJson({base:Le.npath.fromPortablePath(s.cwd)});let l=await as(s);for(let h of l)c.reportInfo(null,Le.npath.fromPortablePath(h)),c.reportJson({location:Le.npath.fromPortablePath(h)});if(!this.dryRun){let h=await kc(s,l),f=Le.xfs.createWriteStream(a);h.pipe(f),await new Promise(u=>{f.on("finish",u)})}}),this.dryRun||(c.reportInfo(de.MessageName.UNNAMED,`Package archive generated in ${de.formatUtils.pretty(r,a,de.formatUtils.Type.PATH)}`),c.reportJson({output:Le.npath.fromPortablePath(a)}))})).exitCode()}};function sd(t,{workspace:e}){let r=t.replace("%s",id(e)).replace("%v",ad(e));return Le.npath.toPortablePath(r)}function id(t){return t.manifest.name!==null?de.structUtils.slugifyIdent(t.manifest.name):"package"}function ad(t){return t.manifest.version!==null?t.manifest.version:"unknown"}var F=C("@yarnpkg/core"),ut=C("@yarnpkg/cli"),Oe=C("@yarnpkg/fslib"),Os=C("@yarnpkg/libzip"),rl=C("@yarnpkg/plugin-pnp"),nl=C("@yarnpkg/plugin-file"),ge=C("clipanion"),bm=wc(),Fe=C("fs"),me=C("path"),{PassThrough:tl}=C("stream"),{spawnSync:Ry}=C("child_process"),{generateInlinedScript:xm}=el(),Rs;function Em(t,e){for(let[r,n]of t.entries())if(n===e)return r}function km(){if(Rs)return Rs;let t=JSON.parse(ca("nix",["eval","--impure","--json","--expr","builtins.currentSystem"]).stdout);return Rs=t,t}async function Rm(t){try{let e=["eval","--json","--impure","--expr",bm+`

        getPackages (import ${t}).packages
      `],{stdout:r}=await oa("nix",e,{stderr:"ignore"});return JSON.parse(r)}catch{return null}}var be=C("typanion"),ws=class extends ut.BaseCommand{constructor(){super(...arguments);this.locator=ge.Option.String({validator:be.isString()});this.outDirectory=ge.Option.String({validator:be.isString()})}static{this.paths=[["nix","fetch-by-locator"]]}async execute(){let r=await F.Configuration.find(process.cwd(),this.context.plugins),{project:n,workspace:s}=await F.Project.find(r,process.cwd()),i=r.makeFetcher(),a=await F.StreamReport.start({configuration:r,stdout:this.context.stdout,includeLogs:!this.context.quiet},async o=>{r.values.set("enableMirror",!1);let c={...JSON.parse(this.locator),locatorHash:"",identHash:""};F.structUtils.isVirtualLocator(c)&&(c=F.structUtils.devirtualizeLocator(c));let l={checksums:new Map,project:n,cache:new F.Cache(this.outDirectory,{check:!1,configuration:r,immutable:!1}),fetcher:i,report:o},h=await i.fetch(c,l);Fe.renameSync(h.packageFs.target,me.join(this.outDirectory,"output.zip"))})}},As=process.env.YARNNIX_DEBUG==="1"||(process.env.DEBUG||"").includes("yarnpnp2nix");function wm(t){try{if(!t)return!0;let e=t.split("&").map(r=>r.trim());for(let r of e){let[n,s]=r.split("=").map(i=>i.trim());if(!(!n||!s)){if(n==="os"){if(({darwin:"darwin",linux:"linux",win32:"win32",freebsd:"freebsd",openbsd:"openbsd",netbsd:"netbsd",sunos:"sunos",android:"android"}[process.platform]||process.platform)!==s)return!1}else if(n==="cpu"){if(({x64:"x64",ia32:"ia32",arm64:"arm64",arm:"arm",ppc64:"ppc64",s390x:"s390x",loong64:"loong64",riscv64:"riscv64"}[process.arch]||process.arch)!==s)return!1}else if(n==="libc"&&(process.env.LIBC||"glibc")!==s)return!1}}return!0}catch{return!0}}var Ts=class extends ut.BaseCommand{constructor(){super(...arguments);this.packageRegistryDataPath=ge.Option.String({validator:be.isString()})}static{this.paths=[["nix","create-lockfile"]]}async execute(){let r=await F.Configuration.find(process.cwd(),this.context.plugins),n=new F.Project(process.cwd(),{configuration:r});await n.setupResolutions();let s=JSON.parse(Fe.readFileSync(this.packageRegistryDataPath,"utf8")),i=Object.values(s).filter(a=>!!a?.manifest);for(let a of i){let o=Object.assign({},a.manifest,{name:a.name,reference:a.reference}),c=new Map,l=new Map(Object.entries(o.bin??{})),h=F.structUtils.makeIdent(o.scope,o.flatName),f=F.structUtils.makeLocator(h,o.reference),u=F.structUtils.makeDescriptor(h,o.descriptorRange);o.locatorHash=f.locatorHash,o.descriptorHash=u.descriptorHash,a.manifest.locatorHash=f.locatorHash,a.manifest.descriptorHash=u.descriptorHash;let g={...f,languageName:o.languageName,linkType:o.linkType,conditions:null,dependencies:c,bin:l};n.originalPackages.set(o.locatorHash,g),n.storedResolutions.set(o.descriptorHash,o.locatorHash),o.checksum!=null&&n.storedChecksums.set(o.locatorHash,o.checksum),n.storedDescriptors.set(o.descriptorHash,u)}for(let a of i){let o=n.originalPackages.get(a.manifest.locatorHash);if(!o)continue;let c=a.packageDependencies??{};for(let l of Object.keys(c)){let[h,f]=c[l],u=i.find(g=>g?.name===h&&g?.reference===f);if(u?.manifest?.descriptorHash!=null){let g=n.storedDescriptors.get(u.manifest.descriptorHash);g!=null&&o.dependencies.set(u.manifest.descriptorHash,g)}}}n.storedPackages=n.originalPackages,await n.persistLockfile()}},vs=class extends ut.BaseCommand{constructor(){super(...arguments);this.locator=ge.Option.String({validator:be.isString()});this.tgzPath=ge.Option.String({validator:be.isString()});this.outPath=ge.Option.String({validator:be.isString()})}static{this.paths=[["nix","convert-to-zip"]]}async execute(){let r=await F.Configuration.find(process.cwd(),this.context.plugins),{project:n,workspace:s}=await F.Project.find(r,process.cwd()),i={...JSON.parse(this.locator),locatorHash:"",identHash:""},{path:a}=await F.tgzUtils.convertToZip(Fe.readFileSync(this.tgzPath),{compressionLevel:n.configuration.get("compressionLevel"),prefixPath:F.structUtils.getIdentVendorPath(i),stripComponents:1});Fe.copyFileSync(a,this.outPath)}},Ls=class extends ut.BaseCommand{constructor(){super(...arguments);this.outDirectory=ge.Option.String({validator:be.isString()});this.packageRegistryDataPath=ge.Option.String({validator:be.isString()});this.topLevelPackageLocator=ge.Option.String({validator:be.isString()})}static{this.paths=[["nix","generate-pnp-file"]]}async execute(){let r=await F.Configuration.find(process.cwd(),this.context.plugins),{project:n,workspace:s}=await F.Project.find(r,process.cwd()),i=(0,rl.getPnpPath)({cwd:this.outDirectory}),a=n.configuration.get("pnpFallbackMode"),o=[],c=a!=="none",l=new Map,h=F.miscUtils.buildIgnorePattern([".yarn/sdks/**",...n.configuration.get("pnpIgnorePatterns")]),f=n.configuration.get("pnpShebang"),u=new Map,g=JSON.parse(Fe.readFileSync(this.packageRegistryDataPath,"utf8")),x=null,y=Fe.realpathSync(this.outDirectory);for(let H of Object.keys(g)){let N=g[H];if(!N)continue;let _=F.structUtils.makeIdent(N.manifest.scope,N.manifest.flatName),M=F.structUtils.makeLocator(_,N.reference),T=F.structUtils.isVirtualLocator(N),W=new Map,O=new Set;for(let m of N.manifest?.packagePeers??[])W.set(m,null),O.add(m);if(N.packageDependencies!=null)for(let m of Object.keys(N.packageDependencies))W.set(m,N.packageDependencies[m]);let K;if(T)if(N.canonicalPackage){let m=N.canonicalPackage.packageLocation??N.canonicalPackage.drvPath+"/node_modules/"+N.canonicalPackage.name,V=me.relative(y,m);K=(V.startsWith("../")?V:"./"+V)+"/"}else{let m=F.structUtils.devirtualizeLocator(M),V=`${F.structUtils.stringifyIdent(m)}@${m.reference}`,X=g[V];if(X){let oe=X.packageLocation??X.drvPath+"/node_modules/"+X.name,d=me.relative(y,oe);K=(d.startsWith("../")?d:"./"+d)+"/"}else{As&&console.warn(`Warning: Cannot find canonical package ${V} for virtual package ${N.name}@${N.reference}, using virtual package location as fallback`);let oe=N.packageLocation??N.drvPath+"/node_modules/"+N.name,d=me.relative(y,oe);K=(d.startsWith("../")?d:"./"+d)+"/"}}else{let m=N.packageLocation??N.drvPath+"/node_modules/"+N.name,V=me.relative(y,m);K=(V.startsWith("../")?V:"./"+V)+"/"}let $={packageLocation:K,packageDependencies:W,packagePeers:O,linkType:N.linkType};F.miscUtils.getMapWithDefault(u,N.name).set(N.reference,$),M.reference.startsWith("workspace:")&&o.push({name:F.structUtils.stringifyIdent(M),reference:M.reference}),`${N.name}@${N.reference}`===this.topLevelPackageLocator&&(x=$)}if(x!=null){F.miscUtils.getMapWithDefault(u,null).set(null,x);let H=g[this.topLevelPackageLocator];if(H&&H.reference&&H.reference.startsWith("workspace:")){let N="workspace:.",_=`${H.name}@${N}`,M={...x,packageLocation:"./"};F.miscUtils.getMapWithDefault(u,H.name).set(N,M),o.push({name:H.name,reference:N})}}else throw new Error("Could not determine topLevelPackage, this is NEEDED for the .pnp.cjs to be correctly generated");let A=xm({dependencyTreeRoots:o,enableTopLevelFallback:c,fallbackExclusionList:a==="dependencies-only"?o:[],fallbackPool:l,ignorePattern:h,packageRegistry:u,shebang:f});await Oe.xfs.changeFilePromise(i.cjs,A,{automaticNewlines:!0,mode:493})}},Is=class extends ut.BaseCommand{constructor(){super(...arguments);this.binWrappersOutDirectory=ge.Option.String({validator:be.isString()});this.pnpOutDirectory=ge.Option.String({validator:be.isString()});this.packageRegistryDataPath=ge.Option.String({validator:be.isString()});this.topLevelPackageLocator=ge.Option.String({validator:be.isString()})}static{this.paths=[["nix","make-path-wrappers"]]}async execute(){let r=JSON.parse(Fe.readFileSync(this.packageRegistryDataPath,"utf8")),n=Fe.realpathSync(this.pnpOutDirectory);for(let s of Object.keys(r)){let i=r[s];if(!i)continue;let a=F.structUtils.makeIdent(i.manifest.scope,i.manifest.flatName),o=F.structUtils.makeLocator(a,i.reference),c=F.structUtils.isVirtualLocator(i),l=i.packageLocation??i.drvPath+"/node_modules/"+i.name,h=me.relative(n,l),f=l;if(`${i.name}@${i.reference}`!==this.topLevelPackageLocator){c&&(f=me.join(n,Oe.VirtualFS.makeVirtualPath("./.yarn/__virtual__",F.structUtils.slugifyLocator(o),h)));for(let g of Object.keys(i?.manifest?.bin??{})){let x=me.join(f,i.manifest.bin[g]);await Oe.xfs.writeFilePromise(me.join(this.binWrappersOutDirectory,g),`node ${x} "$@"`,{mode:493})}}}}},Fs=class extends ut.BaseCommand{constructor(){super(...arguments);this.locator=ge.Option.String({validator:be.isString()});this.pnpRootDirectory=ge.Option.String({validator:be.isString()});this.packageDirectory=ge.Option.String({validator:be.isString()})}static{this.paths=[["nix","run-build-scripts"]]}async execute(){let r=await F.Configuration.find(process.cwd(),this.context.plugins),{project:n,workspace:s}=await F.Project.find(r,process.cwd()),i=JSON.parse(this.locator),a=F.structUtils.makeIdent(i.scope,i.name),o=F.structUtils.makeLocator(a,i.reference),c=n.originalPackages.get(o.locatorHash);n.cwd=this.pnpRootDirectory,n.storedPackages=n.originalPackages;let l=await Os.ZipOpenFS.openPromise(async h=>{let f=n.configuration.getLinkers(),u={project:n,report:new F.StreamReport({stdout:new tl,configuration:r})},g=f.find(A=>A.supportsPackage(c,u));if(!g)throw new Error(`The package ${F.structUtils.prettyLocator(n.configuration,c)} isn't supported by any of the available linkers`);let x=await g.findPackageLocation(c,u),y=new Oe.CwdFS(x,{baseFs:h});return await F.Manifest.find(Oe.PortablePath.dot,{baseFs:y})});for(let h of["preinstall","install","postinstall"]){if(!l.scripts.has(h))continue;let f=await F.scriptUtils.executePackageScript(c,h,[],{cwd:this.packageDirectory,project:n,stdin:process.stdin,stdout:process.stdout,stderr:process.stderr});if(f>0)return f}}},Am={configuration:{yarnpnp2nixManifestPath:{description:"File path for the generated manifest (relative to project root or absolute).",type:F.SettingsType.STRING,default:"yarn-manifest.nix"}},hooks:{afterAllInstalled:async(t,e)=>{let r=t.configuration.getLinkers(),n={project:t,report:null},s=t.configuration.get("yarnpnp2nixManifestPath"),i=s&&s.trim()!==""?s:"yarn-manifest.nix",a=me.isAbsolute(i)?i:me.join(t.cwd,i),o=me.dirname(a),c=me.relative(o,t.cwd),l=c===""?".":c.replace(/\\/g,"/"),h=new Map(r.map(M=>{let T=M.makeInstaller(n),W=M.getCustomDataKey(),O=t.linkersCustomData.get(W);return typeof O<"u"&&T.attachCustomData(O),[M,T]})),f=await F.Cache.find(t.configuration),u=t.configuration.makeFetcher(),g={checksums:new Map,project:t,cache:null,fetcher:u,report:null},x=t.configuration.makeResolver(),y={project:t,report:e.report,resolver:x},L={};for(let[M,T]of t.storedPackages){let W=F.structUtils.isVirtualLocator(T),O=W?t.storedPackages.get(F.structUtils.devirtualizeLocator(T).locatorHash):T,K=r.find(v=>v.supportsPackage(O,n)),$=h.get(K),m=u.getLocalPath(O,g);if(!m){let v=nl.fileUtils.parseSpec(O.reference);if(v?.parentLocator!=null&&v?.path!=null){let B=u.getLocalPath(v.parentLocator,g),U=me.resolve(B,v.path);U!=null&&(m=U)}}let V=m!=null?"./"+me.relative(t.cwd,m):null,X=T.reference.startsWith("workspace:")?`./${T.reference.substring(10)}`:V??null,oe=T.bin!=null?Object.fromEntries(T.bin):null,d=X!=null?!0:$?.shouldBeUnplugged!=null?$.customData.store.get(T.locatorHash)!=null?$.shouldBeUnplugged(T,$.customData.store.get(T.locatorHash),t.getDependencyMeta(F.structUtils.isVirtualLocator(T)?F.structUtils.devirtualizeLocator(T):T,T.version)):!1:!0,S=!X&&!d,le=X!=null&&T.reference.startsWith("patch:"),Q=null;if(T.conditions!=null){let v=T.conditions.split("&").map(U=>U.trim().split("=")),B=[];for(let U of v){let re=U[0],Pe=U[1];if(re==="os")Pe==="linux"?B.push("stdenv.isLinux"):Pe==="darwin"?B.push("stdenv.isDarwin"):B.push("false");else if(re==="cpu"){let Qe={ia32:"stdenv.isi686",x64:"stdenv.isx86_64",arm:"stdenv.isAarch32",arm64:"stdenv.isAarch64"};Qe[Pe]!=null?B.push(Qe[Pe]):B.push("false")}else re==="libc"&&Pe!=="glibc"&&B.push("false")}B.length>0&&(Q=`stdenv: ${B.map(U=>`(${U})`).join(" && ")}`)}let ye=T.dependencies,fe=new Map;if(O.reference.startsWith("workspace:")){let v=await Os.ZipOpenFS.openPromise(async B=>{let U=t.configuration.getLinkers(),re={project:t,report:new F.StreamReport({stdout:new tl,configuration:t.configuration})},Pe=U.find(qe=>qe.supportsPackage(O,re));if(!Pe)throw new Error(`The package ${F.structUtils.prettyLocator(t.configuration,T)} isn't supported by any of the available linkers`);let Qe=await Pe.findPackageLocation(O,re),pe=new Oe.CwdFS(Qe,{baseFs:B});return await F.Manifest.find(Oe.PortablePath.dot,{baseFs:pe})});v!=null&&(ye=new Map,fe=new Map,v.devDependencies&&(Array.from(v.devDependencies).map(([B,U])=>fe.set(B,T.dependencies.get(B))),Array.from(T.dependencies).map(([B,U])=>fe.has(B)?null:ye.set(B,U))))}let k=(await Promise.all(Array.from(ye).map(async([v,B])=>{let U=t.storedResolutions.get(B.descriptorHash),re=U!=null?t.storedPackages.get(U):null;return re?{key:v,name:F.structUtils.stringifyIdent(B),packageManifestId:F.structUtils.stringifyIdent(re)+"@"+re.reference}:null}))).filter(v=>!!v),E=(await Promise.all(Array.from(fe).map(async([v,B])=>{let U=t.storedResolutions.get(B.descriptorHash),re=U!=null?t.storedPackages.get(U):null;return re?{key:v,name:F.structUtils.stringifyIdent(B),packageManifestId:F.structUtils.stringifyIdent(re)+"@"+re.reference}:null}))).filter(v=>!!v),I=[],w=W?O:T;for(let v of w.peerDependencies.values())I.push(F.structUtils.stringifyIdent(v));let R=F.structUtils.stringifyIdent(T)+"@"+T.reference,D=null,q=null;await async function(){if(X!=null&&!le){D=null,q=null;return}else if(S){let v=t.storedChecksums.get(T.locatorHash);v!=null?D=v.includes("/")?v.substring(v.lastIndexOf("/")+1):v:D=null,q=null;return}else if(d){let v=t.storedChecksums.get(T.locatorHash);if(D=v&&v.includes("/")?v.substring(v.lastIndexOf("/")+1):v,!D)if(!wm(T.conditions))As&&console.warn("skip hashing incompatible package",T.name,T.reference);else try{let B=f.getLocatorPath(T,null);D=await F.hashUtils.checksumFile(B)}catch(B){As&&console.warn("error getting outputHash",B?.message)}q=null;return}else{D=null,q=null;return}}();let p=Em(t.storedResolutions,T.locatorHash),z=t.storedDescriptors.get(p),b=t.storedChecksums.get(T.locatorHash),Y=b&&b.includes("/")?b.substring(b.lastIndexOf("/")+1):b;L[R]={isVirtual:W,canonicalPackage:O,name:F.structUtils.stringifyIdent(T),reference:T.reference,linkType:T.linkType,outputName:[F.structUtils.stringifyIdent(T),T.version,T.locatorHash.substring(0,10)].filter(v=>!!v).join("-").replace(/@/g,"").replace(/[\/]/g,"-"),outputHash:D,outputHashByPlatform:q,src:X,shouldBeUnplugged:d,installCondition:Q,bin:oe,flatName:T.name,descriptor:z,languageName:T.languageName,scope:T.scope,checksum:Y,dependencies:k,devDependencies:E,packagePeers:I}}let A=[],H={compressionLevel:t.configuration.get("compressionLevel")};A.push('# This file is generated by running "yarn install" inside your project.'),A.push("# It is essentially a version of yarn.lock that Nix can better understand"),A.push("# Manual changes WILL be lost - proceed with caution!"),A.push("let"),A.push("  settings = {");for(let M of Object.keys(H))A.push(`    ${M} = ${JSON.stringify(H[M])};`);A.push("  };"),A.push("  packages = {");function N(M,T){if(T.length>0){A.push(`      ${M} = {`);for(let W of T)A.push(`        ${JSON.stringify(W.name)} = packages.${JSON.stringify(W.packageManifestId)};`);A.push("      };")}}let _=Object.keys(L).sort((M,T)=>M.localeCompare(T));for(let M of _){let T=L[M];if(A.push(`    "${M}" = {`),A.push(`      name = ${JSON.stringify(T.name)};`),A.push(`      reference = ${JSON.stringify(T.reference)};`),T.isVirtual&&T.canonicalPackage!=null&&A.push(`      canonicalPackage = packages.${JSON.stringify(`${F.structUtils.stringifyIdent(T.canonicalPackage)}@${T.canonicalPackage.reference}`)};`),!T.isVirtual){if(A.push(`      linkType = ${JSON.stringify(T.linkType)};`),A.push(`      outputName = ${JSON.stringify(T.outputName)};`),T.outputHash!=null&&A.push(`      outputHash = ${JSON.stringify(T.outputHash)};`),T.outputHashByPlatform&&Object.keys(T.outputHashByPlatform).length>0){A.push("      outputHashByPlatform = {");for(let W of Object.keys(T.outputHashByPlatform))A.push(`        ${JSON.stringify(W)} = ${JSON.stringify(T.outputHashByPlatform[W])};`);A.push("      };")}if(T.src){let W=/[^a-zA-Z0-9/+.=_-]/g,O=T.src.startsWith("./")?T.src.substring(2):T.src,K=l==="."?"":l,$=(K?K+"/"+O:O).replace(/\\/g,"/"),m=W.test(O)?`builtins.path { name = "${me.basename(O).replace(W,"__")}"; path = ./\${"${$.replace(/\"/g,'\\"')}"}; }`:`./${$}`;A.push(`      src = ${m};`)}if(T.shouldBeUnplugged&&A.push(`      shouldBeUnplugged = ${T.shouldBeUnplugged};`),T.installCondition&&A.push(`      installCondition = ${T.installCondition};`),A.push(`      flatName = ${JSON.stringify(T.flatName)};`),A.push(`      languageName = ${JSON.stringify(T.languageName)};`),A.push(`      scope = ${JSON.stringify(T.scope)};`),A.push(`      descriptorRange = ${JSON.stringify(T.descriptor.range)};`),T.checksum&&A.push(`      checksum = ${JSON.stringify(T.checksum)};`),T.bin&&Object.keys(T.bin).length>0){A.push("      bin = {");for(let W of Object.keys(T.bin))A.push(`        ${JSON.stringify(W)} = ${JSON.stringify(T.bin[W])};`);A.push("      };")}}if(N("dependencies",T.dependencies),N("devDependencies",T.devDependencies),T.packagePeers&&T.packagePeers.length>0){A.push("      packagePeers = [");for(let W of T.packagePeers)A.push(`        ${JSON.stringify(W)}`);A.push("      ];")}A.push("    };")}A.push("  };"),A.push("in"),A.push("{ inherit packages; inherit settings; }"),A.push(""),Fe.mkdirSync(o,{recursive:!0}),Fe.writeFileSync(a,A.join(`
`),"utf8")},populateYarnPaths:async t=>{let e=process.env.YARNNIX_PACKAGE_REGISTRY_DATA_PATH;if(e){let r=JSON.parse(Fe.readFileSync(e,"utf8")),n=Object.values(r).filter(s=>!!s?.manifest);for(let s of n)if(s.canonicalReference.startsWith("workspace:")&&s.drvPath!=="/dev/null"&&s.drvPath!==process.env.out){let i=s.packageLocation??me.join(s.drvPath,"node_modules",s.name),a=new F.Workspace(i,{project:t});await a.setup(),await t.addWorkspace(a)}}}},commands:[Ts,ws,vs,Ls,Is,Fs,Xt]};return fl(Tm);})();
/*! Bundled license information:

is-number/index.js:
  (*!
   * is-number <https://github.com/jonschlinkert/is-number>
   *
   * Copyright (c) 2014-present, Jon Schlinkert.
   * Released under the MIT License.
   *)

to-regex-range/index.js:
  (*!
   * to-regex-range <https://github.com/micromatch/to-regex-range>
   *
   * Copyright (c) 2015-present, Jon Schlinkert.
   * Released under the MIT License.
   *)

fill-range/index.js:
  (*!
   * fill-range <https://github.com/jonschlinkert/fill-range>
   *
   * Copyright (c) 2014-present, Jon Schlinkert.
   * Licensed under the MIT License.
   *)

@yarnpkg/pnp/lib/index.js:
  (**
    @license
    Copyright Node.js contributors. All rights reserved.
  
    Permission is hereby granted, free of charge, to any person obtaining a copy
    of this software and associated documentation files (the "Software"), to
    deal in the Software without restriction, including without limitation the
    rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
    sell copies of the Software, and to permit persons to whom the Software is
    furnished to do so, subject to the following conditions:
  
    The above copyright notice and this permission notice shall be included in
    all copies or substantial portions of the Software.
  
    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
    IN THE SOFTWARE.
  *)
  (**
    @license
    The MIT License (MIT)
  
    Copyright (c) 2014 Blake Embrey (hello@blakeembrey.com)
  
    Permission is hereby granted, free of charge, to any person obtaining a copy
    of this software and associated documentation files (the "Software"), to deal
    in the Software without restriction, including without limitation the rights
    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
    copies of the Software, and to permit persons to whom the Software is
    furnished to do so, subject to the following conditions:
  
    The above copyright notice and this permission notice shall be included in
    all copies or substantial portions of the Software.
  
    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
    THE SOFTWARE.
  *)
*/
return plugin;
}
};
